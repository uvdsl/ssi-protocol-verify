File "ssipv.pv", line 161, characters 22-25:
Warning: identifier attr rebound.
Linear part:
exp(g(x),y) = exp(g(y),x)
Completing equations...
Completed equations:
exp(g(x),y) = exp(g(y),x)
Convergent part: No equation.
Process 0 (that is, the initial process):
{1}new sk_I: SecretKey;
{2}new sk_V: SecretKey;
{3}new sk_P: SecretKey;
{4}out(h, pk(sk_I));
{5}out(h, pk(sk_V));
{6}out(h, pk(sk_P));
{7}let DID_I: DID = genDID(pk(sk_I),sk_I) in
{8}let DID_V: DID = genDID(pk(sk_V),sk_V) in
{9}let DID_P: DID = genDID(pk(sk_P),sk_P) in
{10}let DID_E: DID = genDID(pk(sk_E),sk_E) in
{11}out(h, DID_I);
{12}out(h, DID_V);
{13}out(h, DID_P);
{14}out(h, DID_E);
{15}let rule_PI: bitstring = (DID_P,attr,DID_I) in
{16}let rule_EI: bitstring = (DID_E,attr,DID_I) in
{17}let rule_PE: bitstring = (DID_P,attr,DID_E) in
{18}let rule_EE: bitstring = (DID_E,attr,DID_E) in
(
    {19}!
    {20}let sk_I_1: SecretKey = sk_I in
    {21}let attr_1: bitstring = attr in
    {22}let pk_P: PublicKey = pk(sk_P) in
    {23}let talksOnlyToHonest: bool = true in
    {24}in(h, m_0: bitstring);
    {25}let gx: G = unbitG(m_0) in
    {26}new y: exponent;
    {27}let gy: G = g(y) in
    {28}let K: SymmetricKey = GtoSymK(exp(gx,y)) in
    {29}let m'_1: bitstring = sig((gy,gx),sk_I_1) in
    {30}let m_1: bitstring = (bitG(gy),enc(m'_1,K)) in
    {31}out(h, m_1);
    {32}in(h, m_2: bitstring);
    {33}let (s_K: bitstring,DID'_P: DID,DID'_I: DID,n_h: bitstring) = dec(m_2,K) in
    {34}if check((gx,gy),s_K,pk_P) then
    {35}if ((DID'_P,DID'_I) = (DID_P,DID_I)) then
    {36}let claims: bitstring = (DID_P,attr_1,DID_I) in
    {37}let VC: bitstring = (claims,sig(claims,sk_I_1)) in
    {38}let m'_3: bitstring = ((VC,DID_P,n_h),sig((VC,DID_P,n_h),sk_I_1)) in
    {39}let m_3: bitstring = enc(m'_3,K) in
    {40}event auth_IssuerSendsLastMessageToHolder(m_0,m_1,m_2,m_3);
    {41}out(h, m_3);
    {42}out(h, Issuer_Completes);
    {43}if talksOnlyToHonest then
    (
        {44}event auth_IssuerCompletesProtocol(m_0,m_1,m_2)
    ) | (
        {45}out(ch(m'_1), m'_1_fromIssuer)
    ) | (
        {46}out(ch(VC), cred_fromIssuer)
    ) | (
        {47}out(ch(m'_3), m'_3_fromIssuer)
    )
) | (
    {48}!
    {49}let sk_I_2: SecretKey = sk_I in
    {50}let attr_2: bitstring = attr in
    {51}let pk_P_1: PublicKey = pk(sk_E) in
    {52}let talksOnlyToHonest_1: bool = false in
    {53}in(h, m_0_1: bitstring);
    {54}let gx_1: G = unbitG(m_0_1) in
    {55}new y_1: exponent;
    {56}let gy_1: G = g(y_1) in
    {57}let K_1: SymmetricKey = GtoSymK(exp(gx_1,y_1)) in
    {58}let m': bitstring = sig((gy_1,gx_1),sk_I_2) in
    {59}let m: bitstring = (bitG(gy_1),enc(m',K_1)) in
    {60}out(h, m);
    {61}in(h, m_4: bitstring);
    {62}let (s_K_1: bitstring,DID'_P_1: DID,DID'_I_1: DID,n_h_1: bitstring) = dec(m_4,K_1) in
    {63}if check((gx_1,gy_1),s_K_1,pk_P_1) then
    {64}if ((DID'_P_1,DID'_I_1) = (DID_E,DID_I)) then
    {65}let claims_1: bitstring = (DID_E,attr_2,DID_I) in
    {66}let VC_1: bitstring = (claims_1,sig(claims_1,sk_I_2)) in
    {67}let m'_2: bitstring = ((VC_1,DID_E,n_h_1),sig((VC_1,DID_E,n_h_1),sk_I_2)) in
    {68}let m_5: bitstring = enc(m'_2,K_1) in
    {69}event auth_IssuerSendsLastMessageToHolder(m_0_1,m,m_4,m_5);
    {70}out(h, m_5);
    {71}out(h, Issuer_Completes);
    {72}if talksOnlyToHonest_1 then
    (
        {73}event auth_IssuerCompletesProtocol(m_0_1,m,m_4)
    ) | (
        {74}out(ch(m'), m'_1_fromIssuer)
    ) | (
        {75}out(ch(VC_1), cred_fromIssuer)
    ) | (
        {76}out(ch(m'_2), m'_3_fromIssuer)
    )
) | (
    {77}!
    {78}let sk_P_1: SecretKey = sk_P in
    {79}let pk_I: PublicKey = pk(sk_I) in
    {80}let pk_V: PublicKey = pk(sk_V) in
    {81}let talksOnlyToHonest_2: bool = true in
    {82}new x: exponent;
    {83}let gx_2: G = g(x) in
    {84}let m'_0: bitstring = bitG(gx_2) in
    {85}let m_0_2: bitstring = m'_0 in
    {86}out(h, m_0_2);
    {87}in(h, m_6: bitstring);
    {88}let (eGY: bitstring,m_7: bitstring) = m_6 in
    {89}let gy_2: G = unbitG(eGY) in
    {90}let K_2: SymmetricKey = GtoSymK(exp(gy_2,x)) in
    {91}let s_K_2: bitstring = dec(m_7,K_2) in
    {92}if check((gy_2,gx_2),s_K_2,pk_I) then
    {93}new n_i: bitstring;
    {94}let m'_4: bitstring = (sig((gx_2,gy_2),sk_P_1),DID_P,DID_I,n_i) in
    {95}let m_8: bitstring = enc(m'_4,K_2) in
    {96}event auth_HolderSendsLastMessageToIssuer(m_0_2,m_6,m_8);
    {97}out(h, m_8);
    {98}in(h, m_9: bitstring);
    {99}let ((((DID'_P_2: DID,attr': bitstring,DID'_I_2: DID),sigVal_I: bitstring),DID''_P: DID,n'_h: bitstring),sigVal'_I: bitstring) = dec(m_9,K_2) in
    {100}if check((((DID'_P_2,attr',DID'_I_2),sigVal_I),DID''_P,n'_h),sigVal'_I,pk_I) then
    {101}if ((DID''_P,n'_h) = (DID_P,n_i)) then
    {102}if check((DID'_P_2,attr',DID'_I_2),sigVal_I,pk_I) then
    {103}if ((DID'_P_2,DID'_I_2) = (DID_P,DID_I)) then
    {104}out(h, Holder_Completes);
    (
        {105}!
        {106}let VC_2: bitstring = ((DID'_P_2,attr',DID'_I_2),sigVal_I) in
        {107}new x_1: exponent;
        {108}let gx_3: G = g(x_1) in
        {109}let m'_5: bitstring = bitG(gx_3) in
        {110}let m_10: bitstring = m'_5 in
        {111}out(h, m_10);
        {112}in(h, m_11: bitstring);
        {113}let (eGY_1: bitstring,m_12: bitstring) = m_11 in
        {114}let gy_3: G = unbitG(eGY_1) in
        {115}let K_3: SymmetricKey = GtoSymK(exp(gy_3,x_1)) in
        {116}let s_K_3: bitstring = dec(m_12,K_3) in
        {117}if check((gy_3,gx_3),s_K_3,pk_V) then
        {118}let m'_6: bitstring = uri in
        {119}let m_13: bitstring = enc(m'_6,K_3) in
        {120}out(h, m_13);
        {121}in(h, m_14: bitstring);
        {122}let (n_c: bitstring,rule: bitstring) = dec(m_14,K_3) in
        {123}let (claims_2: bitstring,sigVal_VC: bitstring) = VC_2 in
        {124}if (claims_2 = rule) then
        {125}let m''_8: bitstring = ((gx_3,gy_3),n_c,DID_V,VC_2) in
        {126}let m'_8: bitstring = (m''_8,sig(m''_8,sk_P_1)) in
        {127}let m_15: bitstring = enc(m'_8,K_3) in
        {128}event auth_ProverSendsLastMessageToVerifier(m_10,m_11,m_13,m_14,m_15);
        {129}event auth_ProverSendsLastMessageToVerifierInProtocolFull(m_0_2,m_6,m_8,m_9,m_10,m_11,m_13,m_14,m_15);
        {130}out(h, m_15);
        {131}in(h, m_16: bitstring);
        {132}let (tkn_access: bitstring,sigVal_tkn: bitstring) = dec(m_16,K_3) in
        {133}if check(tkn_access,sigVal_tkn,pk_V) then
        {134}out(h, Prover_Completes);
        {135}if talksOnlyToHonest_2 then
        (
            {136}event auth_ProverCompletesProtocol(m_10,m_11,m_13,m_14,m_15,m_16)
        ) | (
            {137}out(ch(m'_5), m'_4_fromProver)
        ) | (
            {138}out(ch(m'_6), m'_6_fromProver)
        ) | (
            {139}out(ch(m'_8), m'_8_fromProver)
        ) | (
            {140}out(ch(VC_2), cred_fromProver)
        ) | (
            {141}out(ch(tkn_access), access_token_fromProver)
        )
    ) | (
        {142}if talksOnlyToHonest_2 then
        (
            {143}event auth_HolderCompletesProtocol(m_0_2,m_6,m_8,m_9)
        ) | (
            {144}out(ch(m'_0), m'_0_fromHolder)
        ) | (
            {145}out(ch(m'_4), m'_2_fromHolder)
        ) | (
            {146}out(ch(((DID'_P_2,attr',DID'_I_2),sigVal_I)), cred_fromHolder)
        )
    )
) | (
    {147}!
    {148}let sk_P_2: SecretKey = sk_P in
    {149}let pk_I_1: PublicKey = pk(sk_I) in
    {150}let pk_V_1: PublicKey = pk(sk_E) in
    {151}let talksOnlyToHonest_3: bool = false in
    {152}new x_2: exponent;
    {153}let gx_4: G = g(x_2) in
    {154}let m'_0_1: bitstring = bitG(gx_4) in
    {155}let m_0_3: bitstring = m'_0_1 in
    {156}out(h, m_0_3);
    {157}in(h, m_17: bitstring);
    {158}let (eGY_2: bitstring,m_18: bitstring) = m_17 in
    {159}let gy_4: G = unbitG(eGY_2) in
    {160}let K_4: SymmetricKey = GtoSymK(exp(gy_4,x_2)) in
    {161}let s_K_4: bitstring = dec(m_18,K_4) in
    {162}if check((gy_4,gx_4),s_K_4,pk_I_1) then
    {163}new n_i_1: bitstring;
    {164}let m'_7: bitstring = (sig((gx_4,gy_4),sk_P_2),DID_P,DID_I,n_i_1) in
    {165}let m_19: bitstring = enc(m'_7,K_4) in
    {166}event auth_HolderSendsLastMessageToIssuer(m_0_3,m_17,m_19);
    {167}out(h, m_19);
    {168}in(h, m_20: bitstring);
    {169}let ((((DID'_P_3: DID,attr'_1: bitstring,DID'_I_3: DID),sigVal_I_1: bitstring),DID''_P_1: DID,n'_h_1: bitstring),sigVal'_I_1: bitstring) = dec(m_20,K_4) in
    {170}if check((((DID'_P_3,attr'_1,DID'_I_3),sigVal_I_1),DID''_P_1,n'_h_1),sigVal'_I_1,pk_I_1) then
    {171}if ((DID''_P_1,n'_h_1) = (DID_P,n_i_1)) then
    {172}if check((DID'_P_3,attr'_1,DID'_I_3),sigVal_I_1,pk_I_1) then
    {173}if ((DID'_P_3,DID'_I_3) = (DID_P,DID_I)) then
    {174}out(h, Holder_Completes);
    (
        {175}!
        {176}let VC_3: bitstring = ((DID'_P_3,attr'_1,DID'_I_3),sigVal_I_1) in
        {177}new x_3: exponent;
        {178}let gx_5: G = g(x_3) in
        {179}let m'_9: bitstring = bitG(gx_5) in
        {180}let m_21: bitstring = m'_9 in
        {181}out(h, m_21);
        {182}in(h, m_22: bitstring);
        {183}let (eGY_3: bitstring,m_23: bitstring) = m_22 in
        {184}let gy_5: G = unbitG(eGY_3) in
        {185}let K_5: SymmetricKey = GtoSymK(exp(gy_5,x_3)) in
        {186}let s_K_5: bitstring = dec(m_23,K_5) in
        {187}if check((gy_5,gx_5),s_K_5,pk_V_1) then
        {188}let m'_10: bitstring = uri in
        {189}let m_24: bitstring = enc(m'_10,K_5) in
        {190}out(h, m_24);
        {191}in(h, m_25: bitstring);
        {192}let (n_c_1: bitstring,rule_1: bitstring) = dec(m_25,K_5) in
        {193}let (claims_3: bitstring,sigVal_VC_1: bitstring) = VC_3 in
        {194}if (claims_3 = rule_1) then
        {195}let m'': bitstring = ((gx_5,gy_5),n_c_1,DID_E,VC_3) in
        {196}let m'_11: bitstring = (m'',sig(m'',sk_P_2)) in
        {197}let m_26: bitstring = enc(m'_11,K_5) in
        {198}event auth_ProverSendsLastMessageToVerifier(m_21,m_22,m_24,m_25,m_26);
        {199}event auth_ProverSendsLastMessageToVerifierInProtocolFull(m_0_3,m_17,m_19,m_20,m_21,m_22,m_24,m_25,m_26);
        {200}out(h, m_26);
        {201}in(h, m_27: bitstring);
        {202}let (tkn_access_1: bitstring,sigVal_tkn_1: bitstring) = dec(m_27,K_5) in
        {203}if check(tkn_access_1,sigVal_tkn_1,pk_V_1) then
        {204}out(h, Prover_Completes);
        {205}if talksOnlyToHonest_3 then
        (
            {206}event auth_ProverCompletesProtocol(m_21,m_22,m_24,m_25,m_26,m_27)
        ) | (
            {207}out(ch(m'_9), m'_4_fromProver)
        ) | (
            {208}out(ch(m'_10), m'_6_fromProver)
        ) | (
            {209}out(ch(m'_11), m'_8_fromProver)
        ) | (
            {210}out(ch(VC_3), cred_fromProver)
        ) | (
            {211}out(ch(tkn_access_1), access_token_fromProver)
        )
    ) | (
        {212}if talksOnlyToHonest_3 then
        (
            {213}event auth_HolderCompletesProtocol(m_0_3,m_17,m_19,m_20)
        ) | (
            {214}out(ch(m'_0_1), m'_0_fromHolder)
        ) | (
            {215}out(ch(m'_7), m'_2_fromHolder)
        ) | (
            {216}out(ch(((DID'_P_3,attr'_1,DID'_I_3),sigVal_I_1)), cred_fromHolder)
        )
    )
) | (
    {217}!
    {218}let sk_P_3: SecretKey = sk_P in
    {219}let pk_I_2: PublicKey = pk(sk_E) in
    {220}let pk_V_2: PublicKey = pk(sk_V) in
    {221}let talksOnlyToHonest_4: bool = false in
    {222}new x_4: exponent;
    {223}let gx_6: G = g(x_4) in
    {224}let m'_0_2: bitstring = bitG(gx_6) in
    {225}let m_0_4: bitstring = m'_0_2 in
    {226}out(h, m_0_4);
    {227}in(h, m_28: bitstring);
    {228}let (eGY_4: bitstring,m_29: bitstring) = m_28 in
    {229}let gy_6: G = unbitG(eGY_4) in
    {230}let K_6: SymmetricKey = GtoSymK(exp(gy_6,x_4)) in
    {231}let s_K_6: bitstring = dec(m_29,K_6) in
    {232}if check((gy_6,gx_6),s_K_6,pk_I_2) then
    {233}new n_i_2: bitstring;
    {234}let m'_12: bitstring = (sig((gx_6,gy_6),sk_P_3),DID_P,DID_E,n_i_2) in
    {235}let m_30: bitstring = enc(m'_12,K_6) in
    {236}event auth_HolderSendsLastMessageToIssuer(m_0_4,m_28,m_30);
    {237}out(h, m_30);
    {238}in(h, m_31: bitstring);
    {239}let ((((DID'_P_4: DID,attr'_2: bitstring,DID'_I_4: DID),sigVal_I_2: bitstring),DID''_P_2: DID,n'_h_2: bitstring),sigVal'_I_2: bitstring) = dec(m_31,K_6) in
    {240}if check((((DID'_P_4,attr'_2,DID'_I_4),sigVal_I_2),DID''_P_2,n'_h_2),sigVal'_I_2,pk_I_2) then
    {241}if ((DID''_P_2,n'_h_2) = (DID_P,n_i_2)) then
    {242}if check((DID'_P_4,attr'_2,DID'_I_4),sigVal_I_2,pk_I_2) then
    {243}if ((DID'_P_4,DID'_I_4) = (DID_P,DID_E)) then
    {244}out(h, Holder_Completes);
    (
        {245}!
        {246}let VC_4: bitstring = ((DID'_P_4,attr'_2,DID'_I_4),sigVal_I_2) in
        {247}new x_5: exponent;
        {248}let gx_7: G = g(x_5) in
        {249}let m'_13: bitstring = bitG(gx_7) in
        {250}let m_32: bitstring = m'_13 in
        {251}out(h, m_32);
        {252}in(h, m_33: bitstring);
        {253}let (eGY_5: bitstring,m_34: bitstring) = m_33 in
        {254}let gy_7: G = unbitG(eGY_5) in
        {255}let K_7: SymmetricKey = GtoSymK(exp(gy_7,x_5)) in
        {256}let s_K_7: bitstring = dec(m_34,K_7) in
        {257}if check((gy_7,gx_7),s_K_7,pk_V_2) then
        {258}let m'_14: bitstring = uri in
        {259}let m_35: bitstring = enc(m'_14,K_7) in
        {260}out(h, m_35);
        {261}in(h, m_36: bitstring);
        {262}let (n_c_2: bitstring,rule_2: bitstring) = dec(m_36,K_7) in
        {263}let (claims_4: bitstring,sigVal_VC_2: bitstring) = VC_4 in
        {264}if (claims_4 = rule_2) then
        {265}let m''_1: bitstring = ((gx_7,gy_7),n_c_2,DID_V,VC_4) in
        {266}let m'_15: bitstring = (m''_1,sig(m''_1,sk_P_3)) in
        {267}let m_37: bitstring = enc(m'_15,K_7) in
        {268}event auth_ProverSendsLastMessageToVerifier(m_32,m_33,m_35,m_36,m_37);
        {269}event auth_ProverSendsLastMessageToVerifierInProtocolFull(m_0_4,m_28,m_30,m_31,m_32,m_33,m_35,m_36,m_37);
        {270}out(h, m_37);
        {271}in(h, m_38: bitstring);
        {272}let (tkn_access_2: bitstring,sigVal_tkn_2: bitstring) = dec(m_38,K_7) in
        {273}if check(tkn_access_2,sigVal_tkn_2,pk_V_2) then
        {274}out(h, Prover_Completes);
        {275}if talksOnlyToHonest_4 then
        (
            {276}event auth_ProverCompletesProtocol(m_32,m_33,m_35,m_36,m_37,m_38)
        ) | (
            {277}out(ch(m'_13), m'_4_fromProver)
        ) | (
            {278}out(ch(m'_14), m'_6_fromProver)
        ) | (
            {279}out(ch(m'_15), m'_8_fromProver)
        ) | (
            {280}out(ch(VC_4), cred_fromProver)
        ) | (
            {281}out(ch(tkn_access_2), access_token_fromProver)
        )
    ) | (
        {282}if talksOnlyToHonest_4 then
        (
            {283}event auth_HolderCompletesProtocol(m_0_4,m_28,m_30,m_31)
        ) | (
            {284}out(ch(m'_0_2), m'_0_fromHolder)
        ) | (
            {285}out(ch(m'_12), m'_2_fromHolder)
        ) | (
            {286}out(ch(((DID'_P_4,attr'_2,DID'_I_4),sigVal_I_2)), cred_fromHolder)
        )
    )
) | (
    {287}!
    {288}let sk_P_4: SecretKey = sk_P in
    {289}let pk_I_3: PublicKey = pk(sk_E) in
    {290}let pk_V_3: PublicKey = pk(sk_E) in
    {291}let talksOnlyToHonest_5: bool = false in
    {292}new x_6: exponent;
    {293}let gx_8: G = g(x_6) in
    {294}let m'_0_3: bitstring = bitG(gx_8) in
    {295}let m_0_5: bitstring = m'_0_3 in
    {296}out(h, m_0_5);
    {297}in(h, m_39: bitstring);
    {298}let (eGY_6: bitstring,m_40: bitstring) = m_39 in
    {299}let gy_8: G = unbitG(eGY_6) in
    {300}let K_8: SymmetricKey = GtoSymK(exp(gy_8,x_6)) in
    {301}let s_K_8: bitstring = dec(m_40,K_8) in
    {302}if check((gy_8,gx_8),s_K_8,pk_I_3) then
    {303}new n_i_3: bitstring;
    {304}let m'_16: bitstring = (sig((gx_8,gy_8),sk_P_4),DID_P,DID_E,n_i_3) in
    {305}let m_41: bitstring = enc(m'_16,K_8) in
    {306}event auth_HolderSendsLastMessageToIssuer(m_0_5,m_39,m_41);
    {307}out(h, m_41);
    {308}in(h, m_42: bitstring);
    {309}let ((((DID'_P_5: DID,attr'_3: bitstring,DID'_I_5: DID),sigVal_I_3: bitstring),DID''_P_3: DID,n'_h_3: bitstring),sigVal'_I_3: bitstring) = dec(m_42,K_8) in
    {310}if check((((DID'_P_5,attr'_3,DID'_I_5),sigVal_I_3),DID''_P_3,n'_h_3),sigVal'_I_3,pk_I_3) then
    {311}if ((DID''_P_3,n'_h_3) = (DID_P,n_i_3)) then
    {312}if check((DID'_P_5,attr'_3,DID'_I_5),sigVal_I_3,pk_I_3) then
    {313}if ((DID'_P_5,DID'_I_5) = (DID_P,DID_E)) then
    {314}out(h, Holder_Completes);
    (
        {315}!
        {316}let VC_5: bitstring = ((DID'_P_5,attr'_3,DID'_I_5),sigVal_I_3) in
        {317}new x_7: exponent;
        {318}let gx_9: G = g(x_7) in
        {319}let m'_17: bitstring = bitG(gx_9) in
        {320}let m_43: bitstring = m'_17 in
        {321}out(h, m_43);
        {322}in(h, m_44: bitstring);
        {323}let (eGY_7: bitstring,m_45: bitstring) = m_44 in
        {324}let gy_9: G = unbitG(eGY_7) in
        {325}let K_9: SymmetricKey = GtoSymK(exp(gy_9,x_7)) in
        {326}let s_K_9: bitstring = dec(m_45,K_9) in
        {327}if check((gy_9,gx_9),s_K_9,pk_V_3) then
        {328}let m'_18: bitstring = uri in
        {329}let m_46: bitstring = enc(m'_18,K_9) in
        {330}out(h, m_46);
        {331}in(h, m_47: bitstring);
        {332}let (n_c_3: bitstring,rule_3: bitstring) = dec(m_47,K_9) in
        {333}let (claims_5: bitstring,sigVal_VC_3: bitstring) = VC_5 in
        {334}if (claims_5 = rule_3) then
        {335}let m''_2: bitstring = ((gx_9,gy_9),n_c_3,DID_E,VC_5) in
        {336}let m'_19: bitstring = (m''_2,sig(m''_2,sk_P_4)) in
        {337}let m_48: bitstring = enc(m'_19,K_9) in
        {338}event auth_ProverSendsLastMessageToVerifier(m_43,m_44,m_46,m_47,m_48);
        {339}event auth_ProverSendsLastMessageToVerifierInProtocolFull(m_0_5,m_39,m_41,m_42,m_43,m_44,m_46,m_47,m_48);
        {340}out(h, m_48);
        {341}in(h, m_49: bitstring);
        {342}let (tkn_access_3: bitstring,sigVal_tkn_3: bitstring) = dec(m_49,K_9) in
        {343}if check(tkn_access_3,sigVal_tkn_3,pk_V_3) then
        {344}out(h, Prover_Completes);
        {345}if talksOnlyToHonest_5 then
        (
            {346}event auth_ProverCompletesProtocol(m_43,m_44,m_46,m_47,m_48,m_49)
        ) | (
            {347}out(ch(m'_17), m'_4_fromProver)
        ) | (
            {348}out(ch(m'_18), m'_6_fromProver)
        ) | (
            {349}out(ch(m'_19), m'_8_fromProver)
        ) | (
            {350}out(ch(VC_5), cred_fromProver)
        ) | (
            {351}out(ch(tkn_access_3), access_token_fromProver)
        )
    ) | (
        {352}if talksOnlyToHonest_5 then
        (
            {353}event auth_HolderCompletesProtocol(m_0_5,m_39,m_41,m_42)
        ) | (
            {354}out(ch(m'_0_3), m'_0_fromHolder)
        ) | (
            {355}out(ch(m'_16), m'_2_fromHolder)
        ) | (
            {356}out(ch(((DID'_P_5,attr'_3,DID'_I_5),sigVal_I_3)), cred_fromHolder)
        )
    )
) | (
    {357}!
    {358}let sk_V_1: SecretKey = sk_V in
    {359}let pk_P_2: PublicKey = pk(sk_P) in
    {360}let pk_I_4: PublicKey = pk(sk_I) in
    {361}let talksOnlyToHonest_6: bool = true in
    {362}let (DID_P_1: DID,attr_3: bitstring,DID_I_1: DID) = rule_PI in
    {363}in(h, m_50: bitstring);
    {364}let gx_10: G = unbitG(m_50) in
    {365}new y_2: exponent;
    {366}let gy_10: G = g(y_2) in
    {367}let K_10: SymmetricKey = GtoSymK(exp(gx_10,y_2)) in
    {368}let m'_20: bitstring = sig((gy_10,gx_10),sk_V_1) in
    {369}let m_51: bitstring = (bitG(gy_10),enc(m'_20,K_10)) in
    {370}out(h, m_51);
    {371}in(h, m_52: bitstring);
    {372}let uri': bitstring = dec(m_52,K_10) in
    {373}if (uri' = uri) then
    {374}new n_c_4: bitstring;
    {375}let m'_21: bitstring = (n_c_4,rule_PI) in
    {376}let m_53: bitstring = enc(m'_21,K_10) in
    {377}out(h, m_53);
    {378}in(h, m_54: bitstring);
    {379}let (((gx': G,gy': G),n'_c: bitstring,DID'_V: DID,((DID'_P_6: DID,attr'_4: bitstring,DID'_I_6: DID),sigVal_I_4: bitstring)),sigVal_P: bitstring) = dec(m_54,K_10) in
    {380}if check(((gx',gy'),n'_c,DID'_V,((DID'_P_6,attr'_4,DID'_I_6),sigVal_I_4)),sigVal_P,pk_P_2) then
    {381}if check((DID'_P_6,attr'_4,DID'_I_6),sigVal_I_4,pk_I_4) then
    {382}if (((gx',gy'),n'_c,DID'_V,(DID'_P_6,attr'_4,DID'_I_6)) = ((gx_10,gy_10),n_c_4,DID_V,(DID_P_1,attr_3,DID_I_1))) then
    {383}new tkn_access_4: bitstring;
    {384}let m'_22: bitstring = (tkn_access_4,sig(tkn_access_4,sk_V_1)) in
    {385}let m_55: bitstring = enc(m'_22,K_10) in
    {386}event auth_VerifierSendsLastMessageToProver(m_50,m_51,m_52,m_53,m_54,m_55);
    {387}out(h, m_55);
    {388}out(h, Verifier_Completes);
    {389}if talksOnlyToHonest_6 then
    (
        {390}event auth_VerifierCompletesProtocol(m_50,m_51,m_52,m_53,m_54)
    ) | (
        {391}out(ch(m'_20), m'_5_fromVerifier)
    ) | (
        {392}out(ch(rule_PI), rule_fromVerifier)
    ) | (
        {393}out(ch(m'_21), m'_7_fromVerifier)
    ) | (
        {394}out(ch((n'_c,DID'_V,(DID'_P_6,attr'_4,DID'_I_6,sigVal_I_4),sigVal_P)), vp_fromVerifier)
    ) | (
        {395}out(ch((DID'_P_6,attr'_4,DID'_I_6,sigVal_I_4)), cred_fromVerifier)
    ) | (
        {396}out(ch(m'_22), m'_9_fromVerifier)
    ) | (
        {397}out(ch(tkn_access_4), access_token_fromVerifier)
    )
) | (
    {398}!
    {399}let sk_V_2: SecretKey = sk_V in
    {400}let pk_P_3: PublicKey = pk(sk_E) in
    {401}let pk_I_5: PublicKey = pk(sk_I) in
    {402}let talksOnlyToHonest_7: bool = false in
    {403}let (DID_P_2: DID,attr_4: bitstring,DID_I_2: DID) = rule_EI in
    {404}in(h, m_56: bitstring);
    {405}let gx_11: G = unbitG(m_56) in
    {406}new y_3: exponent;
    {407}let gy_11: G = g(y_3) in
    {408}let K_11: SymmetricKey = GtoSymK(exp(gx_11,y_3)) in
    {409}let m'_23: bitstring = sig((gy_11,gx_11),sk_V_2) in
    {410}let m_57: bitstring = (bitG(gy_11),enc(m'_23,K_11)) in
    {411}out(h, m_57);
    {412}in(h, m_58: bitstring);
    {413}let uri'_1: bitstring = dec(m_58,K_11) in
    {414}if (uri'_1 = uri) then
    {415}new n_c_5: bitstring;
    {416}let m'_24: bitstring = (n_c_5,rule_EI) in
    {417}let m_59: bitstring = enc(m'_24,K_11) in
    {418}out(h, m_59);
    {419}in(h, m_60: bitstring);
    {420}let (((gx'_1: G,gy'_1: G),n'_c_1: bitstring,DID'_V_1: DID,((DID'_P_7: DID,attr'_5: bitstring,DID'_I_7: DID),sigVal_I_5: bitstring)),sigVal_P_1: bitstring) = dec(m_60,K_11) in
    {421}if check(((gx'_1,gy'_1),n'_c_1,DID'_V_1,((DID'_P_7,attr'_5,DID'_I_7),sigVal_I_5)),sigVal_P_1,pk_P_3) then
    {422}if check((DID'_P_7,attr'_5,DID'_I_7),sigVal_I_5,pk_I_5) then
    {423}if (((gx'_1,gy'_1),n'_c_1,DID'_V_1,(DID'_P_7,attr'_5,DID'_I_7)) = ((gx_11,gy_11),n_c_5,DID_V,(DID_P_2,attr_4,DID_I_2))) then
    {424}new tkn_access_5: bitstring;
    {425}let m'_25: bitstring = (tkn_access_5,sig(tkn_access_5,sk_V_2)) in
    {426}let m_61: bitstring = enc(m'_25,K_11) in
    {427}event auth_VerifierSendsLastMessageToProver(m_56,m_57,m_58,m_59,m_60,m_61);
    {428}out(h, m_61);
    {429}out(h, Verifier_Completes);
    {430}if talksOnlyToHonest_7 then
    (
        {431}event auth_VerifierCompletesProtocol(m_56,m_57,m_58,m_59,m_60)
    ) | (
        {432}out(ch(m'_23), m'_5_fromVerifier)
    ) | (
        {433}out(ch(rule_EI), rule_fromVerifier)
    ) | (
        {434}out(ch(m'_24), m'_7_fromVerifier)
    ) | (
        {435}out(ch((n'_c_1,DID'_V_1,(DID'_P_7,attr'_5,DID'_I_7,sigVal_I_5),sigVal_P_1)), vp_fromVerifier)
    ) | (
        {436}out(ch((DID'_P_7,attr'_5,DID'_I_7,sigVal_I_5)), cred_fromVerifier)
    ) | (
        {437}out(ch(m'_25), m'_9_fromVerifier)
    ) | (
        {438}out(ch(tkn_access_5), access_token_fromVerifier)
    )
) | (
    {439}!
    {440}let sk_V_3: SecretKey = sk_V in
    {441}let pk_P_4: PublicKey = pk(sk_P) in
    {442}let pk_I_6: PublicKey = pk(sk_E) in
    {443}let talksOnlyToHonest_8: bool = false in
    {444}let (DID_P_3: DID,attr_5: bitstring,DID_I_3: DID) = rule_PE in
    {445}in(h, m_62: bitstring);
    {446}let gx_12: G = unbitG(m_62) in
    {447}new y_4: exponent;
    {448}let gy_12: G = g(y_4) in
    {449}let K_12: SymmetricKey = GtoSymK(exp(gx_12,y_4)) in
    {450}let m'_26: bitstring = sig((gy_12,gx_12),sk_V_3) in
    {451}let m_63: bitstring = (bitG(gy_12),enc(m'_26,K_12)) in
    {452}out(h, m_63);
    {453}in(h, m_64: bitstring);
    {454}let uri'_2: bitstring = dec(m_64,K_12) in
    {455}if (uri'_2 = uri) then
    {456}new n_c_6: bitstring;
    {457}let m'_27: bitstring = (n_c_6,rule_PE) in
    {458}let m_65: bitstring = enc(m'_27,K_12) in
    {459}out(h, m_65);
    {460}in(h, m_66: bitstring);
    {461}let (((gx'_2: G,gy'_2: G),n'_c_2: bitstring,DID'_V_2: DID,((DID'_P_8: DID,attr'_6: bitstring,DID'_I_8: DID),sigVal_I_6: bitstring)),sigVal_P_2: bitstring) = dec(m_66,K_12) in
    {462}if check(((gx'_2,gy'_2),n'_c_2,DID'_V_2,((DID'_P_8,attr'_6,DID'_I_8),sigVal_I_6)),sigVal_P_2,pk_P_4) then
    {463}if check((DID'_P_8,attr'_6,DID'_I_8),sigVal_I_6,pk_I_6) then
    {464}if (((gx'_2,gy'_2),n'_c_2,DID'_V_2,(DID'_P_8,attr'_6,DID'_I_8)) = ((gx_12,gy_12),n_c_6,DID_V,(DID_P_3,attr_5,DID_I_3))) then
    {465}new tkn_access_6: bitstring;
    {466}let m'_28: bitstring = (tkn_access_6,sig(tkn_access_6,sk_V_3)) in
    {467}let m_67: bitstring = enc(m'_28,K_12) in
    {468}event auth_VerifierSendsLastMessageToProver(m_62,m_63,m_64,m_65,m_66,m_67);
    {469}out(h, m_67);
    {470}out(h, Verifier_Completes);
    {471}if talksOnlyToHonest_8 then
    (
        {472}event auth_VerifierCompletesProtocol(m_62,m_63,m_64,m_65,m_66)
    ) | (
        {473}out(ch(m'_26), m'_5_fromVerifier)
    ) | (
        {474}out(ch(rule_PE), rule_fromVerifier)
    ) | (
        {475}out(ch(m'_27), m'_7_fromVerifier)
    ) | (
        {476}out(ch((n'_c_2,DID'_V_2,(DID'_P_8,attr'_6,DID'_I_8,sigVal_I_6),sigVal_P_2)), vp_fromVerifier)
    ) | (
        {477}out(ch((DID'_P_8,attr'_6,DID'_I_8,sigVal_I_6)), cred_fromVerifier)
    ) | (
        {478}out(ch(m'_28), m'_9_fromVerifier)
    ) | (
        {479}out(ch(tkn_access_6), access_token_fromVerifier)
    )
) | (
    {480}!
    {481}let sk_V_4: SecretKey = sk_V in
    {482}let pk_P_5: PublicKey = pk(sk_E) in
    {483}let pk_I_7: PublicKey = pk(sk_E) in
    {484}let talksOnlyToHonest_9: bool = false in
    {485}let (DID_P_4: DID,attr_6: bitstring,DID_I_4: DID) = rule_EE in
    {486}in(h, m_68: bitstring);
    {487}let gx_13: G = unbitG(m_68) in
    {488}new y_5: exponent;
    {489}let gy_13: G = g(y_5) in
    {490}let K_13: SymmetricKey = GtoSymK(exp(gx_13,y_5)) in
    {491}let m'_29: bitstring = sig((gy_13,gx_13),sk_V_4) in
    {492}let m_69: bitstring = (bitG(gy_13),enc(m'_29,K_13)) in
    {493}out(h, m_69);
    {494}in(h, m_70: bitstring);
    {495}let uri'_3: bitstring = dec(m_70,K_13) in
    {496}if (uri'_3 = uri) then
    {497}new n_c_7: bitstring;
    {498}let m'_30: bitstring = (n_c_7,rule_EE) in
    {499}let m_71: bitstring = enc(m'_30,K_13) in
    {500}out(h, m_71);
    {501}in(h, m_72: bitstring);
    {502}let (((gx'_3: G,gy'_3: G),n'_c_3: bitstring,DID'_V_3: DID,((DID'_P_9: DID,attr'_7: bitstring,DID'_I_9: DID),sigVal_I_7: bitstring)),sigVal_P_3: bitstring) = dec(m_72,K_13) in
    {503}if check(((gx'_3,gy'_3),n'_c_3,DID'_V_3,((DID'_P_9,attr'_7,DID'_I_9),sigVal_I_7)),sigVal_P_3,pk_P_5) then
    {504}if check((DID'_P_9,attr'_7,DID'_I_9),sigVal_I_7,pk_I_7) then
    {505}if (((gx'_3,gy'_3),n'_c_3,DID'_V_3,(DID'_P_9,attr'_7,DID'_I_9)) = ((gx_13,gy_13),n_c_7,DID_V,(DID_P_4,attr_6,DID_I_4))) then
    {506}new tkn_access_7: bitstring;
    {507}let m'_31: bitstring = (tkn_access_7,sig(tkn_access_7,sk_V_4)) in
    {508}let m_73: bitstring = enc(m'_31,K_13) in
    {509}event auth_VerifierSendsLastMessageToProver(m_68,m_69,m_70,m_71,m_72,m_73);
    {510}out(h, m_73);
    {511}out(h, Verifier_Completes);
    {512}if talksOnlyToHonest_9 then
    (
        {513}event auth_VerifierCompletesProtocol(m_68,m_69,m_70,m_71,m_72)
    ) | (
        {514}out(ch(m'_29), m'_5_fromVerifier)
    ) | (
        {515}out(ch(rule_EE), rule_fromVerifier)
    ) | (
        {516}out(ch(m'_30), m'_7_fromVerifier)
    ) | (
        {517}out(ch((n'_c_3,DID'_V_3,(DID'_P_9,attr'_7,DID'_I_9,sigVal_I_7),sigVal_P_3)), vp_fromVerifier)
    ) | (
        {518}out(ch((DID'_P_9,attr'_7,DID'_I_9,sigVal_I_7)), cred_fromVerifier)
    ) | (
        {519}out(ch(m'_31), m'_9_fromVerifier)
    ) | (
        {520}out(ch(tkn_access_7), access_token_fromVerifier)
    )
)

--  Process 1 (that is, process 0, with let moved downwards):
{1}new sk_I: SecretKey;
{2}new sk_V: SecretKey;
{3}new sk_P: SecretKey;
{4}out(h, pk(sk_I));
{5}out(h, pk(sk_V));
{6}out(h, pk(sk_P));
{7}let DID_I: DID = genDID(pk(sk_I),sk_I) in
{11}out(h, DID_I);
{8}let DID_V: DID = genDID(pk(sk_V),sk_V) in
{12}out(h, DID_V);
{9}let DID_P: DID = genDID(pk(sk_P),sk_P) in
{13}out(h, DID_P);
{10}let DID_E: DID = genDID(pk(sk_E),sk_E) in
{14}out(h, DID_E);
(
    {19}!
    {24}in(h, m_0: bitstring);
    {25}let gx: G = unbitG(m_0) in
    {26}new y: exponent;
    {27}let gy: G = g(y) in
    {20}let sk_I_1: SecretKey = sk_I in
    {29}let m'_1: bitstring = sig((gy,gx),sk_I_1) in
    {28}let K: SymmetricKey = GtoSymK(exp(gx,y)) in
    {30}let m_1: bitstring = (bitG(gy),enc(m'_1,K)) in
    {31}out(h, m_1);
    {32}in(h, m_2: bitstring);
    {33}let (s_K: bitstring,DID'_P: DID,DID'_I: DID,n_h: bitstring) = dec(m_2,K) in
    {22}let pk_P: PublicKey = pk(sk_P) in
    {34}if check((gx,gy),s_K,pk_P) then
    {35}if ((DID'_P,DID'_I) = (DID_P,DID_I)) then
    {21}let attr_1: bitstring = attr in
    {36}let claims: bitstring = (DID_P,attr_1,DID_I) in
    {37}let VC: bitstring = (claims,sig(claims,sk_I_1)) in
    {38}let m'_3: bitstring = ((VC,DID_P,n_h),sig((VC,DID_P,n_h),sk_I_1)) in
    {39}let m_3: bitstring = enc(m'_3,K) in
    {40}event auth_IssuerSendsLastMessageToHolder(m_0,m_1,m_2,m_3);
    {41}out(h, m_3);
    {42}out(h, Issuer_Completes);
    {23}let talksOnlyToHonest: bool = true in
    {43}if talksOnlyToHonest then
    (
        {44}event auth_IssuerCompletesProtocol(m_0,m_1,m_2)
    ) | (
        {45}out(ch(m'_1), m'_1_fromIssuer)
    ) | (
        {46}out(ch(VC), cred_fromIssuer)
    ) | (
        {47}out(ch(m'_3), m'_3_fromIssuer)
    )
) | (
    {48}!
    {53}in(h, m_0_1: bitstring);
    {54}let gx_1: G = unbitG(m_0_1) in
    {55}new y_1: exponent;
    {56}let gy_1: G = g(y_1) in
    {49}let sk_I_2: SecretKey = sk_I in
    {58}let m': bitstring = sig((gy_1,gx_1),sk_I_2) in
    {57}let K_1: SymmetricKey = GtoSymK(exp(gx_1,y_1)) in
    {59}let m: bitstring = (bitG(gy_1),enc(m',K_1)) in
    {60}out(h, m);
    {61}in(h, m_4: bitstring);
    {62}let (s_K_1: bitstring,DID'_P_1: DID,DID'_I_1: DID,n_h_1: bitstring) = dec(m_4,K_1) in
    {51}let pk_P_1: PublicKey = pk(sk_E) in
    {63}if check((gx_1,gy_1),s_K_1,pk_P_1) then
    {64}if ((DID'_P_1,DID'_I_1) = (DID_E,DID_I)) then
    {50}let attr_2: bitstring = attr in
    {65}let claims_1: bitstring = (DID_E,attr_2,DID_I) in
    {66}let VC_1: bitstring = (claims_1,sig(claims_1,sk_I_2)) in
    {67}let m'_2: bitstring = ((VC_1,DID_E,n_h_1),sig((VC_1,DID_E,n_h_1),sk_I_2)) in
    {68}let m_5: bitstring = enc(m'_2,K_1) in
    {69}event auth_IssuerSendsLastMessageToHolder(m_0_1,m,m_4,m_5);
    {70}out(h, m_5);
    {71}out(h, Issuer_Completes);
    {52}let talksOnlyToHonest_1: bool = false in
    {72}if talksOnlyToHonest_1 then
    (
        {73}event auth_IssuerCompletesProtocol(m_0_1,m,m_4)
    ) | (
        {74}out(ch(m'), m'_1_fromIssuer)
    ) | (
        {75}out(ch(VC_1), cred_fromIssuer)
    ) | (
        {76}out(ch(m'_2), m'_3_fromIssuer)
    )
) | (
    {77}!
    {82}new x: exponent;
    {83}let gx_2: G = g(x) in
    {84}let m'_0: bitstring = bitG(gx_2) in
    {85}let m_0_2: bitstring = m'_0 in
    {86}out(h, m_0_2);
    {87}in(h, m_6: bitstring);
    {88}let (eGY: bitstring,m_7: bitstring) = m_6 in
    {89}let gy_2: G = unbitG(eGY) in
    {90}let K_2: SymmetricKey = GtoSymK(exp(gy_2,x)) in
    {91}let s_K_2: bitstring = dec(m_7,K_2) in
    {79}let pk_I: PublicKey = pk(sk_I) in
    {92}if check((gy_2,gx_2),s_K_2,pk_I) then
    {93}new n_i: bitstring;
    {78}let sk_P_1: SecretKey = sk_P in
    {94}let m'_4: bitstring = (sig((gx_2,gy_2),sk_P_1),DID_P,DID_I,n_i) in
    {95}let m_8: bitstring = enc(m'_4,K_2) in
    {96}event auth_HolderSendsLastMessageToIssuer(m_0_2,m_6,m_8);
    {97}out(h, m_8);
    {98}in(h, m_9: bitstring);
    {99}let ((((DID'_P_2: DID,attr': bitstring,DID'_I_2: DID),sigVal_I: bitstring),DID''_P: DID,n'_h: bitstring),sigVal'_I: bitstring) = dec(m_9,K_2) in
    {100}if check((((DID'_P_2,attr',DID'_I_2),sigVal_I),DID''_P,n'_h),sigVal'_I,pk_I) then
    {101}if ((DID''_P,n'_h) = (DID_P,n_i)) then
    {102}if check((DID'_P_2,attr',DID'_I_2),sigVal_I,pk_I) then
    {103}if ((DID'_P_2,DID'_I_2) = (DID_P,DID_I)) then
    {104}out(h, Holder_Completes);
    {81}let talksOnlyToHonest_2: bool = true in
    (
        {105}!
        {107}new x_1: exponent;
        {108}let gx_3: G = g(x_1) in
        {109}let m'_5: bitstring = bitG(gx_3) in
        {110}let m_10: bitstring = m'_5 in
        {111}out(h, m_10);
        {112}in(h, m_11: bitstring);
        {113}let (eGY_1: bitstring,m_12: bitstring) = m_11 in
        {114}let gy_3: G = unbitG(eGY_1) in
        {115}let K_3: SymmetricKey = GtoSymK(exp(gy_3,x_1)) in
        {116}let s_K_3: bitstring = dec(m_12,K_3) in
        {80}let pk_V: PublicKey = pk(sk_V) in
        {117}if check((gy_3,gx_3),s_K_3,pk_V) then
        {118}let m'_6: bitstring = uri in
        {119}let m_13: bitstring = enc(m'_6,K_3) in
        {120}out(h, m_13);
        {121}in(h, m_14: bitstring);
        {122}let (n_c: bitstring,rule: bitstring) = dec(m_14,K_3) in
        {106}let VC_2: bitstring = ((DID'_P_2,attr',DID'_I_2),sigVal_I) in
        {123}let (claims_2: bitstring,sigVal_VC: bitstring) = VC_2 in
        {124}if (claims_2 = rule) then
        {125}let m''_8: bitstring = ((gx_3,gy_3),n_c,DID_V,VC_2) in
        {126}let m'_8: bitstring = (m''_8,sig(m''_8,sk_P_1)) in
        {127}let m_15: bitstring = enc(m'_8,K_3) in
        {128}event auth_ProverSendsLastMessageToVerifier(m_10,m_11,m_13,m_14,m_15);
        {129}event auth_ProverSendsLastMessageToVerifierInProtocolFull(m_0_2,m_6,m_8,m_9,m_10,m_11,m_13,m_14,m_15);
        {130}out(h, m_15);
        {131}in(h, m_16: bitstring);
        {132}let (tkn_access: bitstring,sigVal_tkn: bitstring) = dec(m_16,K_3) in
        {133}if check(tkn_access,sigVal_tkn,pk_V) then
        {134}out(h, Prover_Completes);
        {135}if talksOnlyToHonest_2 then
        (
            {136}event auth_ProverCompletesProtocol(m_10,m_11,m_13,m_14,m_15,m_16)
        ) | (
            {137}out(ch(m'_5), m'_4_fromProver)
        ) | (
            {138}out(ch(m'_6), m'_6_fromProver)
        ) | (
            {139}out(ch(m'_8), m'_8_fromProver)
        ) | (
            {140}out(ch(VC_2), cred_fromProver)
        ) | (
            {141}out(ch(tkn_access), access_token_fromProver)
        )
    ) | (
        {142}if talksOnlyToHonest_2 then
        (
            {143}event auth_HolderCompletesProtocol(m_0_2,m_6,m_8,m_9)
        ) | (
            {144}out(ch(m'_0), m'_0_fromHolder)
        ) | (
            {145}out(ch(m'_4), m'_2_fromHolder)
        ) | (
            {146}out(ch(((DID'_P_2,attr',DID'_I_2),sigVal_I)), cred_fromHolder)
        )
    )
) | (
    {147}!
    {152}new x_2: exponent;
    {153}let gx_4: G = g(x_2) in
    {154}let m'_0_1: bitstring = bitG(gx_4) in
    {155}let m_0_3: bitstring = m'_0_1 in
    {156}out(h, m_0_3);
    {157}in(h, m_17: bitstring);
    {158}let (eGY_2: bitstring,m_18: bitstring) = m_17 in
    {159}let gy_4: G = unbitG(eGY_2) in
    {160}let K_4: SymmetricKey = GtoSymK(exp(gy_4,x_2)) in
    {161}let s_K_4: bitstring = dec(m_18,K_4) in
    {149}let pk_I_1: PublicKey = pk(sk_I) in
    {162}if check((gy_4,gx_4),s_K_4,pk_I_1) then
    {163}new n_i_1: bitstring;
    {148}let sk_P_2: SecretKey = sk_P in
    {164}let m'_7: bitstring = (sig((gx_4,gy_4),sk_P_2),DID_P,DID_I,n_i_1) in
    {165}let m_19: bitstring = enc(m'_7,K_4) in
    {166}event auth_HolderSendsLastMessageToIssuer(m_0_3,m_17,m_19);
    {167}out(h, m_19);
    {168}in(h, m_20: bitstring);
    {169}let ((((DID'_P_3: DID,attr'_1: bitstring,DID'_I_3: DID),sigVal_I_1: bitstring),DID''_P_1: DID,n'_h_1: bitstring),sigVal'_I_1: bitstring) = dec(m_20,K_4) in
    {170}if check((((DID'_P_3,attr'_1,DID'_I_3),sigVal_I_1),DID''_P_1,n'_h_1),sigVal'_I_1,pk_I_1) then
    {171}if ((DID''_P_1,n'_h_1) = (DID_P,n_i_1)) then
    {172}if check((DID'_P_3,attr'_1,DID'_I_3),sigVal_I_1,pk_I_1) then
    {173}if ((DID'_P_3,DID'_I_3) = (DID_P,DID_I)) then
    {174}out(h, Holder_Completes);
    {151}let talksOnlyToHonest_3: bool = false in
    (
        {175}!
        {177}new x_3: exponent;
        {178}let gx_5: G = g(x_3) in
        {179}let m'_9: bitstring = bitG(gx_5) in
        {180}let m_21: bitstring = m'_9 in
        {181}out(h, m_21);
        {182}in(h, m_22: bitstring);
        {183}let (eGY_3: bitstring,m_23: bitstring) = m_22 in
        {184}let gy_5: G = unbitG(eGY_3) in
        {185}let K_5: SymmetricKey = GtoSymK(exp(gy_5,x_3)) in
        {186}let s_K_5: bitstring = dec(m_23,K_5) in
        {150}let pk_V_1: PublicKey = pk(sk_E) in
        {187}if check((gy_5,gx_5),s_K_5,pk_V_1) then
        {188}let m'_10: bitstring = uri in
        {189}let m_24: bitstring = enc(m'_10,K_5) in
        {190}out(h, m_24);
        {191}in(h, m_25: bitstring);
        {192}let (n_c_1: bitstring,rule_1: bitstring) = dec(m_25,K_5) in
        {176}let VC_3: bitstring = ((DID'_P_3,attr'_1,DID'_I_3),sigVal_I_1) in
        {193}let (claims_3: bitstring,sigVal_VC_1: bitstring) = VC_3 in
        {194}if (claims_3 = rule_1) then
        {195}let m'': bitstring = ((gx_5,gy_5),n_c_1,DID_E,VC_3) in
        {196}let m'_11: bitstring = (m'',sig(m'',sk_P_2)) in
        {197}let m_26: bitstring = enc(m'_11,K_5) in
        {198}event auth_ProverSendsLastMessageToVerifier(m_21,m_22,m_24,m_25,m_26);
        {199}event auth_ProverSendsLastMessageToVerifierInProtocolFull(m_0_3,m_17,m_19,m_20,m_21,m_22,m_24,m_25,m_26);
        {200}out(h, m_26);
        {201}in(h, m_27: bitstring);
        {202}let (tkn_access_1: bitstring,sigVal_tkn_1: bitstring) = dec(m_27,K_5) in
        {203}if check(tkn_access_1,sigVal_tkn_1,pk_V_1) then
        {204}out(h, Prover_Completes);
        {205}if talksOnlyToHonest_3 then
        (
            {206}event auth_ProverCompletesProtocol(m_21,m_22,m_24,m_25,m_26,m_27)
        ) | (
            {207}out(ch(m'_9), m'_4_fromProver)
        ) | (
            {208}out(ch(m'_10), m'_6_fromProver)
        ) | (
            {209}out(ch(m'_11), m'_8_fromProver)
        ) | (
            {210}out(ch(VC_3), cred_fromProver)
        ) | (
            {211}out(ch(tkn_access_1), access_token_fromProver)
        )
    ) | (
        {212}if talksOnlyToHonest_3 then
        (
            {213}event auth_HolderCompletesProtocol(m_0_3,m_17,m_19,m_20)
        ) | (
            {214}out(ch(m'_0_1), m'_0_fromHolder)
        ) | (
            {215}out(ch(m'_7), m'_2_fromHolder)
        ) | (
            {216}out(ch(((DID'_P_3,attr'_1,DID'_I_3),sigVal_I_1)), cred_fromHolder)
        )
    )
) | (
    {217}!
    {222}new x_4: exponent;
    {223}let gx_6: G = g(x_4) in
    {224}let m'_0_2: bitstring = bitG(gx_6) in
    {225}let m_0_4: bitstring = m'_0_2 in
    {226}out(h, m_0_4);
    {227}in(h, m_28: bitstring);
    {228}let (eGY_4: bitstring,m_29: bitstring) = m_28 in
    {229}let gy_6: G = unbitG(eGY_4) in
    {230}let K_6: SymmetricKey = GtoSymK(exp(gy_6,x_4)) in
    {231}let s_K_6: bitstring = dec(m_29,K_6) in
    {219}let pk_I_2: PublicKey = pk(sk_E) in
    {232}if check((gy_6,gx_6),s_K_6,pk_I_2) then
    {233}new n_i_2: bitstring;
    {218}let sk_P_3: SecretKey = sk_P in
    {234}let m'_12: bitstring = (sig((gx_6,gy_6),sk_P_3),DID_P,DID_E,n_i_2) in
    {235}let m_30: bitstring = enc(m'_12,K_6) in
    {236}event auth_HolderSendsLastMessageToIssuer(m_0_4,m_28,m_30);
    {237}out(h, m_30);
    {238}in(h, m_31: bitstring);
    {239}let ((((DID'_P_4: DID,attr'_2: bitstring,DID'_I_4: DID),sigVal_I_2: bitstring),DID''_P_2: DID,n'_h_2: bitstring),sigVal'_I_2: bitstring) = dec(m_31,K_6) in
    {240}if check((((DID'_P_4,attr'_2,DID'_I_4),sigVal_I_2),DID''_P_2,n'_h_2),sigVal'_I_2,pk_I_2) then
    {241}if ((DID''_P_2,n'_h_2) = (DID_P,n_i_2)) then
    {242}if check((DID'_P_4,attr'_2,DID'_I_4),sigVal_I_2,pk_I_2) then
    {243}if ((DID'_P_4,DID'_I_4) = (DID_P,DID_E)) then
    {244}out(h, Holder_Completes);
    {221}let talksOnlyToHonest_4: bool = false in
    (
        {245}!
        {247}new x_5: exponent;
        {248}let gx_7: G = g(x_5) in
        {249}let m'_13: bitstring = bitG(gx_7) in
        {250}let m_32: bitstring = m'_13 in
        {251}out(h, m_32);
        {252}in(h, m_33: bitstring);
        {253}let (eGY_5: bitstring,m_34: bitstring) = m_33 in
        {254}let gy_7: G = unbitG(eGY_5) in
        {255}let K_7: SymmetricKey = GtoSymK(exp(gy_7,x_5)) in
        {256}let s_K_7: bitstring = dec(m_34,K_7) in
        {220}let pk_V_2: PublicKey = pk(sk_V) in
        {257}if check((gy_7,gx_7),s_K_7,pk_V_2) then
        {258}let m'_14: bitstring = uri in
        {259}let m_35: bitstring = enc(m'_14,K_7) in
        {260}out(h, m_35);
        {261}in(h, m_36: bitstring);
        {262}let (n_c_2: bitstring,rule_2: bitstring) = dec(m_36,K_7) in
        {246}let VC_4: bitstring = ((DID'_P_4,attr'_2,DID'_I_4),sigVal_I_2) in
        {263}let (claims_4: bitstring,sigVal_VC_2: bitstring) = VC_4 in
        {264}if (claims_4 = rule_2) then
        {265}let m''_1: bitstring = ((gx_7,gy_7),n_c_2,DID_V,VC_4) in
        {266}let m'_15: bitstring = (m''_1,sig(m''_1,sk_P_3)) in
        {267}let m_37: bitstring = enc(m'_15,K_7) in
        {268}event auth_ProverSendsLastMessageToVerifier(m_32,m_33,m_35,m_36,m_37);
        {269}event auth_ProverSendsLastMessageToVerifierInProtocolFull(m_0_4,m_28,m_30,m_31,m_32,m_33,m_35,m_36,m_37);
        {270}out(h, m_37);
        {271}in(h, m_38: bitstring);
        {272}let (tkn_access_2: bitstring,sigVal_tkn_2: bitstring) = dec(m_38,K_7) in
        {273}if check(tkn_access_2,sigVal_tkn_2,pk_V_2) then
        {274}out(h, Prover_Completes);
        {275}if talksOnlyToHonest_4 then
        (
            {276}event auth_ProverCompletesProtocol(m_32,m_33,m_35,m_36,m_37,m_38)
        ) | (
            {277}out(ch(m'_13), m'_4_fromProver)
        ) | (
            {278}out(ch(m'_14), m'_6_fromProver)
        ) | (
            {279}out(ch(m'_15), m'_8_fromProver)
        ) | (
            {280}out(ch(VC_4), cred_fromProver)
        ) | (
            {281}out(ch(tkn_access_2), access_token_fromProver)
        )
    ) | (
        {282}if talksOnlyToHonest_4 then
        (
            {283}event auth_HolderCompletesProtocol(m_0_4,m_28,m_30,m_31)
        ) | (
            {284}out(ch(m'_0_2), m'_0_fromHolder)
        ) | (
            {285}out(ch(m'_12), m'_2_fromHolder)
        ) | (
            {286}out(ch(((DID'_P_4,attr'_2,DID'_I_4),sigVal_I_2)), cred_fromHolder)
        )
    )
) | (
    {287}!
    {292}new x_6: exponent;
    {293}let gx_8: G = g(x_6) in
    {294}let m'_0_3: bitstring = bitG(gx_8) in
    {295}let m_0_5: bitstring = m'_0_3 in
    {296}out(h, m_0_5);
    {297}in(h, m_39: bitstring);
    {298}let (eGY_6: bitstring,m_40: bitstring) = m_39 in
    {299}let gy_8: G = unbitG(eGY_6) in
    {300}let K_8: SymmetricKey = GtoSymK(exp(gy_8,x_6)) in
    {301}let s_K_8: bitstring = dec(m_40,K_8) in
    {289}let pk_I_3: PublicKey = pk(sk_E) in
    {302}if check((gy_8,gx_8),s_K_8,pk_I_3) then
    {303}new n_i_3: bitstring;
    {288}let sk_P_4: SecretKey = sk_P in
    {304}let m'_16: bitstring = (sig((gx_8,gy_8),sk_P_4),DID_P,DID_E,n_i_3) in
    {305}let m_41: bitstring = enc(m'_16,K_8) in
    {306}event auth_HolderSendsLastMessageToIssuer(m_0_5,m_39,m_41);
    {307}out(h, m_41);
    {308}in(h, m_42: bitstring);
    {309}let ((((DID'_P_5: DID,attr'_3: bitstring,DID'_I_5: DID),sigVal_I_3: bitstring),DID''_P_3: DID,n'_h_3: bitstring),sigVal'_I_3: bitstring) = dec(m_42,K_8) in
    {310}if check((((DID'_P_5,attr'_3,DID'_I_5),sigVal_I_3),DID''_P_3,n'_h_3),sigVal'_I_3,pk_I_3) then
    {311}if ((DID''_P_3,n'_h_3) = (DID_P,n_i_3)) then
    {312}if check((DID'_P_5,attr'_3,DID'_I_5),sigVal_I_3,pk_I_3) then
    {313}if ((DID'_P_5,DID'_I_5) = (DID_P,DID_E)) then
    {314}out(h, Holder_Completes);
    {291}let talksOnlyToHonest_5: bool = false in
    (
        {315}!
        {317}new x_7: exponent;
        {318}let gx_9: G = g(x_7) in
        {319}let m'_17: bitstring = bitG(gx_9) in
        {320}let m_43: bitstring = m'_17 in
        {321}out(h, m_43);
        {322}in(h, m_44: bitstring);
        {323}let (eGY_7: bitstring,m_45: bitstring) = m_44 in
        {324}let gy_9: G = unbitG(eGY_7) in
        {325}let K_9: SymmetricKey = GtoSymK(exp(gy_9,x_7)) in
        {326}let s_K_9: bitstring = dec(m_45,K_9) in
        {290}let pk_V_3: PublicKey = pk(sk_E) in
        {327}if check((gy_9,gx_9),s_K_9,pk_V_3) then
        {328}let m'_18: bitstring = uri in
        {329}let m_46: bitstring = enc(m'_18,K_9) in
        {330}out(h, m_46);
        {331}in(h, m_47: bitstring);
        {332}let (n_c_3: bitstring,rule_3: bitstring) = dec(m_47,K_9) in
        {316}let VC_5: bitstring = ((DID'_P_5,attr'_3,DID'_I_5),sigVal_I_3) in
        {333}let (claims_5: bitstring,sigVal_VC_3: bitstring) = VC_5 in
        {334}if (claims_5 = rule_3) then
        {335}let m''_2: bitstring = ((gx_9,gy_9),n_c_3,DID_E,VC_5) in
        {336}let m'_19: bitstring = (m''_2,sig(m''_2,sk_P_4)) in
        {337}let m_48: bitstring = enc(m'_19,K_9) in
        {338}event auth_ProverSendsLastMessageToVerifier(m_43,m_44,m_46,m_47,m_48);
        {339}event auth_ProverSendsLastMessageToVerifierInProtocolFull(m_0_5,m_39,m_41,m_42,m_43,m_44,m_46,m_47,m_48);
        {340}out(h, m_48);
        {341}in(h, m_49: bitstring);
        {342}let (tkn_access_3: bitstring,sigVal_tkn_3: bitstring) = dec(m_49,K_9) in
        {343}if check(tkn_access_3,sigVal_tkn_3,pk_V_3) then
        {344}out(h, Prover_Completes);
        {345}if talksOnlyToHonest_5 then
        (
            {346}event auth_ProverCompletesProtocol(m_43,m_44,m_46,m_47,m_48,m_49)
        ) | (
            {347}out(ch(m'_17), m'_4_fromProver)
        ) | (
            {348}out(ch(m'_18), m'_6_fromProver)
        ) | (
            {349}out(ch(m'_19), m'_8_fromProver)
        ) | (
            {350}out(ch(VC_5), cred_fromProver)
        ) | (
            {351}out(ch(tkn_access_3), access_token_fromProver)
        )
    ) | (
        {352}if talksOnlyToHonest_5 then
        (
            {353}event auth_HolderCompletesProtocol(m_0_5,m_39,m_41,m_42)
        ) | (
            {354}out(ch(m'_0_3), m'_0_fromHolder)
        ) | (
            {355}out(ch(m'_16), m'_2_fromHolder)
        ) | (
            {356}out(ch(((DID'_P_5,attr'_3,DID'_I_5),sigVal_I_3)), cred_fromHolder)
        )
    )
) | (
    {357}!
    {15}let rule_PI: bitstring = (DID_P,attr,DID_I) in
    {362}let (DID_P_1: DID,attr_3: bitstring,DID_I_1: DID) = rule_PI in
    {363}in(h, m_50: bitstring);
    {364}let gx_10: G = unbitG(m_50) in
    {365}new y_2: exponent;
    {366}let gy_10: G = g(y_2) in
    {358}let sk_V_1: SecretKey = sk_V in
    {368}let m'_20: bitstring = sig((gy_10,gx_10),sk_V_1) in
    {367}let K_10: SymmetricKey = GtoSymK(exp(gx_10,y_2)) in
    {369}let m_51: bitstring = (bitG(gy_10),enc(m'_20,K_10)) in
    {370}out(h, m_51);
    {371}in(h, m_52: bitstring);
    {372}let uri': bitstring = dec(m_52,K_10) in
    {373}if (uri' = uri) then
    {374}new n_c_4: bitstring;
    {375}let m'_21: bitstring = (n_c_4,rule_PI) in
    {376}let m_53: bitstring = enc(m'_21,K_10) in
    {377}out(h, m_53);
    {378}in(h, m_54: bitstring);
    {379}let (((gx': G,gy': G),n'_c: bitstring,DID'_V: DID,((DID'_P_6: DID,attr'_4: bitstring,DID'_I_6: DID),sigVal_I_4: bitstring)),sigVal_P: bitstring) = dec(m_54,K_10) in
    {359}let pk_P_2: PublicKey = pk(sk_P) in
    {380}if check(((gx',gy'),n'_c,DID'_V,((DID'_P_6,attr'_4,DID'_I_6),sigVal_I_4)),sigVal_P,pk_P_2) then
    {360}let pk_I_4: PublicKey = pk(sk_I) in
    {381}if check((DID'_P_6,attr'_4,DID'_I_6),sigVal_I_4,pk_I_4) then
    {382}if (((gx',gy'),n'_c,DID'_V,(DID'_P_6,attr'_4,DID'_I_6)) = ((gx_10,gy_10),n_c_4,DID_V,(DID_P_1,attr_3,DID_I_1))) then
    {383}new tkn_access_4: bitstring;
    {384}let m'_22: bitstring = (tkn_access_4,sig(tkn_access_4,sk_V_1)) in
    {385}let m_55: bitstring = enc(m'_22,K_10) in
    {386}event auth_VerifierSendsLastMessageToProver(m_50,m_51,m_52,m_53,m_54,m_55);
    {387}out(h, m_55);
    {388}out(h, Verifier_Completes);
    {361}let talksOnlyToHonest_6: bool = true in
    {389}if talksOnlyToHonest_6 then
    (
        {390}event auth_VerifierCompletesProtocol(m_50,m_51,m_52,m_53,m_54)
    ) | (
        {391}out(ch(m'_20), m'_5_fromVerifier)
    ) | (
        {392}out(ch(rule_PI), rule_fromVerifier)
    ) | (
        {393}out(ch(m'_21), m'_7_fromVerifier)
    ) | (
        {394}out(ch((n'_c,DID'_V,(DID'_P_6,attr'_4,DID'_I_6,sigVal_I_4),sigVal_P)), vp_fromVerifier)
    ) | (
        {395}out(ch((DID'_P_6,attr'_4,DID'_I_6,sigVal_I_4)), cred_fromVerifier)
    ) | (
        {396}out(ch(m'_22), m'_9_fromVerifier)
    ) | (
        {397}out(ch(tkn_access_4), access_token_fromVerifier)
    )
) | (
    {398}!
    {16}let rule_EI: bitstring = (DID_E,attr,DID_I) in
    {403}let (DID_P_2: DID,attr_4: bitstring,DID_I_2: DID) = rule_EI in
    {404}in(h, m_56: bitstring);
    {405}let gx_11: G = unbitG(m_56) in
    {406}new y_3: exponent;
    {407}let gy_11: G = g(y_3) in
    {399}let sk_V_2: SecretKey = sk_V in
    {409}let m'_23: bitstring = sig((gy_11,gx_11),sk_V_2) in
    {408}let K_11: SymmetricKey = GtoSymK(exp(gx_11,y_3)) in
    {410}let m_57: bitstring = (bitG(gy_11),enc(m'_23,K_11)) in
    {411}out(h, m_57);
    {412}in(h, m_58: bitstring);
    {413}let uri'_1: bitstring = dec(m_58,K_11) in
    {414}if (uri'_1 = uri) then
    {415}new n_c_5: bitstring;
    {416}let m'_24: bitstring = (n_c_5,rule_EI) in
    {417}let m_59: bitstring = enc(m'_24,K_11) in
    {418}out(h, m_59);
    {419}in(h, m_60: bitstring);
    {420}let (((gx'_1: G,gy'_1: G),n'_c_1: bitstring,DID'_V_1: DID,((DID'_P_7: DID,attr'_5: bitstring,DID'_I_7: DID),sigVal_I_5: bitstring)),sigVal_P_1: bitstring) = dec(m_60,K_11) in
    {400}let pk_P_3: PublicKey = pk(sk_E) in
    {421}if check(((gx'_1,gy'_1),n'_c_1,DID'_V_1,((DID'_P_7,attr'_5,DID'_I_7),sigVal_I_5)),sigVal_P_1,pk_P_3) then
    {401}let pk_I_5: PublicKey = pk(sk_I) in
    {422}if check((DID'_P_7,attr'_5,DID'_I_7),sigVal_I_5,pk_I_5) then
    {423}if (((gx'_1,gy'_1),n'_c_1,DID'_V_1,(DID'_P_7,attr'_5,DID'_I_7)) = ((gx_11,gy_11),n_c_5,DID_V,(DID_P_2,attr_4,DID_I_2))) then
    {424}new tkn_access_5: bitstring;
    {425}let m'_25: bitstring = (tkn_access_5,sig(tkn_access_5,sk_V_2)) in
    {426}let m_61: bitstring = enc(m'_25,K_11) in
    {427}event auth_VerifierSendsLastMessageToProver(m_56,m_57,m_58,m_59,m_60,m_61);
    {428}out(h, m_61);
    {429}out(h, Verifier_Completes);
    {402}let talksOnlyToHonest_7: bool = false in
    {430}if talksOnlyToHonest_7 then
    (
        {431}event auth_VerifierCompletesProtocol(m_56,m_57,m_58,m_59,m_60)
    ) | (
        {432}out(ch(m'_23), m'_5_fromVerifier)
    ) | (
        {433}out(ch(rule_EI), rule_fromVerifier)
    ) | (
        {434}out(ch(m'_24), m'_7_fromVerifier)
    ) | (
        {435}out(ch((n'_c_1,DID'_V_1,(DID'_P_7,attr'_5,DID'_I_7,sigVal_I_5),sigVal_P_1)), vp_fromVerifier)
    ) | (
        {436}out(ch((DID'_P_7,attr'_5,DID'_I_7,sigVal_I_5)), cred_fromVerifier)
    ) | (
        {437}out(ch(m'_25), m'_9_fromVerifier)
    ) | (
        {438}out(ch(tkn_access_5), access_token_fromVerifier)
    )
) | (
    {439}!
    {17}let rule_PE: bitstring = (DID_P,attr,DID_E) in
    {444}let (DID_P_3: DID,attr_5: bitstring,DID_I_3: DID) = rule_PE in
    {445}in(h, m_62: bitstring);
    {446}let gx_12: G = unbitG(m_62) in
    {447}new y_4: exponent;
    {448}let gy_12: G = g(y_4) in
    {440}let sk_V_3: SecretKey = sk_V in
    {450}let m'_26: bitstring = sig((gy_12,gx_12),sk_V_3) in
    {449}let K_12: SymmetricKey = GtoSymK(exp(gx_12,y_4)) in
    {451}let m_63: bitstring = (bitG(gy_12),enc(m'_26,K_12)) in
    {452}out(h, m_63);
    {453}in(h, m_64: bitstring);
    {454}let uri'_2: bitstring = dec(m_64,K_12) in
    {455}if (uri'_2 = uri) then
    {456}new n_c_6: bitstring;
    {457}let m'_27: bitstring = (n_c_6,rule_PE) in
    {458}let m_65: bitstring = enc(m'_27,K_12) in
    {459}out(h, m_65);
    {460}in(h, m_66: bitstring);
    {461}let (((gx'_2: G,gy'_2: G),n'_c_2: bitstring,DID'_V_2: DID,((DID'_P_8: DID,attr'_6: bitstring,DID'_I_8: DID),sigVal_I_6: bitstring)),sigVal_P_2: bitstring) = dec(m_66,K_12) in
    {441}let pk_P_4: PublicKey = pk(sk_P) in
    {462}if check(((gx'_2,gy'_2),n'_c_2,DID'_V_2,((DID'_P_8,attr'_6,DID'_I_8),sigVal_I_6)),sigVal_P_2,pk_P_4) then
    {442}let pk_I_6: PublicKey = pk(sk_E) in
    {463}if check((DID'_P_8,attr'_6,DID'_I_8),sigVal_I_6,pk_I_6) then
    {464}if (((gx'_2,gy'_2),n'_c_2,DID'_V_2,(DID'_P_8,attr'_6,DID'_I_8)) = ((gx_12,gy_12),n_c_6,DID_V,(DID_P_3,attr_5,DID_I_3))) then
    {465}new tkn_access_6: bitstring;
    {466}let m'_28: bitstring = (tkn_access_6,sig(tkn_access_6,sk_V_3)) in
    {467}let m_67: bitstring = enc(m'_28,K_12) in
    {468}event auth_VerifierSendsLastMessageToProver(m_62,m_63,m_64,m_65,m_66,m_67);
    {469}out(h, m_67);
    {470}out(h, Verifier_Completes);
    {443}let talksOnlyToHonest_8: bool = false in
    {471}if talksOnlyToHonest_8 then
    (
        {472}event auth_VerifierCompletesProtocol(m_62,m_63,m_64,m_65,m_66)
    ) | (
        {473}out(ch(m'_26), m'_5_fromVerifier)
    ) | (
        {474}out(ch(rule_PE), rule_fromVerifier)
    ) | (
        {475}out(ch(m'_27), m'_7_fromVerifier)
    ) | (
        {476}out(ch((n'_c_2,DID'_V_2,(DID'_P_8,attr'_6,DID'_I_8,sigVal_I_6),sigVal_P_2)), vp_fromVerifier)
    ) | (
        {477}out(ch((DID'_P_8,attr'_6,DID'_I_8,sigVal_I_6)), cred_fromVerifier)
    ) | (
        {478}out(ch(m'_28), m'_9_fromVerifier)
    ) | (
        {479}out(ch(tkn_access_6), access_token_fromVerifier)
    )
) | (
    {480}!
    {18}let rule_EE: bitstring = (DID_E,attr,DID_E) in
    {485}let (DID_P_4: DID,attr_6: bitstring,DID_I_4: DID) = rule_EE in
    {486}in(h, m_68: bitstring);
    {487}let gx_13: G = unbitG(m_68) in
    {488}new y_5: exponent;
    {489}let gy_13: G = g(y_5) in
    {481}let sk_V_4: SecretKey = sk_V in
    {491}let m'_29: bitstring = sig((gy_13,gx_13),sk_V_4) in
    {490}let K_13: SymmetricKey = GtoSymK(exp(gx_13,y_5)) in
    {492}let m_69: bitstring = (bitG(gy_13),enc(m'_29,K_13)) in
    {493}out(h, m_69);
    {494}in(h, m_70: bitstring);
    {495}let uri'_3: bitstring = dec(m_70,K_13) in
    {496}if (uri'_3 = uri) then
    {497}new n_c_7: bitstring;
    {498}let m'_30: bitstring = (n_c_7,rule_EE) in
    {499}let m_71: bitstring = enc(m'_30,K_13) in
    {500}out(h, m_71);
    {501}in(h, m_72: bitstring);
    {502}let (((gx'_3: G,gy'_3: G),n'_c_3: bitstring,DID'_V_3: DID,((DID'_P_9: DID,attr'_7: bitstring,DID'_I_9: DID),sigVal_I_7: bitstring)),sigVal_P_3: bitstring) = dec(m_72,K_13) in
    {482}let pk_P_5: PublicKey = pk(sk_E) in
    {503}if check(((gx'_3,gy'_3),n'_c_3,DID'_V_3,((DID'_P_9,attr'_7,DID'_I_9),sigVal_I_7)),sigVal_P_3,pk_P_5) then
    {483}let pk_I_7: PublicKey = pk(sk_E) in
    {504}if check((DID'_P_9,attr'_7,DID'_I_9),sigVal_I_7,pk_I_7) then
    {505}if (((gx'_3,gy'_3),n'_c_3,DID'_V_3,(DID'_P_9,attr'_7,DID'_I_9)) = ((gx_13,gy_13),n_c_7,DID_V,(DID_P_4,attr_6,DID_I_4))) then
    {506}new tkn_access_7: bitstring;
    {507}let m'_31: bitstring = (tkn_access_7,sig(tkn_access_7,sk_V_4)) in
    {508}let m_73: bitstring = enc(m'_31,K_13) in
    {509}event auth_VerifierSendsLastMessageToProver(m_68,m_69,m_70,m_71,m_72,m_73);
    {510}out(h, m_73);
    {511}out(h, Verifier_Completes);
    {484}let talksOnlyToHonest_9: bool = false in
    {512}if talksOnlyToHonest_9 then
    (
        {513}event auth_VerifierCompletesProtocol(m_68,m_69,m_70,m_71,m_72)
    ) | (
        {514}out(ch(m'_29), m'_5_fromVerifier)
    ) | (
        {515}out(ch(rule_EE), rule_fromVerifier)
    ) | (
        {516}out(ch(m'_30), m'_7_fromVerifier)
    ) | (
        {517}out(ch((n'_c_3,DID'_V_3,(DID'_P_9,attr'_7,DID'_I_9,sigVal_I_7),sigVal_P_3)), vp_fromVerifier)
    ) | (
        {518}out(ch((DID'_P_9,attr'_7,DID'_I_9,sigVal_I_7)), cred_fromVerifier)
    ) | (
        {519}out(ch(m'_31), m'_9_fromVerifier)
    ) | (
        {520}out(ch(tkn_access_7), access_token_fromVerifier)
    )
)

-- Query not attacker(m'_0_fromHolder[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(m'_0_fromHolder[])
goal reachable: attacker(m'_0_fromHolder[])

Derivation:
Abbreviations:
x_8 = x[!1 = @sid]
y_6 = y[m_0 = bitG(g(x_8)),!1 = @sid_1]
n_i_4 = n_i[m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]

1. The message bitG(g(x_8)) may be sent to the attacker at output {86}.
attacker(bitG(g(x_8))).

2. By 1, the attacker may know bitG(g(x_8)).
Using the function ch the attacker may obtain ch(bitG(g(x_8))).
attacker(ch(bitG(g(x_8)))).

3. The message bitG(g(x_8)) that the attacker may have by 1 may be received at input {24}.
So the message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) may be sent to the attacker at output {31}.
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8))))).

4. By 3, the attacker may know (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))).
Using the function 2-proj-2-tuple the attacker may obtain enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8))).
attacker(enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))).

5. The message bitG(g(x_8)) that the attacker may have by 1 may be received at input {24}.
So the message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) may be sent to the attacker at output {31}.
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))))).

6. By 5, the attacker may know (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).
Using the function 1-proj-2-tuple the attacker may obtain bitG(g(y_6)).
attacker(bitG(g(y_6))).

7. By 6, the attacker may know bitG(g(y_6)).
By 4, the attacker may know enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8))).
Using the function 2-tuple the attacker may obtain (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))).
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8))))).

8. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) that the attacker may have by 7 may be received at input {87}.
So the message enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))) may be sent to the attacker at output {97}.
attacker(enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8)))).

9. The message bitG(g(x_8)) that the attacker may have by 1 may be received at input {24}.
The message enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))) that the attacker may have by 8 may be received at input {32}.
So the message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))) may be sent to the attacker at output {41}.
attacker(enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8)))).

10. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) that the attacker may have by 7 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))) that the attacker may have by 9 may be received at input {98}.
So the message m'_0_fromHolder[] may be sent on channel ch(bitG(g(x_8))) at output {144}.
mess(ch(bitG(g(x_8))),m'_0_fromHolder[]).

11. By 2, the attacker may have the channel ch(bitG(g(x_8))).
By 10, the message m'_0_fromHolder[] may be sent on this channel.
So the attacker may obtain the message m'_0_fromHolder[] by listening on this channel.
attacker(m'_0_fromHolder[]).

12. By 11, attacker(m'_0_fromHolder[]).
The goal is reached, represented in the following fact:
attacker(m'_0_fromHolder[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_I: SecretKey creating sk_I_3 at {1}

new sk_V: SecretKey creating sk_V_5 at {2}

new sk_P: SecretKey creating sk_P_5 at {3}

out(h, ~M) with ~M = pk(sk_I_3) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_V_5) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_P_5) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_I_3),sk_I_3) at {11}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_V_5),sk_V_5) at {12}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_P_5),sk_P_5) at {13}

out(h, ~M_6) with ~M_6 = genDID(pk(sk_E),sk_E) at {14}

new x: exponent creating x_8 at {82} in copy a

out(h, ~M_7) with ~M_7 = bitG(g(x_8)) at {86} in copy a

in(h, ~M_7) with ~M_7 = bitG(g(x_8)) at {24} in copy a_1

new y: exponent creating y_6 at {26} in copy a_1

out(h, (~M_8,~M_9)) with ~M_8 = bitG(g(y_6)), ~M_9 = enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6))) at {31} in copy a_1

in(h, (~M_8,~M_9)) with ~M_8 = bitG(g(y_6)), ~M_9 = enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(y_6),x_8))) at {87} in copy a

new n_i: bitstring creating n_i_4 at {93} in copy a

event auth_HolderSendsLastMessageToIssuer(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8)))) at {96} in copy a

out(h, ~M_10) with ~M_10 = enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))) at {97} in copy a

in(h, ~M_10) with ~M_10 = enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))) at {32} in copy a_1

event auth_IssuerSendsLastMessageToHolder(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6)))) at {40} in copy a_1

out(h, ~M_11) with ~M_11 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6))) at {41} in copy a_1

out(h, ~M_12) with ~M_12 = Issuer_Completes at {42} in copy a_1

event auth_IssuerCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8)))) at {44} in copy a_1

in(h, ~M_11) with ~M_11 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(y_6),x_8))) at {98} in copy a

out(h, ~M_13) with ~M_13 = Holder_Completes at {104} in copy a

out(ch(bitG(g(x_8))), ~M_14) with ~M_14 = m'_0_fromHolder at {144} in copy a

event auth_HolderCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(y_6),x_8)))) at {143} in copy a

The attacker has the message ~M_14 = m'_0_fromHolder.
A trace has been found.
RESULT not attacker(m'_0_fromHolder[]) is false.
-- Query not attacker(m'_1_fromIssuer[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(m'_1_fromIssuer[])
RESULT not attacker(m'_1_fromIssuer[]) is true.
-- Query not attacker(m'_2_fromHolder[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(m'_2_fromHolder[])
RESULT not attacker(m'_2_fromHolder[]) is true.
-- Query not attacker(m'_3_fromIssuer[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(m'_3_fromIssuer[])
RESULT not attacker(m'_3_fromIssuer[]) is true.
-- Query not attacker(m'_4_fromProver[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(m'_4_fromProver[])
goal reachable: attacker(m'_4_fromProver[])

Derivation:
Abbreviations:
x_8 = x[!1 = @sid]
y_6 = y[m_0 = bitG(g(x_8)),!1 = @sid_1]
n_i_4 = n_i[m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))),!1 = @sid]
x_9 = x_1[!2 = @sid_2,m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))),m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))),!1 = @sid]
y_7 = y_2[m_50 = bitG(g(x_9)),!1 = @sid_3]
n_c_8 = n_c_4[m_52 = enc(uri,GtoSymK(exp(g(x_9),y_7))),m_50 = bitG(g(x_9)),!1 = @sid_3]
tkn_access_8 = tkn_access_4[m_54 = enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7))),m_52 = enc(uri,GtoSymK(exp(g(x_9),y_7))),m_50 = bitG(g(x_9)),!1 = @sid_3]

1. The message bitG(g(x_8)) may be sent to the attacker at output {86}.
attacker(bitG(g(x_8))).

2. The message bitG(g(x_8)) that the attacker may have by 1 may be received at input {24}.
So the message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) may be sent to the attacker at output {31}.
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))))).

3. By 2, the attacker may know (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).
Using the function 2-proj-2-tuple the attacker may obtain enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))).
attacker(enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).

4. By 2, the attacker may know (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).
Using the function 1-proj-2-tuple the attacker may obtain bitG(g(y_6)).
attacker(bitG(g(y_6))).

5. By 4, the attacker may know bitG(g(y_6)).
By 3, the attacker may know enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))).
Using the function 2-tuple the attacker may obtain (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))))).

6. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) that the attacker may have by 5 may be received at input {87}.
So the message enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(x_8),y_6))) may be sent to the attacker at output {97}.
attacker(enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(x_8),y_6)))).

7. The message bitG(g(x_8)) that the attacker may have by 1 may be received at input {24}.
The message enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(x_8),y_6))) that the attacker may have by 6 may be received at input {32}.
So the message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))) may be sent to the attacker at output {41}.
attacker(enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6)))).

8. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) that the attacker may have by 5 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))) that the attacker may have by 7 may be received at input {98}.
So the message bitG(g(x_9)) may be sent to the attacker at output {111}.
attacker(bitG(g(x_9))).

9. By 8, the attacker may know bitG(g(x_9)).
Using the function ch the attacker may obtain ch(bitG(g(x_9))).
attacker(ch(bitG(g(x_9)))).

10. The message bitG(g(x_9)) that the attacker may have by 8 may be received at input {363}.
So the message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) may be sent to the attacker at output {370}.
attacker((bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))))).

11. By 10, the attacker may know (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).
Using the function 2-proj-2-tuple the attacker may obtain enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))).
attacker(enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).

12. By 10, the attacker may know (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).
Using the function 1-proj-2-tuple the attacker may obtain bitG(g(y_7)).
attacker(bitG(g(y_7))).

13. By 12, the attacker may know bitG(g(y_7)).
By 11, the attacker may know enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))).
Using the function 2-tuple the attacker may obtain (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).
attacker((bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))))).

14. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) that the attacker may have by 5 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))) that the attacker may have by 7 may be received at input {98}.
The message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) that the attacker may have by 13 may be received at input {112}.
So the message enc(uri,GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {120}.
attacker(enc(uri,GtoSymK(exp(g(x_9),y_7)))).

15. The message bitG(g(x_9)) that the attacker may have by 8 may be received at input {363}.
The message enc(uri,GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 14 may be received at input {371}.
So the message enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {377}.
attacker(enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7)))).

16. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) that the attacker may have by 5 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))) that the attacker may have by 7 may be received at input {98}.
The message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) that the attacker may have by 13 may be received at input {112}.
The message enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 15 may be received at input {121}.
So the message enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {130}.
attacker(enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7)))).

17. The message bitG(g(x_9)) that the attacker may have by 8 may be received at input {363}.
The message enc(uri,GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 14 may be received at input {371}.
The message enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 16 may be received at input {378}.
So the message enc((tkn_access_8,sig(tkn_access_8,sk_V[])),GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {387}.
attacker(enc((tkn_access_8,sig(tkn_access_8,sk_V[])),GtoSymK(exp(g(x_9),y_7)))).

18. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) that the attacker may have by 5 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))) that the attacker may have by 7 may be received at input {98}.
The message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) that the attacker may have by 13 may be received at input {112}.
The message enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 15 may be received at input {121}.
The message enc((tkn_access_8,sig(tkn_access_8,sk_V[])),GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 17 may be received at input {131}.
So the message m'_4_fromProver[] may be sent on channel ch(bitG(g(x_9))) at output {137}.
mess(ch(bitG(g(x_9))),m'_4_fromProver[]).

19. By 9, the attacker may have the channel ch(bitG(g(x_9))).
By 18, the message m'_4_fromProver[] may be sent on this channel.
So the attacker may obtain the message m'_4_fromProver[] by listening on this channel.
attacker(m'_4_fromProver[]).

20. By 19, attacker(m'_4_fromProver[]).
The goal is reached, represented in the following fact:
attacker(m'_4_fromProver[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_I: SecretKey creating sk_I_3 at {1}

new sk_V: SecretKey creating sk_V_5 at {2}

new sk_P: SecretKey creating sk_P_5 at {3}

out(h, ~M) with ~M = pk(sk_I_3) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_V_5) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_P_5) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_I_3),sk_I_3) at {11}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_V_5),sk_V_5) at {12}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_P_5),sk_P_5) at {13}

out(h, ~M_6) with ~M_6 = genDID(pk(sk_E),sk_E) at {14}

new x: exponent creating x_8 at {82} in copy a

out(h, ~M_7) with ~M_7 = bitG(g(x_8)) at {86} in copy a

in(h, ~M_7) with ~M_7 = bitG(g(x_8)) at {24} in copy a_1

new y: exponent creating y_6 at {26} in copy a_1

out(h, (~M_8,~M_9)) with ~M_8 = bitG(g(y_6)), ~M_9 = enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6))) at {31} in copy a_1

in(h, (~M_8,~M_9)) with ~M_8 = bitG(g(y_6)), ~M_9 = enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6))) at {87} in copy a

new n_i: bitstring creating n_i_4 at {93} in copy a

event auth_HolderSendsLastMessageToIssuer(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8)))) at {96} in copy a

out(h, ~M_10) with ~M_10 = enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))) at {97} in copy a

in(h, ~M_10) with ~M_10 = enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(x_8),y_6))) at {32} in copy a_1

event auth_IssuerSendsLastMessageToHolder(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(x_8),y_6))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6)))) at {40} in copy a_1

out(h, ~M_11) with ~M_11 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6))) at {41} in copy a_1

out(h, ~M_12) with ~M_12 = Issuer_Completes at {42} in copy a_1

event auth_IssuerCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(x_8),y_6)))) at {44} in copy a_1

in(h, ~M_11) with ~M_11 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6))) at {98} in copy a

out(h, ~M_13) with ~M_13 = Holder_Completes at {104} in copy a

event auth_HolderCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6)))) at {143} in copy a

new x_1: exponent creating x_9 at {107} in copy a, a_2

out(h, ~M_14) with ~M_14 = bitG(g(x_9)) at {111} in copy a, a_2

in(h, ~M_14) with ~M_14 = bitG(g(x_9)) at {363} in copy a_3

new y_2: exponent creating y_7 at {365} in copy a_3

out(h, (~M_15,~M_16)) with ~M_15 = bitG(g(y_7)), ~M_16 = enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7))) at {370} in copy a_3

in(h, (~M_15,~M_16)) with ~M_15 = bitG(g(y_7)), ~M_16 = enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7))) at {112} in copy a, a_2

out(h, ~M_17) with ~M_17 = enc(uri,GtoSymK(exp(g(y_7),x_9))) at {120} in copy a, a_2

in(h, ~M_17) with ~M_17 = enc(uri,GtoSymK(exp(g(x_9),y_7))) at {371} in copy a_3

new n_c_4: bitstring creating n_c_8 at {374} in copy a_3

out(h, ~M_18) with ~M_18 = enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))) at {377} in copy a_3

in(h, ~M_18) with ~M_18 = enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))) at {121} in copy a, a_2

event auth_ProverSendsLastMessageToVerifier(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9)))) at {128} in copy a, a_2

event auth_ProverSendsLastMessageToVerifierInProtocolFull(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6))),bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9)))) at {129} in copy a, a_2

out(h, ~M_19) with ~M_19 = enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9))) at {130} in copy a, a_2

in(h, ~M_19) with ~M_19 = enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(x_9),y_7))) at {378} in copy a_3

new tkn_access_4: bitstring creating tkn_access_8 at {383} in copy a_3

event auth_VerifierSendsLastMessageToProver(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(x_9),y_7))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(x_9),y_7))),enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_9),y_7)))) at {386} in copy a_3

out(h, ~M_20) with ~M_20 = enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_9),y_7))) at {387} in copy a_3

out(h, ~M_21) with ~M_21 = Verifier_Completes at {388} in copy a_3

event auth_VerifierCompletesProtocol(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(x_9),y_7))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(x_9),y_7)))) at {390} in copy a_3

in(h, ~M_20) with ~M_20 = enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_9),y_7))) at {131} in copy a, a_2

out(h, ~M_22) with ~M_22 = Prover_Completes at {134} in copy a, a_2

out(ch(uri), ~M_23) with ~M_23 = m'_6_fromProver at {138} in copy a, a_2

out(ch(bitG(g(x_9))), ~M_24) with ~M_24 = m'_4_fromProver at {137} in copy a, a_2

event auth_ProverCompletesProtocol(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9))),enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_9),y_7)))) at {136} in copy a, a_2

The attacker has the message ~M_24 = m'_4_fromProver.
A trace has been found.
RESULT not attacker(m'_4_fromProver[]) is false.
-- Query not attacker(m'_5_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(m'_5_fromVerifier[])
RESULT not attacker(m'_5_fromVerifier[]) is true.
-- Query not attacker(m'_6_fromProver[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(m'_6_fromProver[])
goal reachable: attacker(m'_6_fromProver[])

Derivation:
Abbreviations:
x_8 = x[!1 = @sid]
y_6 = y[m_0 = bitG(g(x_8)),!1 = @sid_1]
n_i_4 = n_i[m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]
x_9 = x_1[!2 = @sid_2,m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))),m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]
y_7 = y_2[m_50 = bitG(g(x_9)),!1 = @sid_3]
n_c_8 = n_c_4[m_52 = enc(uri,GtoSymK(exp(g(x_9),y_7))),m_50 = bitG(g(x_9)),!1 = @sid_3]
tkn_access_8 = tkn_access_4[m_54 = enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7))),m_52 = enc(uri,GtoSymK(exp(g(x_9),y_7))),m_50 = bitG(g(x_9)),!1 = @sid_3]

1. The message bitG(g(x_8)) may be sent to the attacker at output {86}.
attacker(bitG(g(x_8))).

2. The message bitG(g(x_8)) that the attacker may have by 1 may be received at input {24}.
So the message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) may be sent to the attacker at output {31}.
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8))))).

3. By 2, the attacker may know (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))).
Using the function 2-proj-2-tuple the attacker may obtain enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8))).
attacker(enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))).

4. The message bitG(g(x_8)) that the attacker may have by 1 may be received at input {24}.
So the message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) may be sent to the attacker at output {31}.
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))))).

5. By 4, the attacker may know (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).
Using the function 1-proj-2-tuple the attacker may obtain bitG(g(y_6)).
attacker(bitG(g(y_6))).

6. By 5, the attacker may know bitG(g(y_6)).
By 3, the attacker may know enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8))).
Using the function 2-tuple the attacker may obtain (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))).
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8))))).

7. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) that the attacker may have by 6 may be received at input {87}.
So the message enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))) may be sent to the attacker at output {97}.
attacker(enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8)))).

8. The message bitG(g(x_8)) that the attacker may have by 1 may be received at input {24}.
The message enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))) that the attacker may have by 7 may be received at input {32}.
So the message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))) may be sent to the attacker at output {41}.
attacker(enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8)))).

9. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) that the attacker may have by 6 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))) that the attacker may have by 8 may be received at input {98}.
So the message bitG(g(x_9)) may be sent to the attacker at output {111}.
attacker(bitG(g(x_9))).

10. The message bitG(g(x_9)) that the attacker may have by 9 may be received at input {363}.
So the message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) may be sent to the attacker at output {370}.
attacker((bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))))).

11. By 10, the attacker may know (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).
Using the function 2-proj-2-tuple the attacker may obtain enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))).
attacker(enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).

12. By 10, the attacker may know (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).
Using the function 1-proj-2-tuple the attacker may obtain bitG(g(y_7)).
attacker(bitG(g(y_7))).

13. By 12, the attacker may know bitG(g(y_7)).
By 11, the attacker may know enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))).
Using the function 2-tuple the attacker may obtain (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).
attacker((bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))))).

14. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) that the attacker may have by 6 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))) that the attacker may have by 8 may be received at input {98}.
The message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) that the attacker may have by 13 may be received at input {112}.
So the message enc(uri,GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {120}.
attacker(enc(uri,GtoSymK(exp(g(x_9),y_7)))).

15. The message bitG(g(x_9)) that the attacker may have by 9 may be received at input {363}.
The message enc(uri,GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 14 may be received at input {371}.
So the message enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {377}.
attacker(enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7)))).

16. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) that the attacker may have by 6 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))) that the attacker may have by 8 may be received at input {98}.
The message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) that the attacker may have by 13 may be received at input {112}.
The message enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 15 may be received at input {121}.
So the message enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {130}.
attacker(enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7)))).

17. The message bitG(g(x_9)) that the attacker may have by 9 may be received at input {363}.
The message enc(uri,GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 14 may be received at input {371}.
The message enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 16 may be received at input {378}.
So the message enc((tkn_access_8,sig(tkn_access_8,sk_V[])),GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {387}.
attacker(enc((tkn_access_8,sig(tkn_access_8,sk_V[])),GtoSymK(exp(g(x_9),y_7)))).

18. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) that the attacker may have by 6 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))) that the attacker may have by 8 may be received at input {98}.
The message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) that the attacker may have by 13 may be received at input {112}.
The message enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 15 may be received at input {121}.
The message enc((tkn_access_8,sig(tkn_access_8,sk_V[])),GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 17 may be received at input {131}.
So the message m'_6_fromProver[] may be sent to the attacker at output {138}.
attacker(m'_6_fromProver[]).

19. By 18, attacker(m'_6_fromProver[]).
The goal is reached, represented in the following fact:
attacker(m'_6_fromProver[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_I: SecretKey creating sk_I_3 at {1}

new sk_V: SecretKey creating sk_V_5 at {2}

new sk_P: SecretKey creating sk_P_5 at {3}

out(h, ~M) with ~M = pk(sk_I_3) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_V_5) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_P_5) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_I_3),sk_I_3) at {11}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_V_5),sk_V_5) at {12}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_P_5),sk_P_5) at {13}

out(h, ~M_6) with ~M_6 = genDID(pk(sk_E),sk_E) at {14}

new x: exponent creating x_8 at {82} in copy a

out(h, ~M_7) with ~M_7 = bitG(g(x_8)) at {86} in copy a

in(h, ~M_7) with ~M_7 = bitG(g(x_8)) at {24} in copy a_1

new y: exponent creating y_6 at {26} in copy a_1

out(h, (~M_8,~M_9)) with ~M_8 = bitG(g(y_6)), ~M_9 = enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6))) at {31} in copy a_1

in(h, (~M_8,~M_9)) with ~M_8 = bitG(g(y_6)), ~M_9 = enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(y_6),x_8))) at {87} in copy a

new n_i: bitstring creating n_i_4 at {93} in copy a

event auth_HolderSendsLastMessageToIssuer(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8)))) at {96} in copy a

out(h, ~M_10) with ~M_10 = enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))) at {97} in copy a

in(h, ~M_10) with ~M_10 = enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))) at {32} in copy a_1

event auth_IssuerSendsLastMessageToHolder(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6)))) at {40} in copy a_1

out(h, ~M_11) with ~M_11 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6))) at {41} in copy a_1

out(h, ~M_12) with ~M_12 = Issuer_Completes at {42} in copy a_1

event auth_IssuerCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8)))) at {44} in copy a_1

in(h, ~M_11) with ~M_11 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(y_6),x_8))) at {98} in copy a

out(h, ~M_13) with ~M_13 = Holder_Completes at {104} in copy a

event auth_HolderCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(y_6),x_8)))) at {143} in copy a

new x_1: exponent creating x_9 at {107} in copy a, a_2

out(h, ~M_14) with ~M_14 = bitG(g(x_9)) at {111} in copy a, a_2

in(h, ~M_14) with ~M_14 = bitG(g(x_9)) at {363} in copy a_3

new y_2: exponent creating y_7 at {365} in copy a_3

out(h, (~M_15,~M_16)) with ~M_15 = bitG(g(y_7)), ~M_16 = enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7))) at {370} in copy a_3

in(h, (~M_15,~M_16)) with ~M_15 = bitG(g(y_7)), ~M_16 = enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7))) at {112} in copy a, a_2

out(h, ~M_17) with ~M_17 = enc(uri,GtoSymK(exp(g(y_7),x_9))) at {120} in copy a, a_2

in(h, ~M_17) with ~M_17 = enc(uri,GtoSymK(exp(g(x_9),y_7))) at {371} in copy a_3

new n_c_4: bitstring creating n_c_8 at {374} in copy a_3

out(h, ~M_18) with ~M_18 = enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))) at {377} in copy a_3

in(h, ~M_18) with ~M_18 = enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))) at {121} in copy a, a_2

event auth_ProverSendsLastMessageToVerifier(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9)))) at {128} in copy a, a_2

event auth_ProverSendsLastMessageToVerifierInProtocolFull(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(y_6),x_8))),bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9)))) at {129} in copy a, a_2

out(h, ~M_19) with ~M_19 = enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9))) at {130} in copy a, a_2

in(h, ~M_19) with ~M_19 = enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(x_9),y_7))) at {378} in copy a_3

new tkn_access_4: bitstring creating tkn_access_8 at {383} in copy a_3

event auth_VerifierSendsLastMessageToProver(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(x_9),y_7))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(x_9),y_7))),enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_9),y_7)))) at {386} in copy a_3

out(h, ~M_20) with ~M_20 = enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_9),y_7))) at {387} in copy a_3

out(h, ~M_21) with ~M_21 = Verifier_Completes at {388} in copy a_3

event auth_VerifierCompletesProtocol(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(x_9),y_7))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(x_9),y_7)))) at {390} in copy a_3

in(h, ~M_20) with ~M_20 = enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_9),y_7))) at {131} in copy a, a_2

out(h, ~M_22) with ~M_22 = Prover_Completes at {134} in copy a, a_2

out(ch(uri), ~M_23) with ~M_23 = m'_6_fromProver at {138} in copy a, a_2

event auth_ProverCompletesProtocol(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9))),enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_9),y_7)))) at {136} in copy a, a_2

The attacker has the message ~M_23 = m'_6_fromProver.
A trace has been found.
RESULT not attacker(m'_6_fromProver[]) is false.
-- Query not attacker(m'_7_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(m'_7_fromVerifier[])
RESULT not attacker(m'_7_fromVerifier[]) is true.
-- Query not attacker(m'_8_fromProver[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(m'_8_fromProver[])
RESULT not attacker(m'_8_fromProver[]) is true.
-- Query not attacker(m'_9_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(m'_9_fromVerifier[])
RESULT not attacker(m'_9_fromVerifier[]) is true.
-- Query not attacker(rule_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(rule_fromVerifier[])
goal reachable: attacker(rule_fromVerifier[])

Derivation:
Abbreviations:
x_8 = x[!1 = @sid]
y_6 = y[m_0 = bitG(g(x_8)),!1 = @sid_1]
n_i_4 = n_i[m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))),!1 = @sid]
x_9 = x_1[!2 = @sid_2,m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))),m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))),!1 = @sid]
y_7 = y_2[m_50 = bitG(g(x_9)),!1 = @sid_3]
n_c_8 = n_c_4[m_52 = enc(uri,GtoSymK(exp(g(x_9),y_7))),m_50 = bitG(g(x_9)),!1 = @sid_3]

1. The message genDID(pk(sk_I[]),sk_I[]) may be sent to the attacker at output {11}.
attacker(genDID(pk(sk_I[]),sk_I[])).

2. Using the function attr the attacker may obtain attr.
attacker(attr).

3. The message genDID(pk(sk_P[]),sk_P[]) may be sent to the attacker at output {13}.
attacker(genDID(pk(sk_P[]),sk_P[])).

4. By 3, the attacker may know genDID(pk(sk_P[]),sk_P[]).
By 2, the attacker may know attr.
By 1, the attacker may know genDID(pk(sk_I[]),sk_I[]).
Using the function 3-tuple the attacker may obtain (genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])).
attacker((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))).

5. By 4, the attacker may know (genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])).
Using the function ch the attacker may obtain ch((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))).
attacker(ch((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])))).

6. The message bitG(g(x_8)) may be sent to the attacker at output {86}.
attacker(bitG(g(x_8))).

7. The message bitG(g(x_8)) that the attacker may have by 6 may be received at input {24}.
So the message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) may be sent to the attacker at output {31}.
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))))).

8. By 7, the attacker may know (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).
Using the function 2-proj-2-tuple the attacker may obtain enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))).
attacker(enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).

9. By 7, the attacker may know (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).
Using the function 1-proj-2-tuple the attacker may obtain bitG(g(y_6)).
attacker(bitG(g(y_6))).

10. By 9, the attacker may know bitG(g(y_6)).
By 8, the attacker may know enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))).
Using the function 2-tuple the attacker may obtain (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))))).

11. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) that the attacker may have by 10 may be received at input {87}.
So the message enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(x_8),y_6))) may be sent to the attacker at output {97}.
attacker(enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(x_8),y_6)))).

12. The message bitG(g(x_8)) that the attacker may have by 6 may be received at input {24}.
The message enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(x_8),y_6))) that the attacker may have by 11 may be received at input {32}.
So the message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))) may be sent to the attacker at output {41}.
attacker(enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6)))).

13. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) that the attacker may have by 10 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))) that the attacker may have by 12 may be received at input {98}.
So the message bitG(g(x_9)) may be sent to the attacker at output {111}.
attacker(bitG(g(x_9))).

14. The message bitG(g(x_9)) that the attacker may have by 13 may be received at input {363}.
So the message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) may be sent to the attacker at output {370}.
attacker((bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))))).

15. By 14, the attacker may know (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).
Using the function 2-proj-2-tuple the attacker may obtain enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))).
attacker(enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).

16. By 14, the attacker may know (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).
Using the function 1-proj-2-tuple the attacker may obtain bitG(g(y_7)).
attacker(bitG(g(y_7))).

17. By 16, the attacker may know bitG(g(y_7)).
By 15, the attacker may know enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))).
Using the function 2-tuple the attacker may obtain (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).
attacker((bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))))).

18. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) that the attacker may have by 10 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))) that the attacker may have by 12 may be received at input {98}.
The message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) that the attacker may have by 17 may be received at input {112}.
So the message enc(uri,GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {120}.
attacker(enc(uri,GtoSymK(exp(g(x_9),y_7)))).

19. The message bitG(g(x_9)) that the attacker may have by 13 may be received at input {363}.
The message enc(uri,GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 18 may be received at input {371}.
So the message enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {377}.
attacker(enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7)))).

20. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) that the attacker may have by 10 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))) that the attacker may have by 12 may be received at input {98}.
The message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) that the attacker may have by 17 may be received at input {112}.
The message enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 19 may be received at input {121}.
So the message enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {130}.
attacker(enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7)))).

21. The message bitG(g(x_9)) that the attacker may have by 13 may be received at input {363}.
The message enc(uri,GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 18 may be received at input {371}.
The message enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 20 may be received at input {378}.
So the message rule_fromVerifier[] may be sent on channel ch((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))) at output {392}.
mess(ch((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),rule_fromVerifier[]).

22. By 5, the attacker may have the channel ch((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))).
By 21, the message rule_fromVerifier[] may be sent on this channel.
So the attacker may obtain the message rule_fromVerifier[] by listening on this channel.
attacker(rule_fromVerifier[]).

23. By 22, attacker(rule_fromVerifier[]).
The goal is reached, represented in the following fact:
attacker(rule_fromVerifier[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_I: SecretKey creating sk_I_3 at {1}

new sk_V: SecretKey creating sk_V_5 at {2}

new sk_P: SecretKey creating sk_P_5 at {3}

out(h, ~M) with ~M = pk(sk_I_3) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_V_5) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_P_5) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_I_3),sk_I_3) at {11}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_V_5),sk_V_5) at {12}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_P_5),sk_P_5) at {13}

out(h, ~M_6) with ~M_6 = genDID(pk(sk_E),sk_E) at {14}

new x: exponent creating x_8 at {82} in copy a

out(h, ~M_7) with ~M_7 = bitG(g(x_8)) at {86} in copy a

in(h, ~M_7) with ~M_7 = bitG(g(x_8)) at {24} in copy a_1

new y: exponent creating y_6 at {26} in copy a_1

out(h, (~M_8,~M_9)) with ~M_8 = bitG(g(y_6)), ~M_9 = enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6))) at {31} in copy a_1

in(h, (~M_8,~M_9)) with ~M_8 = bitG(g(y_6)), ~M_9 = enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6))) at {87} in copy a

new n_i: bitstring creating n_i_4 at {93} in copy a

event auth_HolderSendsLastMessageToIssuer(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8)))) at {96} in copy a

out(h, ~M_10) with ~M_10 = enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))) at {97} in copy a

in(h, ~M_10) with ~M_10 = enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(x_8),y_6))) at {32} in copy a_1

event auth_IssuerSendsLastMessageToHolder(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(x_8),y_6))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6)))) at {40} in copy a_1

out(h, ~M_11) with ~M_11 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6))) at {41} in copy a_1

out(h, ~M_12) with ~M_12 = Issuer_Completes at {42} in copy a_1

event auth_IssuerCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(x_8),y_6)))) at {44} in copy a_1

in(h, ~M_11) with ~M_11 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6))) at {98} in copy a

out(h, ~M_13) with ~M_13 = Holder_Completes at {104} in copy a

event auth_HolderCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6)))) at {143} in copy a

new x_1: exponent creating x_9 at {107} in copy a, a_2

out(h, ~M_14) with ~M_14 = bitG(g(x_9)) at {111} in copy a, a_2

in(h, ~M_14) with ~M_14 = bitG(g(x_9)) at {363} in copy a_3

new y_2: exponent creating y_7 at {365} in copy a_3

out(h, (~M_15,~M_16)) with ~M_15 = bitG(g(y_7)), ~M_16 = enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7))) at {370} in copy a_3

in(h, (~M_15,~M_16)) with ~M_15 = bitG(g(y_7)), ~M_16 = enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7))) at {112} in copy a, a_2

out(h, ~M_17) with ~M_17 = enc(uri,GtoSymK(exp(g(y_7),x_9))) at {120} in copy a, a_2

in(h, ~M_17) with ~M_17 = enc(uri,GtoSymK(exp(g(x_9),y_7))) at {371} in copy a_3

new n_c_4: bitstring creating n_c_8 at {374} in copy a_3

out(h, ~M_18) with ~M_18 = enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))) at {377} in copy a_3

in(h, ~M_18) with ~M_18 = enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))) at {121} in copy a, a_2

event auth_ProverSendsLastMessageToVerifier(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9)))) at {128} in copy a, a_2

event auth_ProverSendsLastMessageToVerifierInProtocolFull(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6))),bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9)))) at {129} in copy a, a_2

out(h, ~M_19) with ~M_19 = enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9))) at {130} in copy a, a_2

in(h, ~M_19) with ~M_19 = enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(x_9),y_7))) at {378} in copy a_3

new tkn_access_4: bitstring creating tkn_access_8 at {383} in copy a_3

event auth_VerifierSendsLastMessageToProver(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(x_9),y_7))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(x_9),y_7))),enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_9),y_7)))) at {386} in copy a_3

out(h, ~M_20) with ~M_20 = enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_9),y_7))) at {387} in copy a_3

out(h, ~M_21) with ~M_21 = Verifier_Completes at {388} in copy a_3

out(ch((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))), ~M_22) with ~M_22 = rule_fromVerifier at {392} in copy a_3

event auth_VerifierCompletesProtocol(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(x_9),y_7))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(x_9),y_7)))) at {390} in copy a_3

The attacker has the message ~M_22 = rule_fromVerifier.
A trace has been found.
RESULT not attacker(rule_fromVerifier[]) is false.
-- Query not attacker(cred_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(cred_fromVerifier[])
goal reachable: attacker(cred_fromVerifier[])

Derivation:
Abbreviations:
x_8 = x[!1 = @sid]
y_6 = y[m_0 = bitG(g(x_8)),!1 = @sid_1]
n_i_4 = n_i[m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))),!1 = @sid]
x_9 = x_1[!2 = @sid_2,m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))),m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))),!1 = @sid]
y_7 = y_2[m_50 = bitG(g(x_9)),!1 = @sid_3]
n_c_8 = n_c_4[m_52 = enc(uri,GtoSymK(exp(g(x_9),y_7))),m_50 = bitG(g(x_9)),!1 = @sid_3]
x_10 = x_2[!1 = @sid_4]
y_8 = y[m_0 = bitG(g(x_10)),!1 = @sid_5]
n_i_5 = n_i_1[m_17 = (bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8)))),!1 = @sid_4]
x_11 = x_3[!2 = @sid_6,m_20 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_5),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_5),sk_I[])),GtoSymK(exp(g(x_10),y_8))),m_17 = (bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8)))),!1 = @sid_4]

1. The attacker has some term x_12.
attacker(x_12).

2. The message bitG(g(x_10)) may be sent to the attacker at output {156}.
attacker(bitG(g(x_10))).

3. The message bitG(g(x_10)) that the attacker may have by 2 may be received at input {24}.
So the message (bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8)))) may be sent to the attacker at output {31}.
attacker((bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8))))).

4. By 3, the attacker may know (bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8)))).
Using the function 2-proj-2-tuple the attacker may obtain enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8))).
attacker(enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8)))).

5. By 3, the attacker may know (bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8)))).
Using the function 1-proj-2-tuple the attacker may obtain bitG(g(y_8)).
attacker(bitG(g(y_8))).

6. By 5, the attacker may know bitG(g(y_8)).
By 4, the attacker may know enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8))).
Using the function 2-tuple the attacker may obtain (bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8)))).
attacker((bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8))))).

7. The message (bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8)))) that the attacker may have by 6 may be received at input {157}.
So the message enc((sig((g(x_10),g(y_8)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_5),GtoSymK(exp(g(x_10),y_8))) may be sent to the attacker at output {167}.
attacker(enc((sig((g(x_10),g(y_8)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_5),GtoSymK(exp(g(x_10),y_8)))).

8. The message bitG(g(x_10)) that the attacker may have by 2 may be received at input {24}.
The message enc((sig((g(x_10),g(y_8)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_5),GtoSymK(exp(g(x_10),y_8))) that the attacker may have by 7 may be received at input {32}.
So the message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_5),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_5),sk_I[])),GtoSymK(exp(g(x_10),y_8))) may be sent to the attacker at output {41}.
attacker(enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_5),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_5),sk_I[])),GtoSymK(exp(g(x_10),y_8)))).

9. The message (bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8)))) that the attacker may have by 6 may be received at input {157}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_5),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_5),sk_I[])),GtoSymK(exp(g(x_10),y_8))) that the attacker may have by 8 may be received at input {168}.
So the message bitG(g(x_11)) may be sent to the attacker at output {181}.
attacker(bitG(g(x_11))).

10. By 9, the attacker may know bitG(g(x_11)).
Using the function unbitG the attacker may obtain g(x_11).
attacker(g(x_11)).

11. By 10, the attacker may know g(x_11).
By 1, the attacker may know x_12.
Using the function exp the attacker may obtain exp(g(x_11),x_12).
attacker(exp(g(x_11),x_12)).

12. By 11, the attacker may know exp(g(x_11),x_12).
Using the function GtoSymK the attacker may obtain GtoSymK(exp(g(x_11),x_12)).
attacker(GtoSymK(exp(g(x_11),x_12))).

13. The attacker initially knows sk_E[].
attacker(sk_E[]).

14. By 1, the attacker may know x_12.
Using the function g the attacker may obtain g(x_12).
attacker(g(x_12)).

15. By 14, the attacker may know g(x_12).
By 10, the attacker may know g(x_11).
Using the function 2-tuple the attacker may obtain (g(x_12),g(x_11)).
attacker((g(x_12),g(x_11))).

16. By 15, the attacker may know (g(x_12),g(x_11)).
By 13, the attacker may know sk_E[].
Using the function sig the attacker may obtain sig((g(x_12),g(x_11)),sk_E[]).
attacker(sig((g(x_12),g(x_11)),sk_E[])).

17. By 16, the attacker may know sig((g(x_12),g(x_11)),sk_E[]).
By 12, the attacker may know GtoSymK(exp(g(x_11),x_12)).
Using the function enc the attacker may obtain enc(sig((g(x_12),g(x_11)),sk_E[]),GtoSymK(exp(g(x_11),x_12))).
attacker(enc(sig((g(x_12),g(x_11)),sk_E[]),GtoSymK(exp(g(x_11),x_12)))).

18. By 14, the attacker may know g(x_12).
Using the function bitG the attacker may obtain bitG(g(x_12)).
attacker(bitG(g(x_12))).

19. By 18, the attacker may know bitG(g(x_12)).
By 17, the attacker may know enc(sig((g(x_12),g(x_11)),sk_E[]),GtoSymK(exp(g(x_11),x_12))).
Using the function 2-tuple the attacker may obtain (bitG(g(x_12)),enc(sig((g(x_12),g(x_11)),sk_E[]),GtoSymK(exp(g(x_11),x_12)))).
attacker((bitG(g(x_12)),enc(sig((g(x_12),g(x_11)),sk_E[]),GtoSymK(exp(g(x_11),x_12))))).

20. The message genDID(pk(sk_I[]),sk_I[]) may be sent to the attacker at output {11}.
attacker(genDID(pk(sk_I[]),sk_I[])).

21. Using the function attr the attacker may obtain attr.
attacker(attr).

22. The message genDID(pk(sk_P[]),sk_P[]) may be sent to the attacker at output {13}.
attacker(genDID(pk(sk_P[]),sk_P[])).

23. By 22, the attacker may know genDID(pk(sk_P[]),sk_P[]).
By 21, the attacker may know attr.
By 20, the attacker may know genDID(pk(sk_I[]),sk_I[]).
Using the function 3-tuple the attacker may obtain (genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])).
attacker((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))).

24. The attacker has some term n_c_9.
attacker(n_c_9).

25. By 24, the attacker may know n_c_9.
By 23, the attacker may know (genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])).
Using the function 2-tuple the attacker may obtain (n_c_9,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))).
attacker((n_c_9,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])))).

26. By 25, the attacker may know (n_c_9,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))).
By 12, the attacker may know GtoSymK(exp(g(x_11),x_12)).
Using the function enc the attacker may obtain enc((n_c_9,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_11),x_12))).
attacker(enc((n_c_9,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_11),x_12)))).

27. The message (bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_I[]),GtoSymK(exp(g(x_10),y_8)))) that the attacker may have by 6 may be received at input {157}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_5),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_5),sk_I[])),GtoSymK(exp(g(x_10),y_8))) that the attacker may have by 8 may be received at input {168}.
The message (bitG(g(x_12)),enc(sig((g(x_12),g(x_11)),sk_E[]),GtoSymK(exp(g(x_11),x_12)))) that the attacker may have by 19 may be received at input {182}.
The message enc((n_c_9,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_11),x_12))) that the attacker may have by 26 may be received at input {191}.
So the message enc((((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_11),x_12))) may be sent to the attacker at output {200}.
attacker(enc((((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_11),x_12)))).

28. By 27, the attacker may know enc((((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_11),x_12))).
By 12, the attacker may know GtoSymK(exp(g(x_11),x_12)).
Using the function dec the attacker may obtain (((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])).
attacker((((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[]))).

29. By 28, the attacker may know (((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])).
Using the function 1-proj-2-tuple the attacker may obtain ((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))).
attacker(((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])))).

30. By 29, the attacker may know ((g(x_11),g(x_12)),n_c_9,genDID(pk(sk_E[]),sk_E[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))).
Using the function 4-proj-4-tuple the attacker may obtain ((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])).
attacker(((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))).

31. By 30, the attacker may know ((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])).
Using the function 2-proj-2-tuple the attacker may obtain sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]).
attacker(sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])).

32. By 22, the attacker may know genDID(pk(sk_P[]),sk_P[]).
By 21, the attacker may know attr.
By 20, the attacker may know genDID(pk(sk_I[]),sk_I[]).
By 31, the attacker may know sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]).
Using the function 4-tuple the attacker may obtain (genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])).
attacker((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))).

33. By 32, the attacker may know (genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])).
Using the function ch the attacker may obtain ch((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))).
attacker(ch((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])))).

34. The message bitG(g(x_8)) may be sent to the attacker at output {86}.
attacker(bitG(g(x_8))).

35. The message bitG(g(x_8)) that the attacker may have by 34 may be received at input {24}.
So the message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) may be sent to the attacker at output {31}.
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))))).

36. By 35, the attacker may know (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).
Using the function 2-proj-2-tuple the attacker may obtain enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))).
attacker(enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).

37. By 35, the attacker may know (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).
Using the function 1-proj-2-tuple the attacker may obtain bitG(g(y_6)).
attacker(bitG(g(y_6))).

38. By 37, the attacker may know bitG(g(y_6)).
By 36, the attacker may know enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))).
Using the function 2-tuple the attacker may obtain (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))))).

39. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) that the attacker may have by 38 may be received at input {87}.
So the message enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(x_8),y_6))) may be sent to the attacker at output {97}.
attacker(enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(x_8),y_6)))).

40. The message bitG(g(x_8)) that the attacker may have by 34 may be received at input {24}.
The message enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(x_8),y_6))) that the attacker may have by 39 may be received at input {32}.
So the message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))) may be sent to the attacker at output {41}.
attacker(enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6)))).

41. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) that the attacker may have by 38 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))) that the attacker may have by 40 may be received at input {98}.
So the message bitG(g(x_9)) may be sent to the attacker at output {111}.
attacker(bitG(g(x_9))).

42. The message bitG(g(x_9)) that the attacker may have by 41 may be received at input {363}.
So the message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) may be sent to the attacker at output {370}.
attacker((bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))))).

43. By 42, the attacker may know (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).
Using the function 2-proj-2-tuple the attacker may obtain enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))).
attacker(enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).

44. By 42, the attacker may know (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).
Using the function 1-proj-2-tuple the attacker may obtain bitG(g(y_7)).
attacker(bitG(g(y_7))).

45. By 44, the attacker may know bitG(g(y_7)).
By 43, the attacker may know enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))).
Using the function 2-tuple the attacker may obtain (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).
attacker((bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))))).

46. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) that the attacker may have by 38 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))) that the attacker may have by 40 may be received at input {98}.
The message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) that the attacker may have by 45 may be received at input {112}.
So the message enc(uri,GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {120}.
attacker(enc(uri,GtoSymK(exp(g(x_9),y_7)))).

47. The message bitG(g(x_9)) that the attacker may have by 41 may be received at input {363}.
The message enc(uri,GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 46 may be received at input {371}.
So the message enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {377}.
attacker(enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7)))).

48. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) that the attacker may have by 38 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(x_8),y_6))) that the attacker may have by 40 may be received at input {98}.
The message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) that the attacker may have by 45 may be received at input {112}.
The message enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 47 may be received at input {121}.
So the message enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7))) may be sent to the attacker at output {130}.
attacker(enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7)))).

49. The message bitG(g(x_9)) that the attacker may have by 41 may be received at input {363}.
The message enc(uri,GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 46 may be received at input {371}.
The message enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(x_9),y_7))) that the attacker may have by 48 may be received at input {378}.
So the message cred_fromVerifier[] may be sent on channel ch((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))) at output {395}.
mess(ch((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),cred_fromVerifier[]).

50. By 33, the attacker may have the channel ch((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))).
By 49, the message cred_fromVerifier[] may be sent on this channel.
So the attacker may obtain the message cred_fromVerifier[] by listening on this channel.
attacker(cred_fromVerifier[]).

51. By 50, attacker(cred_fromVerifier[]).
The goal is reached, represented in the following fact:
attacker(cred_fromVerifier[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_I: SecretKey creating sk_I_3 at {1}

new sk_V: SecretKey creating sk_V_5 at {2}

new sk_P: SecretKey creating sk_P_5 at {3}

out(h, ~M) with ~M = pk(sk_I_3) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_V_5) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_P_5) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_I_3),sk_I_3) at {11}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_V_5),sk_V_5) at {12}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_P_5),sk_P_5) at {13}

out(h, ~M_6) with ~M_6 = genDID(pk(sk_E),sk_E) at {14}

new x_2: exponent creating x_8 at {152} in copy a

out(h, ~M_7) with ~M_7 = bitG(g(x_8)) at {156} in copy a

new x: exponent creating x_9 at {82} in copy a_1

out(h, ~M_8) with ~M_8 = bitG(g(x_9)) at {86} in copy a_1

in(h, ~M_8) with ~M_8 = bitG(g(x_9)) at {24} in copy a_2

new y: exponent creating y_6 at {26} in copy a_2

out(h, (~M_9,~M_10)) with ~M_9 = bitG(g(y_6)), ~M_10 = enc(sig((g(y_6),g(x_9)),sk_I_3),GtoSymK(exp(g(x_9),y_6))) at {31} in copy a_2

in(h, ~M_7) with ~M_7 = bitG(g(x_8)) at {24} in copy a_3

new y: exponent creating y_7 at {26} in copy a_3

out(h, (~M_11,~M_12)) with ~M_11 = bitG(g(y_7)), ~M_12 = enc(sig((g(y_7),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_7))) at {31} in copy a_3

in(h, (~M_9,~M_10)) with ~M_9 = bitG(g(y_6)), ~M_10 = enc(sig((g(y_6),g(x_9)),sk_I_3),GtoSymK(exp(g(x_9),y_6))) at {87} in copy a_1

new n_i: bitstring creating n_i_4 at {93} in copy a_1

event auth_HolderSendsLastMessageToIssuer(bitG(g(x_9)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_9)),sk_I_3),GtoSymK(exp(g(x_9),y_6)))),enc((sig((g(x_9),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_9)))) at {96} in copy a_1

out(h, ~M_13) with ~M_13 = enc((sig((g(x_9),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_9))) at {97} in copy a_1

in(h, ~M_13) with ~M_13 = enc((sig((g(x_9),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(x_9),y_6))) at {32} in copy a_2

event auth_IssuerSendsLastMessageToHolder(bitG(g(x_9)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_9)),sk_I_3),GtoSymK(exp(g(x_9),y_6)))),enc((sig((g(x_9),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(x_9),y_6))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_9),y_6)))) at {40} in copy a_2

out(h, ~M_14) with ~M_14 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_9),y_6))) at {41} in copy a_2

out(h, ~M_15) with ~M_15 = Issuer_Completes at {42} in copy a_2

event auth_IssuerCompletesProtocol(bitG(g(x_9)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_9)),sk_I_3),GtoSymK(exp(g(x_9),y_6)))),enc((sig((g(x_9),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(x_9),y_6)))) at {44} in copy a_2

in(h, ~M_14) with ~M_14 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_9),y_6))) at {98} in copy a_1

out(h, ~M_16) with ~M_16 = Holder_Completes at {104} in copy a_1

event auth_HolderCompletesProtocol(bitG(g(x_9)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_9)),sk_I_3),GtoSymK(exp(g(x_9),y_6)))),enc((sig((g(x_9),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_9))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_9),y_6)))) at {143} in copy a_1

new x_1: exponent creating x_10 at {107} in copy a_1, a_4

out(h, ~M_17) with ~M_17 = bitG(g(x_10)) at {111} in copy a_1, a_4

in(h, (~M_11,~M_12)) with ~M_11 = bitG(g(y_7)), ~M_12 = enc(sig((g(y_7),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_7))) at {157} in copy a

new n_i_1: bitstring creating n_i_5 at {163} in copy a

event auth_HolderSendsLastMessageToIssuer(bitG(g(x_8)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_7)))),enc((sig((g(x_8),g(y_7)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_5),GtoSymK(exp(g(y_7),x_8)))) at {166} in copy a

out(h, ~M_18) with ~M_18 = enc((sig((g(x_8),g(y_7)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_5),GtoSymK(exp(g(y_7),x_8))) at {167} in copy a

in(h, ~M_18) with ~M_18 = enc((sig((g(x_8),g(y_7)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_5),GtoSymK(exp(g(x_8),y_7))) at {32} in copy a_3

event auth_IssuerSendsLastMessageToHolder(bitG(g(x_8)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_7)))),enc((sig((g(x_8),g(y_7)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_5),GtoSymK(exp(g(x_8),y_7))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_5),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_5),sk_I_3)),GtoSymK(exp(g(x_8),y_7)))) at {40} in copy a_3

out(h, ~M_19) with ~M_19 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_5),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_5),sk_I_3)),GtoSymK(exp(g(x_8),y_7))) at {41} in copy a_3

out(h, ~M_20) with ~M_20 = Issuer_Completes at {42} in copy a_3

event auth_IssuerCompletesProtocol(bitG(g(x_8)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_7)))),enc((sig((g(x_8),g(y_7)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_5),GtoSymK(exp(g(x_8),y_7)))) at {44} in copy a_3

in(h, ~M_19) with ~M_19 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_5),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_5),sk_I_3)),GtoSymK(exp(g(x_8),y_7))) at {168} in copy a

out(h, ~M_21) with ~M_21 = Holder_Completes at {174} in copy a

new x_3: exponent creating x_11 at {177} in copy a, a_5

out(h, ~M_22) with ~M_22 = bitG(g(x_11)) at {181} in copy a, a_5

in(h, (bitG(g(a_6)),enc(sig((g(a_6),unbitG(~M_22)),sk_E),GtoSymK(exp(unbitG(~M_22),a_6))))) with enc(sig((g(a_6),unbitG(~M_22)),sk_E),GtoSymK(exp(unbitG(~M_22),a_6))) = enc(sig((g(a_6),g(x_11)),sk_E),GtoSymK(exp(g(x_11),a_6))) at {182} in copy a, a_5

out(h, ~M_23) with ~M_23 = enc(uri,GtoSymK(exp(g(a_6),x_11))) at {190} in copy a, a_5

in(h, enc((a_7,(~M_5,attr,~M_3)),GtoSymK(exp(unbitG(~M_22),a_6)))) with enc((a_7,(~M_5,attr,~M_3)),GtoSymK(exp(unbitG(~M_22),a_6))) = enc((a_7,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_11),a_6))) at {191} in copy a, a_5

event auth_ProverSendsLastMessageToVerifier(bitG(g(x_11)),(bitG(g(a_6)),enc(sig((g(a_6),g(x_11)),sk_E),GtoSymK(exp(g(x_11),a_6)))),enc(uri,GtoSymK(exp(g(a_6),x_11))),enc((a_7,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_11),a_6))),enc((((g(x_11),g(a_6)),a_7,genDID(pk(sk_E),sk_E),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_11),g(a_6)),a_7,genDID(pk(sk_E),sk_E),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(a_6),x_11)))) at {198} in copy a, a_5

event auth_ProverSendsLastMessageToVerifierInProtocolFull(bitG(g(x_8)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_7)))),enc((sig((g(x_8),g(y_7)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_5),GtoSymK(exp(g(y_7),x_8))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_5),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_5),sk_I_3)),GtoSymK(exp(g(x_8),y_7))),bitG(g(x_11)),(bitG(g(a_6)),enc(sig((g(a_6),g(x_11)),sk_E),GtoSymK(exp(g(x_11),a_6)))),enc(uri,GtoSymK(exp(g(a_6),x_11))),enc((a_7,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_11),a_6))),enc((((g(x_11),g(a_6)),a_7,genDID(pk(sk_E),sk_E),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_11),g(a_6)),a_7,genDID(pk(sk_E),sk_E),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(a_6),x_11)))) at {199} in copy a, a_5

out(h, ~M_24) with ~M_24 = enc((((g(x_11),g(a_6)),a_7,genDID(pk(sk_E),sk_E),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_11),g(a_6)),a_7,genDID(pk(sk_E),sk_E),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(a_6),x_11))) at {200} in copy a, a_5

in(h, ~M_17) with ~M_17 = bitG(g(x_10)) at {363} in copy a_8

new y_2: exponent creating y_8 at {365} in copy a_8

out(h, (~M_25,~M_26)) with ~M_25 = bitG(g(y_8)), ~M_26 = enc(sig((g(y_8),g(x_10)),sk_V_5),GtoSymK(exp(g(x_10),y_8))) at {370} in copy a_8

in(h, (~M_25,~M_26)) with ~M_25 = bitG(g(y_8)), ~M_26 = enc(sig((g(y_8),g(x_10)),sk_V_5),GtoSymK(exp(g(x_10),y_8))) at {112} in copy a_1, a_4

out(h, ~M_27) with ~M_27 = enc(uri,GtoSymK(exp(g(y_8),x_10))) at {120} in copy a_1, a_4

in(h, ~M_27) with ~M_27 = enc(uri,GtoSymK(exp(g(x_10),y_8))) at {371} in copy a_8

new n_c_4: bitstring creating n_c_8 at {374} in copy a_8

out(h, ~M_28) with ~M_28 = enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_10),y_8))) at {377} in copy a_8

in(h, ~M_28) with ~M_28 = enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_10),y_8))) at {121} in copy a_1, a_4

event auth_ProverSendsLastMessageToVerifier(bitG(g(x_10)),(bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_V_5),GtoSymK(exp(g(x_10),y_8)))),enc(uri,GtoSymK(exp(g(y_8),x_10))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_10),y_8))),enc((((g(x_10),g(y_8)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_10),g(y_8)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_8),x_10)))) at {128} in copy a_1, a_4

event auth_ProverSendsLastMessageToVerifierInProtocolFull(bitG(g(x_9)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_9)),sk_I_3),GtoSymK(exp(g(x_9),y_6)))),enc((sig((g(x_9),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_9))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_9),y_6))),bitG(g(x_10)),(bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_V_5),GtoSymK(exp(g(x_10),y_8)))),enc(uri,GtoSymK(exp(g(y_8),x_10))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_10),y_8))),enc((((g(x_10),g(y_8)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_10),g(y_8)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_8),x_10)))) at {129} in copy a_1, a_4

out(h, ~M_29) with ~M_29 = enc((((g(x_10),g(y_8)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_10),g(y_8)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_8),x_10))) at {130} in copy a_1, a_4

in(h, ~M_29) with ~M_29 = enc((((g(x_10),g(y_8)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_10),g(y_8)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(x_10),y_8))) at {378} in copy a_8

new tkn_access_4: bitstring creating tkn_access_8 at {383} in copy a_8

event auth_VerifierSendsLastMessageToProver(bitG(g(x_10)),(bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_V_5),GtoSymK(exp(g(x_10),y_8)))),enc(uri,GtoSymK(exp(g(x_10),y_8))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_10),y_8))),enc((((g(x_10),g(y_8)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_10),g(y_8)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(x_10),y_8))),enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_10),y_8)))) at {386} in copy a_8

out(h, ~M_30) with ~M_30 = enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_10),y_8))) at {387} in copy a_8

out(h, ~M_31) with ~M_31 = Verifier_Completes at {388} in copy a_8

out(ch((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))), ~M_32) with ~M_32 = cred_fromVerifier at {395} in copy a_8

event auth_VerifierCompletesProtocol(bitG(g(x_10)),(bitG(g(y_8)),enc(sig((g(y_8),g(x_10)),sk_V_5),GtoSymK(exp(g(x_10),y_8)))),enc(uri,GtoSymK(exp(g(x_10),y_8))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_10),y_8))),enc((((g(x_10),g(y_8)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_10),g(y_8)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(x_10),y_8)))) at {390} in copy a_8

The attacker has the message ~M_32 = cred_fromVerifier.
A trace has been found.
RESULT not attacker(cred_fromVerifier[]) is false.
-- Query not attacker(vp_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(vp_fromVerifier[])
RESULT not attacker(vp_fromVerifier[]) is true.
-- Query not attacker(access_token_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (44 with conclusion selected). Queue: 253 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 328 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 323 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 659 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 661 rules.
1600 rules inserted. Base: 1287 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 688 rules.
2000 rules inserted. Base: 1524 rules (142 with conclusion selected). Queue: 646 rules.
2200 rules inserted. Base: 1643 rules (152 with conclusion selected). Queue: 728 rules.
2400 rules inserted. Base: 1720 rules (152 with conclusion selected). Queue: 683 rules.
2600 rules inserted. Base: 1769 rules (160 with conclusion selected). Queue: 734 rules.
2800 rules inserted. Base: 1817 rules (162 with conclusion selected). Queue: 644 rules.
3000 rules inserted. Base: 1909 rules (164 with conclusion selected). Queue: 454 rules.
3200 rules inserted. Base: 2065 rules (167 with conclusion selected). Queue: 415 rules.
3400 rules inserted. Base: 2225 rules (168 with conclusion selected). Queue: 320 rules.
3600 rules inserted. Base: 2152 rules (174 with conclusion selected). Queue: 201 rules.
3800 rules inserted. Base: 2259 rules (177 with conclusion selected). Queue: 242 rules.
4000 rules inserted. Base: 2208 rules (183 with conclusion selected). Queue: 195 rules.
4200 rules inserted. Base: 2314 rules (212 with conclusion selected). Queue: 329 rules.
4400 rules inserted. Base: 2264 rules (223 with conclusion selected). Queue: 285 rules.
4600 rules inserted. Base: 2376 rules (225 with conclusion selected). Queue: 322 rules.
4800 rules inserted. Base: 2461 rules (232 with conclusion selected). Queue: 291 rules.
5000 rules inserted. Base: 2493 rules (232 with conclusion selected). Queue: 259 rules.
5200 rules inserted. Base: 2570 rules (236 with conclusion selected). Queue: 274 rules.
5400 rules inserted. Base: 2666 rules (240 with conclusion selected). Queue: 277 rules.
5600 rules inserted. Base: 2751 rules (244 with conclusion selected). Queue: 246 rules.
5800 rules inserted. Base: 2708 rules (248 with conclusion selected). Queue: 166 rules.
6000 rules inserted. Base: 2725 rules (256 with conclusion selected). Queue: 95 rules.
select attacker(bitG(g(y_6)))/-5000
6200 rules inserted. Base: 2478 rules (270 with conclusion selected). Queue: 109 rules.
6400 rules inserted. Base: 2616 rules (306 with conclusion selected). Queue: 245 rules.
6600 rules inserted. Base: 2691 rules (312 with conclusion selected). Queue: 271 rules.
6800 rules inserted. Base: 2736 rules (315 with conclusion selected). Queue: 281 rules.
7000 rules inserted. Base: 2716 rules (317 with conclusion selected). Queue: 261 rules.
7200 rules inserted. Base: 2748 rules (321 with conclusion selected). Queue: 213 rules.
7400 rules inserted. Base: 2780 rules (323 with conclusion selected). Queue: 147 rules.
7600 rules inserted. Base: 2840 rules (341 with conclusion selected). Queue: 111 rules.
7800 rules inserted. Base: 2799 rules (346 with conclusion selected). Queue: 93 rules.
8000 rules inserted. Base: 2818 rules (357 with conclusion selected). Queue: 83 rules.
8200 rules inserted. Base: 2743 rules (385 with conclusion selected). Queue: 59 rules.
8400 rules inserted. Base: 2826 rules (407 with conclusion selected). Queue: 34 rules.
8600 rules inserted. Base: 2951 rules (417 with conclusion selected). Queue: 9 rules.
Starting query not attacker(access_token_fromVerifier[])
RESULT not attacker(access_token_fromVerifier[]) is true.
-- Query inj-event(auth_ProverCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) ==> inj-event(auth_VerifierSendsLastMessageToProver(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (42 with conclusion selected). Queue: 233 rules.
400 rules inserted. Base: 385 rules (76 with conclusion selected). Queue: 340 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 339 rules.
800 rules inserted. Base: 752 rules (130 with conclusion selected). Queue: 382 rules.
1000 rules inserted. Base: 932 rules (138 with conclusion selected). Queue: 634 rules.
1200 rules inserted. Base: 1129 rules (138 with conclusion selected). Queue: 687 rules.
1400 rules inserted. Base: 1279 rules (138 with conclusion selected). Queue: 702 rules.
1600 rules inserted. Base: 1326 rules (142 with conclusion selected). Queue: 688 rules.
1800 rules inserted. Base: 1433 rules (142 with conclusion selected). Queue: 713 rules.
2000 rules inserted. Base: 1565 rules (142 with conclusion selected). Queue: 694 rules.
2200 rules inserted. Base: 1674 rules (149 with conclusion selected). Queue: 783 rules.
2400 rules inserted. Base: 1777 rules (152 with conclusion selected). Queue: 766 rules.
2600 rules inserted. Base: 1826 rules (156 with conclusion selected). Queue: 762 rules.
2800 rules inserted. Base: 1878 rules (162 with conclusion selected). Queue: 782 rules.
3000 rules inserted. Base: 1939 rules (164 with conclusion selected). Queue: 606 rules.
3200 rules inserted. Base: 2051 rules (165 with conclusion selected). Queue: 498 rules.
3400 rules inserted. Base: 2217 rules (167 with conclusion selected). Queue: 456 rules.
3600 rules inserted. Base: 2387 rules (170 with conclusion selected). Queue: 336 rules.
3800 rules inserted. Base: 2279 rules (174 with conclusion selected). Queue: 224 rules.
4000 rules inserted. Base: 2396 rules (174 with conclusion selected). Queue: 240 rules.
4200 rules inserted. Base: 2367 rules (177 with conclusion selected). Queue: 202 rules.
4400 rules inserted. Base: 2400 rules (205 with conclusion selected). Queue: 273 rules.
4600 rules inserted. Base: 2435 rules (223 with conclusion selected). Queue: 376 rules.
4800 rules inserted. Base: 2480 rules (224 with conclusion selected). Queue: 325 rules.
5000 rules inserted. Base: 2575 rules (232 with conclusion selected). Queue: 347 rules.
5200 rules inserted. Base: 2656 rules (232 with conclusion selected). Queue: 311 rules.
5400 rules inserted. Base: 2697 rules (236 with conclusion selected). Queue: 299 rules.
5600 rules inserted. Base: 2766 rules (240 with conclusion selected). Queue: 308 rules.
5800 rules inserted. Base: 2869 rules (240 with conclusion selected). Queue: 326 rules.
6000 rules inserted. Base: 2971 rules (244 with conclusion selected). Queue: 302 rules.
6200 rules inserted. Base: 2933 rules (248 with conclusion selected). Queue: 224 rules.
6400 rules inserted. Base: 2934 rules (253 with conclusion selected). Queue: 148 rules.
6600 rules inserted. Base: 3001 rules (262 with conclusion selected). Queue: 167 rules.
select attacker(bitG(g(y_6)))/-5000
6800 rules inserted. Base: 2759 rules (287 with conclusion selected). Queue: 185 rules.
7000 rules inserted. Base: 2891 rules (307 with conclusion selected). Queue: 280 rules.
7200 rules inserted. Base: 2976 rules (314 with conclusion selected). Queue: 289 rules.
7400 rules inserted. Base: 3065 rules (318 with conclusion selected). Queue: 362 rules.
7600 rules inserted. Base: 3133 rules (318 with conclusion selected). Queue: 324 rules.
7800 rules inserted. Base: 3149 rules (320 with conclusion selected). Queue: 343 rules.
8000 rules inserted. Base: 3198 rules (324 with conclusion selected). Queue: 332 rules.
8200 rules inserted. Base: 3217 rules (324 with conclusion selected). Queue: 277 rules.
8400 rules inserted. Base: 3253 rules (338 with conclusion selected). Queue: 223 rules.
8600 rules inserted. Base: 3299 rules (348 with conclusion selected). Queue: 180 rules.
8800 rules inserted. Base: 3378 rules (348 with conclusion selected). Queue: 139 rules.
9000 rules inserted. Base: 3452 rules (367 with conclusion selected). Queue: 125 rules.
9200 rules inserted. Base: 3478 rules (373 with conclusion selected). Queue: 129 rules.
9400 rules inserted. Base: 3517 rules (388 with conclusion selected). Queue: 85 rules.
9600 rules inserted. Base: 3554 rules (425 with conclusion selected). Queue: 83 rules.
9800 rules inserted. Base: 3649 rules (446 with conclusion selected). Queue: 11 rules.
Starting query inj-event(auth_ProverCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) ==> inj-event(auth_VerifierSendsLastMessageToProver(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken))
goal reachable: begin(auth_VerifierSendsLastMessageToProver(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_V[]),GtoSymK(exp(g(y_6),x_8)))),enc(uri,GtoSymK(exp(g(y_6),x_8))),enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_6),x_8))),enc((((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_6),x_8))),enc((tkn_access_8,sig(tkn_access_8,sk_V[])),GtoSymK(exp(g(y_6),x_8)))),@occ386_1) -> end(@occ136_1,auth_ProverCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_V[]),GtoSymK(exp(g(y_6),x_8)))),enc(uri,GtoSymK(exp(g(y_6),x_8))),enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_6),x_8))),enc((((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_6),x_8))),enc((tkn_access_8,sig(tkn_access_8,sk_V[])),GtoSymK(exp(g(y_6),x_8)))))
The hypothesis occurs strictly before the conclusion.
Abbreviations:
x_9 = x[!1 = @sid]
y_7 = y[m_0 = bitG(g(x_9)),!1 = @sid_1]
n_i_4 = n_i[m_6 = (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_I[]),GtoSymK(exp(g(y_7),x_9)))),!1 = @sid]
x_8 = x_1[!2 = @sid_2,m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_7),x_9))),m_6 = (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_I[]),GtoSymK(exp(g(y_7),x_9)))),!1 = @sid]
y_6 = y_2[m_50 = bitG(g(x_8)),!1 = @sid_3]
n_c_8 = n_c_4[m_52 = enc(uri,GtoSymK(exp(g(y_6),x_8))),m_50 = bitG(g(x_8)),!1 = @sid_3]
tkn_access_8 = tkn_access_4[m_54 = enc((((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_6),x_8))),m_52 = enc(uri,GtoSymK(exp(g(y_6),x_8))),m_50 = bitG(g(x_8)),!1 = @sid_3]
@occ136_1 = @occ136[m_16 = enc((tkn_access_8,sig(tkn_access_8,sk_V[])),GtoSymK(exp(g(y_6),x_8))),m_14 = enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_6),x_8))),m_11 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_V[]),GtoSymK(exp(g(y_6),x_8)))),!2 = @sid_2,m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_7),x_9))),m_6 = (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_I[]),GtoSymK(exp(g(y_7),x_9)))),!1 = @sid]
@occ386_1 = @occ386[m_54 = enc((((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_6),x_8))),m_52 = enc(uri,GtoSymK(exp(g(y_6),x_8))),m_50 = bitG(g(x_8)),!1 = @sid_3]
RESULT inj-event(auth_ProverCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) ==> inj-event(auth_VerifierSendsLastMessageToProver(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) is true.
-- Query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (43 with conclusion selected). Queue: 233 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 330 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 328 rules.
800 rules inserted. Base: 751 rules (131 with conclusion selected). Queue: 400 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 651 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 661 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 669 rules.
1600 rules inserted. Base: 1295 rules (142 with conclusion selected). Queue: 687 rules.
1800 rules inserted. Base: 1411 rules (142 with conclusion selected). Queue: 696 rules.
2000 rules inserted. Base: 1527 rules (142 with conclusion selected). Queue: 651 rules.
2200 rules inserted. Base: 1649 rules (152 with conclusion selected). Queue: 730 rules.
2400 rules inserted. Base: 1726 rules (152 with conclusion selected). Queue: 711 rules.
2600 rules inserted. Base: 1770 rules (158 with conclusion selected). Queue: 755 rules.
2800 rules inserted. Base: 1821 rules (162 with conclusion selected). Queue: 746 rules.
3000 rules inserted. Base: 1893 rules (164 with conclusion selected). Queue: 700 rules.
3200 rules inserted. Base: 2039 rules (166 with conclusion selected). Queue: 657 rules.
3400 rules inserted. Base: 2200 rules (168 with conclusion selected). Queue: 603 rules.
3600 rules inserted. Base: 2389 rules (168 with conclusion selected). Queue: 434 rules.
3800 rules inserted. Base: 2505 rules (172 with conclusion selected). Queue: 331 rules.
4000 rules inserted. Base: 2515 rules (174 with conclusion selected). Queue: 291 rules.
4200 rules inserted. Base: 2689 rules (174 with conclusion selected). Queue: 336 rules.
4400 rules inserted. Base: 2723 rules (177 with conclusion selected). Queue: 307 rules.
4600 rules inserted. Base: 2742 rules (201 with conclusion selected). Queue: 339 rules.
4800 rules inserted. Base: 2562 rules (205 with conclusion selected). Queue: 351 rules.
5000 rules inserted. Base: 2648 rules (223 with conclusion selected). Queue: 466 rules.
5200 rules inserted. Base: 2701 rules (223 with conclusion selected). Queue: 357 rules.
5400 rules inserted. Base: 2775 rules (225 with conclusion selected). Queue: 443 rules.
5600 rules inserted. Base: 2862 rules (232 with conclusion selected). Queue: 418 rules.
5800 rules inserted. Base: 2932 rules (232 with conclusion selected). Queue: 417 rules.
6000 rules inserted. Base: 2893 rules (232 with conclusion selected). Queue: 389 rules.
6200 rules inserted. Base: 2962 rules (236 with conclusion selected). Queue: 423 rules.
6400 rules inserted. Base: 3045 rules (240 with conclusion selected). Queue: 443 rules.
6600 rules inserted. Base: 3170 rules (240 with conclusion selected). Queue: 404 rules.
6800 rules inserted. Base: 3302 rules (240 with conclusion selected). Queue: 320 rules.
7000 rules inserted. Base: 3305 rules (244 with conclusion selected). Queue: 225 rules.
7200 rules inserted. Base: 3216 rules (252 with conclusion selected). Queue: 178 rules.
7400 rules inserted. Base: 3296 rules (258 with conclusion selected). Queue: 236 rules.
select attacker(bitG(g(y_6)))/-5000
7600 rules inserted. Base: 3366 rules (269 with conclusion selected). Queue: 296 rules.
7800 rules inserted. Base: 3468 rules (270 with conclusion selected). Queue: 265 rules.
8000 rules inserted. Base: 3580 rules (289 with conclusion selected). Queue: 287 rules.
8200 rules inserted. Base: 3714 rules (313 with conclusion selected). Queue: 454 rules.
8400 rules inserted. Base: 3832 rules (314 with conclusion selected). Queue: 418 rules.
8600 rules inserted. Base: 3934 rules (315 with conclusion selected). Queue: 501 rules.
8800 rules inserted. Base: 4026 rules (320 with conclusion selected). Queue: 478 rules.
9000 rules inserted. Base: 4078 rules (320 with conclusion selected). Queue: 458 rules.
9200 rules inserted. Base: 4110 rules (325 with conclusion selected). Queue: 502 rules.
9400 rules inserted. Base: 4153 rules (325 with conclusion selected). Queue: 508 rules.
9600 rules inserted. Base: 4181 rules (329 with conclusion selected). Queue: 479 rules.
9800 rules inserted. Base: 4255 rules (329 with conclusion selected). Queue: 478 rules.
10000 rules inserted. Base: 4357 rules (329 with conclusion selected). Queue: 383 rules.
10200 rules inserted. Base: 4396 rules (345 with conclusion selected). Queue: 368 rules.
10400 rules inserted. Base: 4448 rules (345 with conclusion selected). Queue: 239 rules.
10600 rules inserted. Base: 4533 rules (359 with conclusion selected). Queue: 240 rules.
10800 rules inserted. Base: 4558 rules (359 with conclusion selected). Queue: 195 rules.
11000 rules inserted. Base: 4618 rules (368 with conclusion selected). Queue: 177 rules.
11200 rules inserted. Base: 4653 rules (378 with conclusion selected). Queue: 189 rules.
11400 rules inserted. Base: 4685 rules (391 with conclusion selected). Queue: 198 rules.
11600 rules inserted. Base: 4704 rules (398 with conclusion selected). Queue: 175 rules.
11800 rules inserted. Base: 4763 rules (419 with conclusion selected). Queue: 139 rules.
12000 rules inserted. Base: 4836 rules (444 with conclusion selected). Queue: 116 rules.
12200 rules inserted. Base: 4913 rules (467 with conclusion selected). Queue: 75 rules.
12400 rules inserted. Base: 5019 rules (491 with conclusion selected). Queue: 16 rules.
Starting query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp))
goal reachable: begin(auth_ProverSendsLastMessageToVerifier(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_V[]),GtoSymK(exp(g(y_6),x_8)))),enc(uri,GtoSymK(exp(g(y_6),x_8))),enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_6),x_8))),enc((((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_6),x_8)))),@occ128_1) -> end(@occ390_1,auth_VerifierCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_V[]),GtoSymK(exp(g(y_6),x_8)))),enc(uri,GtoSymK(exp(g(y_6),x_8))),enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_6),x_8))),enc((((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_6),x_8)))))
The hypothesis occurs strictly before the conclusion.
Abbreviations:
x_9 = x[!1 = @sid]
y_7 = y[m_0 = bitG(g(x_9)),!1 = @sid_1]
n_i_4 = n_i[m_6 = (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_I[]),GtoSymK(exp(g(y_7),x_9)))),!1 = @sid]
x_8 = x_1[!2 = @sid_2,m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_7),x_9))),m_6 = (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_I[]),GtoSymK(exp(g(y_7),x_9)))),!1 = @sid]
y_6 = y_2[m_50 = bitG(g(x_8)),!1 = @sid_3]
n_c_8 = n_c_4[m_52 = enc(uri,GtoSymK(exp(g(y_6),x_8))),m_50 = bitG(g(x_8)),!1 = @sid_3]
@occ390_1 = @occ390[m_54 = enc((((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_6),x_8))),m_52 = enc(uri,GtoSymK(exp(g(y_6),x_8))),m_50 = bitG(g(x_8)),!1 = @sid_3]
@occ128_1 = @occ128[m_14 = enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_6),x_8))),m_11 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_V[]),GtoSymK(exp(g(y_6),x_8)))),!2 = @sid_2,m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_7),x_9))),m_6 = (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_I[]),GtoSymK(exp(g(y_7),x_9)))),!1 = @sid]
RESULT inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) is true.
-- Query inj-event(auth_HolderCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did,m_cred)) ==> inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq,m_handshakeResp,m_did,m_cred)) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (43 with conclusion selected). Queue: 233 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 330 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 328 rules.
800 rules inserted. Base: 751 rules (131 with conclusion selected). Queue: 398 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 657 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 669 rules.
1400 rules inserted. Base: 1242 rules (138 with conclusion selected). Queue: 677 rules.
1600 rules inserted. Base: 1311 rules (142 with conclusion selected). Queue: 735 rules.
1800 rules inserted. Base: 1436 rules (142 with conclusion selected). Queue: 750 rules.
2000 rules inserted. Base: 1542 rules (142 with conclusion selected). Queue: 701 rules.
2200 rules inserted. Base: 1658 rules (150 with conclusion selected). Queue: 767 rules.
2400 rules inserted. Base: 1756 rules (154 with conclusion selected). Queue: 756 rules.
2600 rules inserted. Base: 1804 rules (160 with conclusion selected). Queue: 761 rules.
2800 rules inserted. Base: 1870 rules (167 with conclusion selected). Queue: 757 rules.
3000 rules inserted. Base: 1942 rules (172 with conclusion selected). Queue: 560 rules.
3200 rules inserted. Base: 2070 rules (173 with conclusion selected). Queue: 472 rules.
3400 rules inserted. Base: 2228 rules (176 with conclusion selected). Queue: 407 rules.
3600 rules inserted. Base: 2370 rules (180 with conclusion selected). Queue: 330 rules.
3800 rules inserted. Base: 2293 rules (184 with conclusion selected). Queue: 202 rules.
4000 rules inserted. Base: 2395 rules (192 with conclusion selected). Queue: 257 rules.
4200 rules inserted. Base: 2373 rules (214 with conclusion selected). Queue: 253 rules.
4400 rules inserted. Base: 2471 rules (229 with conclusion selected). Queue: 343 rules.
4600 rules inserted. Base: 2447 rules (240 with conclusion selected). Queue: 337 rules.
4800 rules inserted. Base: 2551 rules (243 with conclusion selected). Queue: 373 rules.
5000 rules inserted. Base: 2621 rules (250 with conclusion selected). Queue: 347 rules.
5200 rules inserted. Base: 2699 rules (250 with conclusion selected). Queue: 323 rules.
5400 rules inserted. Base: 2773 rules (256 with conclusion selected). Queue: 312 rules.
5600 rules inserted. Base: 2827 rules (260 with conclusion selected). Queue: 306 rules.
5800 rules inserted. Base: 2929 rules (260 with conclusion selected). Queue: 295 rules.
6000 rules inserted. Base: 2988 rules (264 with conclusion selected). Queue: 257 rules.
6200 rules inserted. Base: 2946 rules (268 with conclusion selected). Queue: 169 rules.
6400 rules inserted. Base: 2951 rules (276 with conclusion selected). Queue: 112 rules.
select attacker(bitG(g(y_6)))/-5000
6600 rules inserted. Base: 2962 rules (285 with conclusion selected). Queue: 137 rules.
6800 rules inserted. Base: 3090 rules (316 with conclusion selected). Queue: 240 rules.
7000 rules inserted. Base: 3215 rules (329 with conclusion selected). Queue: 301 rules.
7200 rules inserted. Base: 3289 rules (335 with conclusion selected). Queue: 365 rules.
7400 rules inserted. Base: 3355 rules (335 with conclusion selected). Queue: 327 rules.
7600 rules inserted. Base: 3312 rules (338 with conclusion selected). Queue: 322 rules.
7800 rules inserted. Base: 3356 rules (342 with conclusion selected). Queue: 304 rules.
8000 rules inserted. Base: 3419 rules (342 with conclusion selected). Queue: 277 rules.
8200 rules inserted. Base: 3461 rules (358 with conclusion selected). Queue: 208 rules.
8400 rules inserted. Base: 3508 rules (372 with conclusion selected). Queue: 162 rules.
8600 rules inserted. Base: 3502 rules (372 with conclusion selected). Queue: 130 rules.
8800 rules inserted. Base: 3462 rules (383 with conclusion selected). Queue: 119 rules.
9000 rules inserted. Base: 3465 rules (392 with conclusion selected). Queue: 97 rules.
9200 rules inserted. Base: 3477 rules (418 with conclusion selected). Queue: 62 rules.
9400 rules inserted. Base: 3569 rules (447 with conclusion selected). Queue: 64 rules.
9600 rules inserted. Base: 3666 rules (459 with conclusion selected). Queue: 23 rules.
Starting query inj-event(auth_HolderCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did,m_cred)) ==> inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq,m_handshakeResp,m_did,m_cred))
goal reachable: begin(auth_IssuerSendsLastMessageToHolder(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8)))),@occ40_1) -> end(@occ143_1,auth_HolderCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8)))))
The hypothesis occurs strictly before the conclusion.
Abbreviations:
x_8 = x[!1 = @sid]
y_6 = y[m_0 = bitG(g(x_8)),!1 = @sid_1]
n_i_4 = n_i[m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]
@occ143_1 = @occ143[m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))),m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]
@occ40_1 = @occ40[m_2 = enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))),m_0 = bitG(g(x_8)),!1 = @sid_1]
RESULT inj-event(auth_HolderCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did,m_cred)) ==> inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq,m_handshakeResp,m_did,m_cred)) is true.
-- Query inj-event(auth_IssuerCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did)) ==> inj-event(auth_HolderSendsLastMessageToIssuer(m_handshakeReq,m_handshakeResp,m_did)) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (43 with conclusion selected). Queue: 233 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 330 rules.
600 rules inserted. Base: 553 rules (123 with conclusion selected). Queue: 329 rules.
800 rules inserted. Base: 750 rules (131 with conclusion selected). Queue: 400 rules.
1000 rules inserted. Base: 929 rules (138 with conclusion selected). Queue: 669 rules.
1200 rules inserted. Base: 1126 rules (138 with conclusion selected). Queue: 683 rules.
1400 rules inserted. Base: 1243 rules (138 with conclusion selected). Queue: 691 rules.
1600 rules inserted. Base: 1307 rules (142 with conclusion selected). Queue: 740 rules.
1800 rules inserted. Base: 1425 rules (142 with conclusion selected). Queue: 764 rules.
2000 rules inserted. Base: 1553 rules (142 with conclusion selected). Queue: 732 rules.
2200 rules inserted. Base: 1639 rules (150 with conclusion selected). Queue: 708 rules.
2400 rules inserted. Base: 1740 rules (156 with conclusion selected). Queue: 751 rules.
2600 rules inserted. Base: 1797 rules (160 with conclusion selected). Queue: 737 rules.
2800 rules inserted. Base: 1845 rules (170 with conclusion selected). Queue: 742 rules.
3000 rules inserted. Base: 1908 rules (176 with conclusion selected). Queue: 571 rules.
3200 rules inserted. Base: 2017 rules (177 with conclusion selected). Queue: 458 rules.
3400 rules inserted. Base: 2177 rules (180 with conclusion selected). Queue: 413 rules.
3600 rules inserted. Base: 2314 rules (180 with conclusion selected). Queue: 332 rules.
3800 rules inserted. Base: 2216 rules (183 with conclusion selected). Queue: 209 rules.
4000 rules inserted. Base: 2342 rules (190 with conclusion selected). Queue: 285 rules.
4200 rules inserted. Base: 2310 rules (198 with conclusion selected). Queue: 245 rules.
4400 rules inserted. Base: 2381 rules (226 with conclusion selected). Queue: 344 rules.
4600 rules inserted. Base: 2414 rules (239 with conclusion selected). Queue: 363 rules.
4800 rules inserted. Base: 2464 rules (241 with conclusion selected). Queue: 336 rules.
5000 rules inserted. Base: 2563 rules (249 with conclusion selected). Queue: 355 rules.
5200 rules inserted. Base: 2634 rules (249 with conclusion selected). Queue: 331 rules.
5400 rules inserted. Base: 2684 rules (253 with conclusion selected). Queue: 317 rules.
5600 rules inserted. Base: 2739 rules (257 with conclusion selected). Queue: 306 rules.
5800 rules inserted. Base: 2839 rules (257 with conclusion selected). Queue: 327 rules.
6000 rules inserted. Base: 2931 rules (261 with conclusion selected). Queue: 289 rules.
6200 rules inserted. Base: 2881 rules (265 with conclusion selected). Queue: 189 rules.
6400 rules inserted. Base: 2899 rules (273 with conclusion selected). Queue: 117 rules.
select attacker(bitG(g(y_6)))/-5000
6600 rules inserted. Base: 2929 rules (282 with conclusion selected). Queue: 142 rules.
6800 rules inserted. Base: 3018 rules (309 with conclusion selected). Queue: 173 rules.
7000 rules inserted. Base: 3160 rules (332 with conclusion selected). Queue: 265 rules.
7200 rules inserted. Base: 3270 rules (335 with conclusion selected). Queue: 333 rules.
7400 rules inserted. Base: 3324 rules (337 with conclusion selected). Queue: 306 rules.
7600 rules inserted. Base: 3265 rules (340 with conclusion selected). Queue: 304 rules.
7800 rules inserted. Base: 3307 rules (344 with conclusion selected). Queue: 249 rules.
8000 rules inserted. Base: 3387 rules (344 with conclusion selected). Queue: 208 rules.
8200 rules inserted. Base: 3461 rules (358 with conclusion selected). Queue: 149 rules.
8400 rules inserted. Base: 3522 rules (370 with conclusion selected). Queue: 141 rules.
8600 rules inserted. Base: 3387 rules (375 with conclusion selected). Queue: 121 rules.
8800 rules inserted. Base: 3421 rules (384 with conclusion selected). Queue: 116 rules.
9000 rules inserted. Base: 3409 rules (400 with conclusion selected). Queue: 83 rules.
9200 rules inserted. Base: 3481 rules (435 with conclusion selected). Queue: 84 rules.
9400 rules inserted. Base: 3581 rules (452 with conclusion selected). Queue: 10 rules.
9600 rules inserted. Base: 3663 rules (460 with conclusion selected). Queue: 2 rules.
Starting query inj-event(auth_IssuerCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did)) ==> inj-event(auth_HolderSendsLastMessageToIssuer(m_handshakeReq,m_handshakeResp,m_did))
goal reachable: begin(auth_HolderSendsLastMessageToIssuer(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8)))),@occ166_1) -> end(@occ44_1,auth_IssuerCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8)))))
The hypothesis occurs strictly before the conclusion.
Abbreviations:
x_8 = x_2[!1 = @sid]
y_6 = y[m_0 = bitG(g(x_8)),!1 = @sid_1]
n_i_4 = n_i_1[m_17 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]
@occ44_1 = @occ44[m_2 = enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))),m_0 = bitG(g(x_8)),!1 = @sid_1]
@occ166_1 = @occ166[m_17 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]
goal reachable: begin(auth_HolderSendsLastMessageToIssuer(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8)))),@occ96_1) -> end(@occ44_1,auth_IssuerCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8)))))
The hypothesis occurs strictly before the conclusion.
Abbreviations:
x_8 = x[!1 = @sid]
y_6 = y[m_0 = bitG(g(x_8)),!1 = @sid_1]
n_i_4 = n_i[m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]
@occ44_1 = @occ44[m_2 = enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))),m_0 = bitG(g(x_8)),!1 = @sid_1]
@occ96_1 = @occ96[m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]
RESULT inj-event(auth_IssuerCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did)) ==> inj-event(auth_HolderSendsLastMessageToIssuer(m_handshakeReq,m_handshakeResp,m_did)) is true.
-- Query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) && inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && inj-event(auth_HolderCompletesProtocol(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (43 with conclusion selected). Queue: 233 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 330 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 328 rules.
800 rules inserted. Base: 751 rules (131 with conclusion selected). Queue: 400 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 659 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 669 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 677 rules.
1600 rules inserted. Base: 1312 rules (142 with conclusion selected). Queue: 735 rules.
1800 rules inserted. Base: 1436 rules (142 with conclusion selected). Queue: 752 rules.
2000 rules inserted. Base: 1554 rules (142 with conclusion selected). Queue: 702 rules.
2200 rules inserted. Base: 1658 rules (149 with conclusion selected). Queue: 765 rules.
2400 rules inserted. Base: 1757 rules (154 with conclusion selected). Queue: 756 rules.
2600 rules inserted. Base: 1800 rules (158 with conclusion selected). Queue: 769 rules.
2800 rules inserted. Base: 1868 rules (167 with conclusion selected). Queue: 790 rules.
3000 rules inserted. Base: 1928 rules (172 with conclusion selected). Queue: 761 rules.
3200 rules inserted. Base: 2037 rules (173 with conclusion selected). Queue: 703 rules.
3400 rules inserted. Base: 2203 rules (175 with conclusion selected). Queue: 665 rules.
3600 rules inserted. Base: 2369 rules (176 with conclusion selected). Queue: 559 rules.
3800 rules inserted. Base: 2565 rules (178 with conclusion selected). Queue: 388 rules.
4000 rules inserted. Base: 2576 rules (180 with conclusion selected). Queue: 329 rules.
4200 rules inserted. Base: 2660 rules (184 with conclusion selected). Queue: 301 rules.
4400 rules inserted. Base: 2824 rules (191 with conclusion selected). Queue: 386 rules.
4600 rules inserted. Base: 2858 rules (191 with conclusion selected). Queue: 304 rules.
4800 rules inserted. Base: 2838 rules (216 with conclusion selected). Queue: 348 rules.
5000 rules inserted. Base: 2729 rules (227 with conclusion selected). Queue: 409 rules.
5200 rules inserted. Base: 2811 rules (238 with conclusion selected). Queue: 479 rules.
5400 rules inserted. Base: 2872 rules (240 with conclusion selected). Queue: 458 rules.
5600 rules inserted. Base: 2952 rules (241 with conclusion selected). Queue: 502 rules.
5800 rules inserted. Base: 3042 rules (248 with conclusion selected). Queue: 461 rules.
6000 rules inserted. Base: 3100 rules (248 with conclusion selected). Queue: 453 rules.
6200 rules inserted. Base: 3055 rules (250 with conclusion selected). Queue: 410 rules.
6400 rules inserted. Base: 3150 rules (254 with conclusion selected). Queue: 438 rules.
6600 rules inserted. Base: 3201 rules (258 with conclusion selected). Queue: 426 rules.
6800 rules inserted. Base: 3320 rules (258 with conclusion selected). Queue: 431 rules.
7000 rules inserted. Base: 3426 rules (258 with conclusion selected). Queue: 358 rules.
7200 rules inserted. Base: 3464 rules (262 with conclusion selected). Queue: 296 rules.
7400 rules inserted. Base: 3487 rules (266 with conclusion selected). Queue: 213 rules.
7600 rules inserted. Base: 3453 rules (274 with conclusion selected). Queue: 169 rules.
7800 rules inserted. Base: 3525 rules (280 with conclusion selected). Queue: 274 rules.
select attacker(bitG(g(y_6)))/-5000
8000 rules inserted. Base: 3569 rules (283 with conclusion selected). Queue: 282 rules.
8200 rules inserted. Base: 3681 rules (304 with conclusion selected). Queue: 332 rules.
8400 rules inserted. Base: 3765 rules (305 with conclusion selected). Queue: 281 rules.
8600 rules inserted. Base: 3924 rules (328 with conclusion selected). Queue: 438 rules.
8800 rules inserted. Base: 4018 rules (329 with conclusion selected). Queue: 429 rules.
9000 rules inserted. Base: 4144 rules (332 with conclusion selected). Queue: 562 rules.
9200 rules inserted. Base: 4215 rules (337 with conclusion selected). Queue: 538 rules.
9400 rules inserted. Base: 4276 rules (337 with conclusion selected). Queue: 500 rules.
9600 rules inserted. Base: 4318 rules (342 with conclusion selected). Queue: 560 rules.
9800 rules inserted. Base: 4384 rules (342 with conclusion selected). Queue: 563 rules.
10000 rules inserted. Base: 4435 rules (346 with conclusion selected). Queue: 616 rules.
10200 rules inserted. Base: 4484 rules (346 with conclusion selected). Queue: 572 rules.
10400 rules inserted. Base: 4577 rules (346 with conclusion selected). Queue: 525 rules.
10600 rules inserted. Base: 4590 rules (348 with conclusion selected). Queue: 438 rules.
10800 rules inserted. Base: 4667 rules (366 with conclusion selected). Queue: 405 rules.
11000 rules inserted. Base: 4663 rules (368 with conclusion selected). Queue: 306 rules.
11200 rules inserted. Base: 4718 rules (384 with conclusion selected). Queue: 303 rules.
11400 rules inserted. Base: 4816 rules (384 with conclusion selected). Queue: 250 rules.
11600 rules inserted. Base: 4844 rules (384 with conclusion selected). Queue: 198 rules.
11800 rules inserted. Base: 4883 rules (393 with conclusion selected). Queue: 173 rules.
12000 rules inserted. Base: 4927 rules (408 with conclusion selected). Queue: 187 rules.
12200 rules inserted. Base: 4941 rules (416 with conclusion selected). Queue: 181 rules.
12400 rules inserted. Base: 4967 rules (427 with conclusion selected). Queue: 176 rules.
12600 rules inserted. Base: 5045 rules (448 with conclusion selected). Queue: 111 rules.
12800 rules inserted. Base: 5124 rules (480 with conclusion selected). Queue: 137 rules.
13000 rules inserted. Base: 5203 rules (498 with conclusion selected). Queue: 57 rules.
13200 rules inserted. Base: 5307 rules (520 with conclusion selected). Queue: 24 rules.
Starting query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) && inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && inj-event(auth_HolderCompletesProtocol(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred))
goal reachable: begin(auth_ProverSendsLastMessageToVerifier(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_V[]),GtoSymK(exp(g(y_6),x_8)))),enc(uri,GtoSymK(exp(g(y_6),x_8))),enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_6),x_8))),enc((((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_6),x_8)))),@occ128_2) && begin(auth_IssuerSendsLastMessageToHolder(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_I[]),GtoSymK(exp(g(y_7),x_9)))),enc((sig((g(x_9),g(y_7)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_7),x_9))),enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_7),x_9)))),@occ40_2) -> end(@occ390_2,auth_VerifierCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_V[]),GtoSymK(exp(g(y_6),x_8)))),enc(uri,GtoSymK(exp(g(y_6),x_8))),enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_6),x_8))),enc((((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_6),x_8)))))
Abbreviations:
x_9 = x[!1 = @sid]
y_7 = y[m_0 = bitG(g(x_9)),!1 = @sid_1]
n_i_4 = n_i[m_6 = (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_I[]),GtoSymK(exp(g(y_7),x_9)))),!1 = @sid]
x_8 = x_1[!2 = @sid_2,m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_7),x_9))),m_6 = (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_I[]),GtoSymK(exp(g(y_7),x_9)))),!1 = @sid]
y_6 = y_2[m_50 = bitG(g(x_8)),!1 = @sid_3]
n_c_8 = n_c_4[m_52 = enc(uri,GtoSymK(exp(g(y_6),x_8))),m_50 = bitG(g(x_8)),!1 = @sid_3]
@occ390_2 = @occ390_1[m_54 = enc((((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_8),g(y_6)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_6),x_8))),m_52 = enc(uri,GtoSymK(exp(g(y_6),x_8))),m_50 = bitG(g(x_8)),!1 = @sid_3]
@occ128_2 = @occ128_1[m_14 = enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_6),x_8))),m_11 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_V[]),GtoSymK(exp(g(y_6),x_8)))),!2 = @sid_2,m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_7),x_9))),m_6 = (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_I[]),GtoSymK(exp(g(y_7),x_9)))),!1 = @sid]
@occ40_2 = @occ40_1[m_2 = enc((sig((g(x_9),g(y_7)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_7),x_9))),m_0 = bitG(g(x_9)),!1 = @sid_1]

Derivation:
Abbreviations:
x_8 = x[!1 = @sid]
y_6 = y[m_0 = bitG(g(x_8)),!1 = @sid_1]
n_i_4 = n_i[m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]
x_9 = x_1[!2 = @sid_2,m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))),m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]
y_7 = y_2[m_50 = bitG(g(x_9)),!1 = @sid_3]
n_c_8 = n_c_4[m_52 = enc(uri,GtoSymK(exp(g(y_7),x_9))),m_50 = bitG(g(x_9)),!1 = @sid_3]
@occ390_2 = @occ390_1[m_54 = enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_7),x_9))),m_52 = enc(uri,GtoSymK(exp(g(y_7),x_9))),m_50 = bitG(g(x_9)),!1 = @sid_3]
@occ128_2 = @occ128_1[m_14 = enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_7),x_9))),m_11 = (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))),!2 = @sid_2,m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))),m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]
@occ40_2 = @occ40_1[m_2 = enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))),m_0 = bitG(g(x_8)),!1 = @sid_1]

1. The message bitG(g(x_8)) may be sent to the attacker at output {86}.
attacker(bitG(g(x_8))).

2. The message bitG(g(x_8)) that the attacker may have by 1 may be received at input {24}.
So the message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) may be sent to the attacker at output {31}.
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8))))).

3. By 2, the attacker may know (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))).
Using the function 2-proj-2-tuple the attacker may obtain enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8))).
attacker(enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))).

4. The message bitG(g(x_8)) that the attacker may have by 1 may be received at input {24}.
So the message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))) may be sent to the attacker at output {31}.
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6))))).

5. By 4, the attacker may know (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(x_8),y_6)))).
Using the function 1-proj-2-tuple the attacker may obtain bitG(g(y_6)).
attacker(bitG(g(y_6))).

6. By 5, the attacker may know bitG(g(y_6)).
By 3, the attacker may know enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8))).
Using the function 2-tuple the attacker may obtain (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))).
attacker((bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8))))).

7. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) that the attacker may have by 6 may be received at input {87}.
So the message enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))) may be sent to the attacker at output {97}.
attacker(enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8)))).

8. The message bitG(g(x_8)) that the attacker may have by 1 may be received at input {24}.
The message enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))) that the attacker may have by 7 may be received at input {32}.
The event auth_IssuerSendsLastMessageToHolder(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8)))) (with occurrence name @occ40_2) may be executed at {40}.
So the message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))) may be sent to the attacker at output {41}.
attacker(enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8)))).

9. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) that the attacker may have by 6 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))) that the attacker may have by 8 may be received at input {98}.
So the message bitG(g(x_9)) may be sent to the attacker at output {111}.
attacker(bitG(g(x_9))).

10. The message bitG(g(x_9)) that the attacker may have by 9 may be received at input {363}.
So the message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))) may be sent to the attacker at output {370}.
attacker((bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9))))).

11. By 10, the attacker may know (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))).
Using the function 2-proj-2-tuple the attacker may obtain enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9))).
attacker(enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))).

12. The message bitG(g(x_9)) that the attacker may have by 9 may be received at input {363}.
So the message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))) may be sent to the attacker at output {370}.
attacker((bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7))))).

13. By 12, the attacker may know (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(x_9),y_7)))).
Using the function 1-proj-2-tuple the attacker may obtain bitG(g(y_7)).
attacker(bitG(g(y_7))).

14. By 13, the attacker may know bitG(g(y_7)).
By 11, the attacker may know enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9))).
Using the function 2-tuple the attacker may obtain (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))).
attacker((bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9))))).

15. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) that the attacker may have by 6 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))) that the attacker may have by 8 may be received at input {98}.
The message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))) that the attacker may have by 14 may be received at input {112}.
So the message enc(uri,GtoSymK(exp(g(y_7),x_9))) may be sent to the attacker at output {120}.
attacker(enc(uri,GtoSymK(exp(g(y_7),x_9)))).

16. The message bitG(g(x_9)) that the attacker may have by 9 may be received at input {363}.
The message enc(uri,GtoSymK(exp(g(y_7),x_9))) that the attacker may have by 15 may be received at input {371}.
So the message enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_7),x_9))) may be sent to the attacker at output {377}.
attacker(enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_7),x_9)))).

17. The message (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))) that the attacker may have by 6 may be received at input {87}.
The message enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))) that the attacker may have by 8 may be received at input {98}.
The message (bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))) that the attacker may have by 14 may be received at input {112}.
The message enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_7),x_9))) that the attacker may have by 16 may be received at input {121}.
The event auth_ProverSendsLastMessageToVerifier(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_7),x_9))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_7),x_9)))) (with occurrence name @occ128_2) may be executed at {128}.
So the message enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_7),x_9))) may be sent to the attacker at output {130}.
attacker(enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_7),x_9)))).

18. The message bitG(g(x_9)) that the attacker may have by 9 may be received at input {363}.
The message enc(uri,GtoSymK(exp(g(y_7),x_9))) that the attacker may have by 15 may be received at input {371}.
The message enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_7),x_9))) that the attacker may have by 17 may be received at input {378}.
So event auth_VerifierCompletesProtocol(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_7),x_9))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_7),x_9)))) may be executed at {390} in session @sid_3.
end(@occ390_2,auth_VerifierCompletesProtocol(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_7),x_9))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_7),x_9))))).

19. By 18, end(@occ390_2,auth_VerifierCompletesProtocol(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_7),x_9))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_7),x_9))))).
The goal is reached, represented in the following fact:
end(@occ390_2,auth_VerifierCompletesProtocol(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_7),x_9))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_7),x_9))))).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_I: SecretKey creating sk_I_3 at {1}

new sk_V: SecretKey creating sk_V_5 at {2}

new sk_P: SecretKey creating sk_P_5 at {3}

out(h, ~M) with ~M = pk(sk_I_3) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_V_5) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_P_5) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_I_3),sk_I_3) at {11}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_V_5),sk_V_5) at {12}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_P_5),sk_P_5) at {13}

out(h, ~M_6) with ~M_6 = genDID(pk(sk_E),sk_E) at {14}

new x: exponent creating x_8 at {82} in copy a

out(h, ~M_7) with ~M_7 = bitG(g(x_8)) at {86} in copy a

in(h, ~M_7) with ~M_7 = bitG(g(x_8)) at {24} in copy a_1

new y: exponent creating y_6 at {26} in copy a_1

out(h, (~M_8,~M_9)) with ~M_8 = bitG(g(y_6)), ~M_9 = enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6))) at {31} in copy a_1

in(h, (~M_8,~M_9)) with ~M_8 = bitG(g(y_6)), ~M_9 = enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(y_6),x_8))) at {87} in copy a

new n_i: bitstring creating n_i_4 at {93} in copy a

event auth_HolderSendsLastMessageToIssuer(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8)))) at {96} in copy a

out(h, ~M_10) with ~M_10 = enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))) at {97} in copy a

in(h, ~M_10) with ~M_10 = enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))) at {32} in copy a_1

event auth_IssuerSendsLastMessageToHolder(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6)))) at {40} in copy a_1

out(h, ~M_11) with ~M_11 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(x_8),y_6))) at {41} in copy a_1

out(h, ~M_12) with ~M_12 = Issuer_Completes at {42} in copy a_1

event auth_IssuerCompletesProtocol(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(x_8),y_6)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8)))) at {44} in copy a_1

in(h, ~M_11) with ~M_11 = enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(y_6),x_8))) at {98} in copy a

out(h, ~M_13) with ~M_13 = Holder_Completes at {104} in copy a

new x_1: exponent creating x_9 at {107} in copy a, a_2

out(h, ~M_14) with ~M_14 = bitG(g(x_9)) at {111} in copy a, a_2

in(h, ~M_14) with ~M_14 = bitG(g(x_9)) at {363} in copy a_3

new y_2: exponent creating y_7 at {365} in copy a_3

out(h, (~M_15,~M_16)) with ~M_15 = bitG(g(y_7)), ~M_16 = enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7))) at {370} in copy a_3

in(h, (~M_15,~M_16)) with ~M_15 = bitG(g(y_7)), ~M_16 = enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(y_7),x_9))) at {112} in copy a, a_2

out(h, ~M_17) with ~M_17 = enc(uri,GtoSymK(exp(g(y_7),x_9))) at {120} in copy a, a_2

in(h, ~M_17) with ~M_17 = enc(uri,GtoSymK(exp(g(y_7),x_9))) at {371} in copy a_3

new n_c_4: bitstring creating n_c_8 at {374} in copy a_3

out(h, ~M_18) with ~M_18 = enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))) at {377} in copy a_3

in(h, ~M_18) with ~M_18 = enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(y_7),x_9))) at {121} in copy a, a_2

event auth_ProverSendsLastMessageToVerifier(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(y_7),x_9)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(y_7),x_9))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9)))) at {128} in copy a, a_2

event auth_ProverSendsLastMessageToVerifierInProtocolFull(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I_3),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P_5),genDID(pk(sk_P_5),sk_P_5),genDID(pk(sk_I_3),sk_I_3),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sig((((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3)),genDID(pk(sk_P_5),sk_P_5),n_i_4),sk_I_3)),GtoSymK(exp(g(y_6),x_8))),bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(y_7),x_9)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(y_7),x_9))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9)))) at {129} in copy a, a_2

out(h, ~M_19) with ~M_19 = enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9))) at {130} in copy a, a_2

in(h, ~M_19) with ~M_19 = enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9))) at {378} in copy a_3

new tkn_access_4: bitstring creating tkn_access_8 at {383} in copy a_3

event auth_VerifierSendsLastMessageToProver(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9))),enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_9),y_7)))) at {386} in copy a_3

out(h, ~M_20) with ~M_20 = enc((tkn_access_8,sig(tkn_access_8,sk_V_5)),GtoSymK(exp(g(x_9),y_7))) at {387} in copy a_3

out(h, ~M_21) with ~M_21 = Verifier_Completes at {388} in copy a_3

event auth_VerifierCompletesProtocol(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(x_9),y_7)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(x_9),y_7))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9)))) at {390} in copy a_3 (goal)

The event auth_VerifierCompletesProtocol(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V_5),GtoSymK(exp(g(y_7),x_9)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3))),GtoSymK(exp(g(y_7),x_9))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V_5),sk_V_5),((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sig((genDID(pk(sk_P_5),sk_P_5),attr,genDID(pk(sk_I_3),sk_I_3)),sk_I_3))),sk_P_5)),GtoSymK(exp(g(y_7),x_9)))) is executed at {390} in copy a_3.
A trace has been found.
RESULT inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) && inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && inj-event(auth_HolderCompletesProtocol(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) is false.
RESULT (even event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) && event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && event(auth_HolderCompletesProtocol(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) is false.)
-- Query event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && event(auth_ProverSendsLastMessageToVerifierInProtocolFull(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred,m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) in process 1.
Translating the process into Horn clauses...
select attacker(bitG(gx_14))/-5000
Completing...
Termination warning: attacker(bitG(elem)) -> attacker(elem)
Selecting 0
200 rules inserted. Base: 200 rules (43 with conclusion selected). Queue: 233 rules.
400 rules inserted. Base: 384 rules (76 with conclusion selected). Queue: 330 rules.
600 rules inserted. Base: 554 rules (123 with conclusion selected). Queue: 328 rules.
800 rules inserted. Base: 751 rules (131 with conclusion selected). Queue: 400 rules.
1000 rules inserted. Base: 931 rules (138 with conclusion selected). Queue: 659 rules.
1200 rules inserted. Base: 1128 rules (138 with conclusion selected). Queue: 669 rules.
1400 rules inserted. Base: 1244 rules (138 with conclusion selected). Queue: 677 rules.
1600 rules inserted. Base: 1312 rules (142 with conclusion selected). Queue: 735 rules.
1800 rules inserted. Base: 1436 rules (142 with conclusion selected). Queue: 752 rules.
2000 rules inserted. Base: 1554 rules (142 with conclusion selected). Queue: 702 rules.
2200 rules inserted. Base: 1658 rules (149 with conclusion selected). Queue: 765 rules.
2400 rules inserted. Base: 1757 rules (154 with conclusion selected). Queue: 756 rules.
2600 rules inserted. Base: 1800 rules (158 with conclusion selected). Queue: 769 rules.
2800 rules inserted. Base: 1868 rules (167 with conclusion selected). Queue: 790 rules.
3000 rules inserted. Base: 1928 rules (172 with conclusion selected). Queue: 761 rules.
3200 rules inserted. Base: 2037 rules (173 with conclusion selected). Queue: 703 rules.
3400 rules inserted. Base: 2203 rules (175 with conclusion selected). Queue: 665 rules.
3600 rules inserted. Base: 2369 rules (176 with conclusion selected). Queue: 559 rules.
3800 rules inserted. Base: 2565 rules (178 with conclusion selected). Queue: 388 rules.
4000 rules inserted. Base: 2576 rules (180 with conclusion selected). Queue: 329 rules.
4200 rules inserted. Base: 2660 rules (184 with conclusion selected). Queue: 301 rules.
4400 rules inserted. Base: 2824 rules (191 with conclusion selected). Queue: 386 rules.
4600 rules inserted. Base: 2858 rules (191 with conclusion selected). Queue: 304 rules.
4800 rules inserted. Base: 2838 rules (216 with conclusion selected). Queue: 348 rules.
5000 rules inserted. Base: 2729 rules (227 with conclusion selected). Queue: 409 rules.
5200 rules inserted. Base: 2811 rules (238 with conclusion selected). Queue: 479 rules.
5400 rules inserted. Base: 2872 rules (240 with conclusion selected). Queue: 458 rules.
5600 rules inserted. Base: 2952 rules (241 with conclusion selected). Queue: 502 rules.
5800 rules inserted. Base: 3042 rules (248 with conclusion selected). Queue: 461 rules.
6000 rules inserted. Base: 3100 rules (248 with conclusion selected). Queue: 453 rules.
6200 rules inserted. Base: 3055 rules (250 with conclusion selected). Queue: 410 rules.
6400 rules inserted. Base: 3150 rules (254 with conclusion selected). Queue: 438 rules.
6600 rules inserted. Base: 3201 rules (258 with conclusion selected). Queue: 426 rules.
6800 rules inserted. Base: 3320 rules (258 with conclusion selected). Queue: 431 rules.
7000 rules inserted. Base: 3426 rules (258 with conclusion selected). Queue: 358 rules.
7200 rules inserted. Base: 3464 rules (262 with conclusion selected). Queue: 296 rules.
7400 rules inserted. Base: 3487 rules (266 with conclusion selected). Queue: 213 rules.
7600 rules inserted. Base: 3453 rules (274 with conclusion selected). Queue: 129 rules.
select attacker(bitG(g(y_6)))/-5000
7800 rules inserted. Base: 3475 rules (279 with conclusion selected). Queue: 173 rules.
8000 rules inserted. Base: 3569 rules (304 with conclusion selected). Queue: 232 rules.
8200 rules inserted. Base: 3729 rules (324 with conclusion selected). Queue: 350 rules.
8400 rules inserted. Base: 3826 rules (329 with conclusion selected). Queue: 409 rules.
8600 rules inserted. Base: 3941 rules (332 with conclusion selected). Queue: 547 rules.
8800 rules inserted. Base: 4003 rules (337 with conclusion selected). Queue: 538 rules.
9000 rules inserted. Base: 4064 rules (337 with conclusion selected). Queue: 500 rules.
9200 rules inserted. Base: 4094 rules (342 with conclusion selected). Queue: 560 rules.
9400 rules inserted. Base: 4160 rules (342 with conclusion selected). Queue: 563 rules.
9600 rules inserted. Base: 4211 rules (346 with conclusion selected). Queue: 616 rules.
9800 rules inserted. Base: 4260 rules (346 with conclusion selected). Queue: 572 rules.
10000 rules inserted. Base: 4353 rules (346 with conclusion selected). Queue: 525 rules.
10200 rules inserted. Base: 4356 rules (348 with conclusion selected). Queue: 438 rules.
10400 rules inserted. Base: 4408 rules (366 with conclusion selected). Queue: 405 rules.
10600 rules inserted. Base: 4392 rules (368 with conclusion selected). Queue: 306 rules.
10800 rules inserted. Base: 4412 rules (384 with conclusion selected). Queue: 303 rules.
11000 rules inserted. Base: 4494 rules (384 with conclusion selected). Queue: 250 rules.
11200 rules inserted. Base: 4513 rules (384 with conclusion selected). Queue: 198 rules.
11400 rules inserted. Base: 4532 rules (393 with conclusion selected). Queue: 171 rules.
11600 rules inserted. Base: 4562 rules (408 with conclusion selected). Queue: 182 rules.
11800 rules inserted. Base: 4560 rules (416 with conclusion selected). Queue: 164 rules.
12000 rules inserted. Base: 4599 rules (427 with conclusion selected). Queue: 126 rules.
12200 rules inserted. Base: 4651 rules (461 with conclusion selected). Queue: 87 rules.
12400 rules inserted. Base: 4742 rules (492 with conclusion selected). Queue: 100 rules.
12600 rules inserted. Base: 4838 rules (510 with conclusion selected). Queue: 15 rules.
12800 rules inserted. Base: 4915 rules (522 with conclusion selected). Queue: 8 rules.
Starting query event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && event(auth_ProverSendsLastMessageToVerifierInProtocolFull(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred,m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp))
goal reachable: begin(auth_ProverSendsLastMessageToVerifierInProtocolFull(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))),bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_7),x_9))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_7),x_9))))) && begin(auth_IssuerSendsLastMessageToHolder(bitG(g(x_8)),(bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),enc((sig((g(x_8),g(y_6)),sk_P[]),genDID(pk(sk_P[]),sk_P[]),genDID(pk(sk_I[]),sk_I[]),n_i_4),GtoSymK(exp(g(y_6),x_8))),enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))))) -> end(auth_VerifierCompletesProtocol(bitG(g(x_9)),(bitG(g(y_7)),enc(sig((g(y_7),g(x_9)),sk_V[]),GtoSymK(exp(g(y_7),x_9)))),enc(uri,GtoSymK(exp(g(y_7),x_9))),enc((n_c_8,(genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[]))),GtoSymK(exp(g(y_7),x_9))),enc((((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sig(((g(x_9),g(y_7)),n_c_8,genDID(pk(sk_V[]),sk_V[]),((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[]))),sk_P[])),GtoSymK(exp(g(y_7),x_9)))))
Abbreviations:
x_8 = x[!1 = @sid]
y_6 = y[m_0 = bitG(g(x_8)),!1 = @sid_1]
n_i_4 = n_i[m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]
x_9 = x_1[!2 = @sid_2,m_9 = enc(((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sig((((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sig((genDID(pk(sk_P[]),sk_P[]),attr,genDID(pk(sk_I[]),sk_I[])),sk_I[])),genDID(pk(sk_P[]),sk_P[]),n_i_4),sk_I[])),GtoSymK(exp(g(y_6),x_8))),m_6 = (bitG(g(y_6)),enc(sig((g(y_6),g(x_8)),sk_I[]),GtoSymK(exp(g(y_6),x_8)))),!1 = @sid]
y_7 = y_2[m_50 = bitG(g(x_9)),!1 = @sid_3]
n_c_8 = n_c_4[m_52 = enc(uri,GtoSymK(exp(g(y_7),x_9))),m_50 = bitG(g(x_9)),!1 = @sid_3]
RESULT event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && event(auth_ProverSendsLastMessageToVerifierInProtocolFull(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred,m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) is true.

--------------------------------------------------------------
Verification summary:

Query not attacker(m'_0_fromHolder[]) is false.

Query not attacker(m'_1_fromIssuer[]) is true.

Query not attacker(m'_2_fromHolder[]) is true.

Query not attacker(m'_3_fromIssuer[]) is true.

Query not attacker(m'_4_fromProver[]) is false.

Query not attacker(m'_5_fromVerifier[]) is true.

Query not attacker(m'_6_fromProver[]) is false.

Query not attacker(m'_7_fromVerifier[]) is true.

Query not attacker(m'_8_fromProver[]) is true.

Query not attacker(m'_9_fromVerifier[]) is true.

Query not attacker(rule_fromVerifier[]) is false.

Query not attacker(cred_fromVerifier[]) is false.

Query not attacker(vp_fromVerifier[]) is true.

Query not attacker(access_token_fromVerifier[]) is true.

Query inj-event(auth_ProverCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) ==> inj-event(auth_VerifierSendsLastMessageToProver(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) is true.

Query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) is true.

Query inj-event(auth_HolderCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did,m_cred)) ==> inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq,m_handshakeResp,m_did,m_cred)) is true.

Query inj-event(auth_IssuerCompletesProtocol(m_handshakeReq,m_handshakeResp,m_did)) ==> inj-event(auth_HolderSendsLastMessageToIssuer(m_handshakeReq,m_handshakeResp,m_did)) is true.

Query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) && inj-event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && inj-event(auth_HolderCompletesProtocol(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) is false.

Query event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> event(auth_IssuerSendsLastMessageToHolder(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred)) && event(auth_ProverSendsLastMessageToVerifierInProtocolFull(m_handshakeReq_2,m_handshakeResp_2,m_did,m_cred,m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) is true.

--------------------------------------------------------------

