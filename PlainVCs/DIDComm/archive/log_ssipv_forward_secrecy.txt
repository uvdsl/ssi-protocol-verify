File "ssipv_plus_issuing.pv", line 134, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 140, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 150, character 10:
Warning: identifier x rebound.
File "ssipv_plus_issuing.pv", line 153, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 171, character 10:
Warning: identifier x rebound.
File "ssipv_plus_issuing.pv", line 218, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 224, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 234, character 10:
Warning: identifier x rebound.
File "ssipv_plus_issuing.pv", line 237, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 255, character 10:
Warning: identifier x rebound.
File "ssipv_plus_issuing.pv", line 289, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 299, character 10:
Warning: identifier x rebound.
File "ssipv_plus_issuing.pv", line 302, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 312, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 322, character 10:
Warning: identifier x rebound.
File "ssipv_plus_issuing.pv", line 352, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 397, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 407, character 10:
Warning: identifier x rebound.
File "ssipv_plus_issuing.pv", line 410, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 420, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 430, character 10:
Warning: identifier x rebound.
File "ssipv_plus_issuing.pv", line 460, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 505, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 511, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 522, character 10:
Warning: identifier x rebound.
File "ssipv_plus_issuing.pv", line 571, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 577, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 588, character 10:
Warning: identifier x rebound.
File "ssipv_plus_issuing.pv", line 631, character 10:
Warning: identifier x rebound.
File "ssipv_plus_issuing.pv", line 634, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 651, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 693, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 703, character 10:
Warning: identifier x rebound.
File "ssipv_plus_issuing.pv", line 706, characters 9-11:
Warning: identifier msg rebound.
File "ssipv_plus_issuing.pv", line 723, characters 9-11:
Warning: identifier msg rebound.
Process 0 (that is, the initial process):
{1}new sk_prover: SecretKey;
{2}new sk_verifier: SecretKey;
{3}new sk_issuer: SecretKey;
{4}out(h, pk(sk_issuer));
{5}out(h, pk(sk_verifier));
{6}out(h, pk(sk_prover));
{7}out(h, genDID(pk(sk_prover),sk_prover));
{8}out(h, genDID(pk(sk_verifier),sk_verifier));
{9}out(h, genDID(pk(sk_issuer),sk_issuer));
{10}let acr: ACR = makeRule(genDID(pk(sk_prover),sk_prover),attr,genDID(pk(sk_issuer),sk_issuer)) in
{11}let acr_otherAgent: ACR = makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_issuer),sk_issuer)) in
(
    {12}!
    {13}let sk: SecretKey = sk_issuer in
    {14}let attr_1: bitstring = attr in
    {15}let expectedDID: DID = genDID(pk(sk_prover),sk_prover) in
    {16}let talksOnlyToHonest: bool = true in
    {17}in(h, x: bitstring);
    {18}let msg_handshakeReq: bitstring = x in
    {19}let sgndMsg: bitstring = adec(x,sk) in
    {20}let (unauth_n_p: bitstring,unauth_spk_p: PublicKey) = getMsg(sgndMsg) in
    {21}let (n_p: bitstring,spk_p: PublicKey) = auth(sgndMsg,unauth_spk_p) in
    {22}new ssk: SecretKey;
    {23}new n_i: bitstring;
    {24}let msg: bitstring = (n_p,n_i,pk(ssk)) in
    {25}let msg_handshakeResp: bitstring = aenc(sign(msg,sk),spk_p) in
    {26}out(h, msg_handshakeResp);
    {27}in(h, x_1: bitstring);
    {28}let msg_did: bitstring = x_1 in
    {29}let sk_1: SecretKey = ssk in
    {30}let msg_1: bitstring = auth(adec(x_1,sk_1),spk_p) in
    {31}let (unauth_n'_i: bitstring,unauth_proverDID: DID,unauth_recipientDID: DID) = getMsg(msg_1) in
    {32}let pk_p: PublicKey = getPubKey(unauth_proverDID) in
    {33}let (n'_i: bitstring,proverDID: DID,recipientDID: DID) = auth(msg_1,pk_p) in
    {34}if (proverDID = expectedDID) then
    {35}if (n'_i = n_i) then
    {36}if (recipientDID = genDID(pk(sk),sk)) then
    {37}let cred: VC = issueVC(proverDID,attr_1,sk) in
    {38}new n_issuing: bitstring;
    {39}let msg_2: bitstring = (cred,proverDID,n_issuing) in
    {40}let sk_2: SecretKey = ssk in
    {41}let msg_cred: bitstring = aenc(sign(msg_2,sk_2),spk_p) in
    {42}out(h, msg_cred);
    {43}phase 1;
    {44}if talksOnlyToHonest then
    (
        {45}out(ch(n_p), n_p_fromIssuer)
    ) | (
        {46}out(chC(cred), cred_fromIssuer)
    ) | (
        {47}out(ch((cred,proverDID,n_issuing)), credIssuing_fromIssuer)
    )
) | (
    {48}!
    {49}let sk_3: SecretKey = sk_issuer in
    {50}let attr_2: bitstring = attr in
    {51}let expectedDID_1: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
    {52}let talksOnlyToHonest_1: bool = false in
    {53}in(h, x_2: bitstring);
    {54}let msg_handshakeReq_1: bitstring = x_2 in
    {55}let sgndMsg_1: bitstring = adec(x_2,sk_3) in
    {56}let (unauth_n_p_1: bitstring,unauth_spk_p_1: PublicKey) = getMsg(sgndMsg_1) in
    {57}let (n_p_1: bitstring,spk_p_1: PublicKey) = auth(sgndMsg_1,unauth_spk_p_1) in
    {58}new ssk_1: SecretKey;
    {59}new n_i_1: bitstring;
    {60}let msg_3: bitstring = (n_p_1,n_i_1,pk(ssk_1)) in
    {61}let msg_handshakeResp_1: bitstring = aenc(sign(msg_3,sk_3),spk_p_1) in
    {62}out(h, msg_handshakeResp_1);
    {63}in(h, x_3: bitstring);
    {64}let msg_did_1: bitstring = x_3 in
    {65}let sk_4: SecretKey = ssk_1 in
    {66}let msg_4: bitstring = auth(adec(x_3,sk_4),spk_p_1) in
    {67}let (unauth_n'_i_1: bitstring,unauth_proverDID_1: DID,unauth_recipientDID_1: DID) = getMsg(msg_4) in
    {68}let pk_p_1: PublicKey = getPubKey(unauth_proverDID_1) in
    {69}let (n'_i_1: bitstring,proverDID_1: DID,recipientDID_1: DID) = auth(msg_4,pk_p_1) in
    {70}if (proverDID_1 = expectedDID_1) then
    {71}if (n'_i_1 = n_i_1) then
    {72}if (recipientDID_1 = genDID(pk(sk_3),sk_3)) then
    {73}let cred_1: VC = issueVC(proverDID_1,attr_2,sk_3) in
    {74}new n_issuing_1: bitstring;
    {75}let msg_5: bitstring = (cred_1,proverDID_1,n_issuing_1) in
    {76}let sk_5: SecretKey = ssk_1 in
    {77}let msg_cred_1: bitstring = aenc(sign(msg_5,sk_5),spk_p_1) in
    {78}out(h, msg_cred_1);
    {79}phase 1;
    {80}if talksOnlyToHonest_1 then
    (
        {81}out(ch(n_p_1), n_p_fromIssuer)
    ) | (
        {82}out(chC(cred_1), cred_fromIssuer)
    ) | (
        {83}out(ch((cred_1,proverDID_1,n_issuing_1)), credIssuing_fromIssuer)
    )
) | (
    {84}!
    {85}let sk_6: SecretKey = sk_prover in
    {86}let issuerDID: DID = genDID(pk(sk_issuer),sk_issuer) in
    {87}let verifierDID: DID = genDID(pk(sk_verifier),sk_verifier) in
    {88}let talksOnlyToHonest_2: bool = true in
    {89}let pk_i: PublicKey = getPubKey(issuerDID) in
    {90}new ssk_2: SecretKey;
    {91}new n_p_2: bitstring;
    {92}let msg_6: bitstring = (n_p_2,pk(ssk_2)) in
    {93}let sk_7: SecretKey = ssk_2 in
    {94}let msg_handshakeReq_2: bitstring = aenc(sign(msg_6,sk_7),pk_i) in
    {95}out(h, msg_handshakeReq_2);
    {96}in(h, x_4: bitstring);
    {97}let msg_handshakeResp_2: bitstring = x_4 in
    {98}let sk_8: SecretKey = ssk_2 in
    {99}let msg_7: bitstring = auth(adec(x_4,sk_8),pk_i) in
    {100}let (n'_p: bitstring,n_i_2: bitstring,spk_i: PublicKey) = msg_7 in
    {101}if (n'_p = n_p_2) then
    {102}let msg_8: bitstring = sign((n_i_2,genDID(pk(sk_6),sk_6),issuerDID),sk_6) in
    {103}let sk_9: SecretKey = ssk_2 in
    {104}let msg_did_2: bitstring = aenc(sign(msg_8,sk_9),spk_i) in
    {105}out(h, msg_did_2);
    {106}in(h, x_5: bitstring);
    {107}let msg_credential: bitstring = x_5 in
    {108}let sk_10: SecretKey = ssk_2 in
    {109}let (credential: VC,recipientDID_2: DID,n_issuing_2: bitstring) = auth(adec(x_5,sk_10),spk_i) in
    {110}if (recipientDID_2 = genDID(pk(sk_6),sk_6)) then
    (
        {111}!
        {112}let pk_v: PublicKey = getPubKey(verifierDID) in
        {113}new ssk_3: SecretKey;
        {114}new n_p_3: bitstring;
        {115}let msg_9: bitstring = (n_p_3,pk(ssk_3)) in
        {116}let sk_11: SecretKey = ssk_3 in
        {117}let msg_handshakeReq_3: bitstring = aenc(sign(msg_9,sk_11),pk_v) in
        {118}out(h, msg_handshakeReq_3);
        {119}in(h, x_6: bitstring);
        {120}let msg_handshakeResp_3: bitstring = x_6 in
        {121}let sk_12: SecretKey = ssk_3 in
        {122}let msg_10: bitstring = auth(adec(x_6,sk_12),pk_v) in
        {123}let (n'_p_1: bitstring,n_v: bitstring,spk_v: PublicKey) = msg_10 in
        {124}if (n'_p_1 = n_p_3) then
        {125}let msg_11: bitstring = (n_v,uri) in
        {126}let sk_13: SecretKey = ssk_3 in
        {127}let msg_uri: bitstring = aenc(sign(msg_11,sk_13),spk_v) in
        {128}out(h, msg_uri);
        {129}in(h, x_7: bitstring);
        {130}let msg_rule: bitstring = x_7 in
        {131}let sk_14: SecretKey = ssk_3 in
        {132}let msg_12: bitstring = auth(adec(x_7,sk_14),spk_v) in
        {133}let (n_c: bitstring,rule: ACR) = msg_12 in
        {134}if (getVcAsTuple(credential) = getRuleAsTuple(rule)) then
        {135}let vp: bitstring = sign((n_c,verifierDID,credential),sk_6) in
        {136}let sk_15: SecretKey = ssk_3 in
        {137}let msg_vp: bitstring = aenc(sign(vp,sk_15),spk_v) in
        {138}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_3,msg_handshakeResp_3,msg_uri,msg_rule,msg_vp);
        {139}out(h, msg_vp);
        {140}in(h, x_8: bitstring);
        {141}let msg_accessToken: bitstring = x_8 in
        {142}let sk_16: SecretKey = ssk_3 in
        {143}let (access_token: bitstring,recipientDID_3: DID) = auth(adec(x_8,sk_16),spk_v) in
        {144}if (recipientDID_3 = genDID(pk(sk_6),sk_6)) then
        {145}phase 1;
        {146}if talksOnlyToHonest_2 then
        (
            {147}event auth_ProverCompletesProtocol(msg_handshakeReq_3,msg_handshakeResp_3,msg_uri,msg_rule,msg_vp,msg_accessToken)
        ) | (
            {148}out(ch(n_p_3), n_p_fromProver)
        ) | (
            {149}out(chR(rule), rule_fromProver)
        ) | (
            {150}out(ch((n_c,verifierDID,credential)), unsigned_vp_fromProver)
        ) | (
            {151}out(ch(vp), vp_fromProver)
        ) | (
            {152}out(chC(credential), cred_fromProver)
        ) | (
            {153}out(ch(access_token), access_token_fromProver)
        )
    ) | (
        {154}phase 1;
        {155}if talksOnlyToHonest_2 then
        (
            {156}out(ch(n_p_2), n_p_fromHolder)
        ) | (
            {157}out(ch(n_i_2), n_i_fromHolder)
        ) | (
            {158}out(ch((n_i_2,genDID(pk(sk_6),sk_6),issuerDID)), providingDID_fromHolder)
        ) | (
            {159}out(chC(credential), cred_fromHolder)
        )
    )
) | (
    {160}!
    {161}let sk_17: SecretKey = sk_prover in
    {162}let issuerDID_1: DID = genDID(pk(sk_issuer),sk_issuer) in
    {163}let verifierDID_1: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
    {164}let talksOnlyToHonest_3: bool = false in
    {165}let pk_i_1: PublicKey = getPubKey(issuerDID_1) in
    {166}new ssk_4: SecretKey;
    {167}new n_p_4: bitstring;
    {168}let msg_13: bitstring = (n_p_4,pk(ssk_4)) in
    {169}let sk_18: SecretKey = ssk_4 in
    {170}let msg_handshakeReq_4: bitstring = aenc(sign(msg_13,sk_18),pk_i_1) in
    {171}out(h, msg_handshakeReq_4);
    {172}in(h, x_9: bitstring);
    {173}let msg_handshakeResp_4: bitstring = x_9 in
    {174}let sk_19: SecretKey = ssk_4 in
    {175}let msg_14: bitstring = auth(adec(x_9,sk_19),pk_i_1) in
    {176}let (n'_p_2: bitstring,n_i_3: bitstring,spk_i_1: PublicKey) = msg_14 in
    {177}if (n'_p_2 = n_p_4) then
    {178}let msg_15: bitstring = sign((n_i_3,genDID(pk(sk_17),sk_17),issuerDID_1),sk_17) in
    {179}let sk_20: SecretKey = ssk_4 in
    {180}let msg_did_3: bitstring = aenc(sign(msg_15,sk_20),spk_i_1) in
    {181}out(h, msg_did_3);
    {182}in(h, x_10: bitstring);
    {183}let msg_credential_1: bitstring = x_10 in
    {184}let sk_21: SecretKey = ssk_4 in
    {185}let (credential_1: VC,recipientDID_4: DID,n_issuing_3: bitstring) = auth(adec(x_10,sk_21),spk_i_1) in
    {186}if (recipientDID_4 = genDID(pk(sk_17),sk_17)) then
    (
        {187}!
        {188}let pk_v_1: PublicKey = getPubKey(verifierDID_1) in
        {189}new ssk_5: SecretKey;
        {190}new n_p_5: bitstring;
        {191}let msg_16: bitstring = (n_p_5,pk(ssk_5)) in
        {192}let sk_22: SecretKey = ssk_5 in
        {193}let msg_handshakeReq_5: bitstring = aenc(sign(msg_16,sk_22),pk_v_1) in
        {194}out(h, msg_handshakeReq_5);
        {195}in(h, x_11: bitstring);
        {196}let msg_handshakeResp_5: bitstring = x_11 in
        {197}let sk_23: SecretKey = ssk_5 in
        {198}let msg_17: bitstring = auth(adec(x_11,sk_23),pk_v_1) in
        {199}let (n'_p_3: bitstring,n_v_1: bitstring,spk_v_1: PublicKey) = msg_17 in
        {200}if (n'_p_3 = n_p_5) then
        {201}let msg_18: bitstring = (n_v_1,uri) in
        {202}let sk_24: SecretKey = ssk_5 in
        {203}let msg_uri_1: bitstring = aenc(sign(msg_18,sk_24),spk_v_1) in
        {204}out(h, msg_uri_1);
        {205}in(h, x_12: bitstring);
        {206}let msg_rule_1: bitstring = x_12 in
        {207}let sk_25: SecretKey = ssk_5 in
        {208}let msg_19: bitstring = auth(adec(x_12,sk_25),spk_v_1) in
        {209}let (n_c_1: bitstring,rule_1: ACR) = msg_19 in
        {210}if (getVcAsTuple(credential_1) = getRuleAsTuple(rule_1)) then
        {211}let vp_1: bitstring = sign((n_c_1,verifierDID_1,credential_1),sk_17) in
        {212}let sk_26: SecretKey = ssk_5 in
        {213}let msg_vp_1: bitstring = aenc(sign(vp_1,sk_26),spk_v_1) in
        {214}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_5,msg_handshakeResp_5,msg_uri_1,msg_rule_1,msg_vp_1);
        {215}out(h, msg_vp_1);
        {216}in(h, x_13: bitstring);
        {217}let msg_accessToken_1: bitstring = x_13 in
        {218}let sk_27: SecretKey = ssk_5 in
        {219}let (access_token_1: bitstring,recipientDID_5: DID) = auth(adec(x_13,sk_27),spk_v_1) in
        {220}if (recipientDID_5 = genDID(pk(sk_17),sk_17)) then
        {221}phase 1;
        {222}if talksOnlyToHonest_3 then
        (
            {223}event auth_ProverCompletesProtocol(msg_handshakeReq_5,msg_handshakeResp_5,msg_uri_1,msg_rule_1,msg_vp_1,msg_accessToken_1)
        ) | (
            {224}out(ch(n_p_5), n_p_fromProver)
        ) | (
            {225}out(chR(rule_1), rule_fromProver)
        ) | (
            {226}out(ch((n_c_1,verifierDID_1,credential_1)), unsigned_vp_fromProver)
        ) | (
            {227}out(ch(vp_1), vp_fromProver)
        ) | (
            {228}out(chC(credential_1), cred_fromProver)
        ) | (
            {229}out(ch(access_token_1), access_token_fromProver)
        )
    ) | (
        {230}phase 1;
        {231}if talksOnlyToHonest_3 then
        (
            {232}out(ch(n_p_4), n_p_fromHolder)
        ) | (
            {233}out(ch(n_i_3), n_i_fromHolder)
        ) | (
            {234}out(ch((n_i_3,genDID(pk(sk_17),sk_17),issuerDID_1)), providingDID_fromHolder)
        ) | (
            {235}out(chC(credential_1), cred_fromHolder)
        )
    )
) | (
    {236}!
    {237}let sk_28: SecretKey = sk_verifier in
    {238}let talksOnlyToHonest_4: bool = true in
    {239}in(h, x_14: bitstring);
    {240}let msg_handshakeReq_6: bitstring = x_14 in
    {241}let sgndMsg_2: bitstring = adec(x_14,sk_28) in
    {242}let msg_20: bitstring = sgndMsg_2 in
    {243}let (unauth_n_p_2: bitstring,unauth_spk_p_2: PublicKey) = getMsg(sgndMsg_2) in
    {244}let (n_p_6: bitstring,spk_p_2: PublicKey) = auth(sgndMsg_2,unauth_spk_p_2) in
    {245}new ssk_6: SecretKey;
    {246}new n_v_2: bitstring;
    {247}let msg_21: bitstring = (n_p_6,n_v_2,pk(ssk_6)) in
    {248}let msg_handshakeResp_6: bitstring = aenc(sign(msg_21,sk_28),spk_p_2) in
    {249}out(h, msg_handshakeResp_6);
    {250}in(h, x_15: bitstring);
    {251}let msg_uri_2: bitstring = x_15 in
    {252}let sk_29: SecretKey = ssk_6 in
    {253}let msg_22: bitstring = auth(adec(x_15,sk_29),spk_p_2) in
    {254}let (n'_v: bitstring,u: bitstring) = msg_22 in
    {255}if (n'_v = n_v_2) then
    {256}if (u = uri) then
    {257}new n_c_2: bitstring;
    {258}let msg_23: bitstring = (n_c_2,acr) in
    {259}let sk_30: SecretKey = ssk_6 in
    {260}let msg_rule_2: bitstring = aenc(sign(msg_23,sk_30),spk_p_2) in
    {261}out(h, msg_rule_2);
    {262}in(h, x_16: bitstring);
    {263}let msg_vp_2: bitstring = x_16 in
    {264}let sk_31: SecretKey = ssk_6 in
    {265}let unauth_vp: bitstring = auth(adec(x_16,sk_31),spk_p_2) in
    {266}let (unauth_n'_c: bitstring,unauth_recipient: DID,unauth_cred: VC) = getMsg(unauth_vp) in
    {267}let cred_subject: DID = getSubjectFromVC(unauth_cred) in
    {268}if (cred_subject = getSubjectFromRule(acr)) then
    {269}let pk_subject: PublicKey = getPubKey(cred_subject) in
    {270}let (n'_c: bitstring,recipientDID_6: DID,cred_2: VC) = auth(unauth_vp,pk_subject) in
    {271}if (recipientDID_6 = genDID(pk(sk_28),sk_28)) then
    {272}if (n'_c = n_c_2) then
    {273}if (getIssuerFromVC(cred_2) = getIssuerFromRule(acr)) then
    {274}let (subjectDID: DID,asserted_attr: bitstring,issuerDID_2: DID) = verify(cred_2,getPubKey(getIssuerFromVC(cred_2))) in
    {275}if (asserted_attr = getAttrFromRule(acr)) then
    {276}new access_token_2: bitstring;
    {277}let msg_24: bitstring = (subjectDID,access_token_2) in
    {278}let sk_32: SecretKey = ssk_6 in
    {279}let msg_accessToken_2: bitstring = aenc(sign(msg_24,sk_32),spk_p_2) in
    {280}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_6,msg_handshakeResp_6,msg_uri_2,msg_rule_2,msg_vp_2,msg_accessToken_2);
    {281}out(h, msg_accessToken_2);
    {282}phase 1;
    {283}if talksOnlyToHonest_4 then
    (
        {284}event auth_VerifierCompletesProtocol(msg_handshakeReq_6,msg_handshakeResp_6,msg_uri_2,msg_rule_2,msg_vp_2)
    ) | (
        {285}out(ch(n_p_6), n_p_fromVerifier)
    ) | (
        {286}out(chR(acr), rule_fromVerifier)
    ) | (
        {287}out(ch((n_c_2,acr)), credRequest_fromVerifier)
    ) | (
        {288}out(ch(unauth_vp), unauth_vp_fromVerifier)
    ) | (
        {289}out(ch((n'_c,recipientDID_6,cred_2)), vp_fromVerifier)
    ) | (
        {290}out(chC(cred_2), cred_fromVerifier)
    ) | (
        {291}out(ch(access_token_2), access_token_fromVerifier)
    )
) | (
    {292}!
    {293}let sk_33: SecretKey = sk_verifier in
    {294}let talksOnlyToHonest_5: bool = false in
    {295}in(h, x_17: bitstring);
    {296}let msg_handshakeReq_7: bitstring = x_17 in
    {297}let sgndMsg_3: bitstring = adec(x_17,sk_33) in
    {298}let msg_25: bitstring = sgndMsg_3 in
    {299}let (unauth_n_p_3: bitstring,unauth_spk_p_3: PublicKey) = getMsg(sgndMsg_3) in
    {300}let (n_p_7: bitstring,spk_p_3: PublicKey) = auth(sgndMsg_3,unauth_spk_p_3) in
    {301}new ssk_7: SecretKey;
    {302}new n_v_3: bitstring;
    {303}let msg_26: bitstring = (n_p_7,n_v_3,pk(ssk_7)) in
    {304}let msg_handshakeResp_7: bitstring = aenc(sign(msg_26,sk_33),spk_p_3) in
    {305}out(h, msg_handshakeResp_7);
    {306}in(h, x_18: bitstring);
    {307}let msg_uri_3: bitstring = x_18 in
    {308}let sk_34: SecretKey = ssk_7 in
    {309}let msg_27: bitstring = auth(adec(x_18,sk_34),spk_p_3) in
    {310}let (n'_v_1: bitstring,u_1: bitstring) = msg_27 in
    {311}if (n'_v_1 = n_v_3) then
    {312}if (u_1 = uri) then
    {313}new n_c_3: bitstring;
    {314}let msg_28: bitstring = (n_c_3,acr_otherAgent) in
    {315}let sk_35: SecretKey = ssk_7 in
    {316}let msg_rule_3: bitstring = aenc(sign(msg_28,sk_35),spk_p_3) in
    {317}out(h, msg_rule_3);
    {318}in(h, x_19: bitstring);
    {319}let msg_vp_3: bitstring = x_19 in
    {320}let sk_36: SecretKey = ssk_7 in
    {321}let unauth_vp_1: bitstring = auth(adec(x_19,sk_36),spk_p_3) in
    {322}let (unauth_n'_c_1: bitstring,unauth_recipient_1: DID,unauth_cred_1: VC) = getMsg(unauth_vp_1) in
    {323}let cred_subject_1: DID = getSubjectFromVC(unauth_cred_1) in
    {324}if (cred_subject_1 = getSubjectFromRule(acr_otherAgent)) then
    {325}let pk_subject_1: PublicKey = getPubKey(cred_subject_1) in
    {326}let (n'_c_1: bitstring,recipientDID_7: DID,cred_3: VC) = auth(unauth_vp_1,pk_subject_1) in
    {327}if (recipientDID_7 = genDID(pk(sk_33),sk_33)) then
    {328}if (n'_c_1 = n_c_3) then
    {329}if (getIssuerFromVC(cred_3) = getIssuerFromRule(acr_otherAgent)) then
    {330}let (subjectDID_1: DID,asserted_attr_1: bitstring,issuerDID_3: DID) = verify(cred_3,getPubKey(getIssuerFromVC(cred_3))) in
    {331}if (asserted_attr_1 = getAttrFromRule(acr_otherAgent)) then
    {332}new access_token_3: bitstring;
    {333}let msg_29: bitstring = (subjectDID_1,access_token_3) in
    {334}let sk_37: SecretKey = ssk_7 in
    {335}let msg_accessToken_3: bitstring = aenc(sign(msg_29,sk_37),spk_p_3) in
    {336}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_7,msg_handshakeResp_7,msg_uri_3,msg_rule_3,msg_vp_3,msg_accessToken_3);
    {337}out(h, msg_accessToken_3);
    {338}phase 1;
    {339}if talksOnlyToHonest_5 then
    (
        {340}event auth_VerifierCompletesProtocol(msg_handshakeReq_7,msg_handshakeResp_7,msg_uri_3,msg_rule_3,msg_vp_3)
    ) | (
        {341}out(ch(n_p_7), n_p_fromVerifier)
    ) | (
        {342}out(chR(acr_otherAgent), rule_fromVerifier)
    ) | (
        {343}out(ch((n_c_3,acr_otherAgent)), credRequest_fromVerifier)
    ) | (
        {344}out(ch(unauth_vp_1), unauth_vp_fromVerifier)
    ) | (
        {345}out(ch((n'_c_1,recipientDID_7,cred_3)), vp_fromVerifier)
    ) | (
        {346}out(chC(cred_3), cred_fromVerifier)
    ) | (
        {347}out(ch(access_token_3), access_token_fromVerifier)
    )
) | (
    {348}phase 1;
    {349}out(h, sk_prover);
    {350}out(h, sk_verifier);
    {351}out(h, sk_issuer);
    (
        {352}!
        {353}let sk_38: SecretKey = sk_issuer in
        {354}let attr_3: bitstring = attr in
        {355}let expectedDID_2: DID = genDID(pk(sk_prover),sk_prover) in
        {356}let talksOnlyToHonest_6: bool = false in
        {357}in(h, x_20: bitstring);
        {358}let msg_handshakeReq_8: bitstring = x_20 in
        {359}let sgndMsg_4: bitstring = adec(x_20,sk_38) in
        {360}let msg_30: bitstring = sgndMsg_4 in
        {361}let (unauth_n_p_4: bitstring,unauth_spk_p_4: PublicKey) = getMsg(sgndMsg_4) in
        {362}let (n_p_8: bitstring,spk_p_4: PublicKey) = auth(sgndMsg_4,unauth_spk_p_4) in
        {363}new ssk_8: SecretKey;
        {364}new n_i_4: bitstring;
        {365}let msg_31: bitstring = (n_p_8,n_i_4,pk(ssk_8)) in
        {366}let msg_handshakeResp_8: bitstring = aenc(sign(msg_31,sk_38),spk_p_4) in
        {367}out(h, msg_handshakeResp_8);
        {368}in(h, x_21: bitstring);
        {369}let msg_did_4: bitstring = x_21 in
        {370}let sk_39: SecretKey = ssk_8 in
        {371}let msg_32: bitstring = auth(adec(x_21,sk_39),spk_p_4) in
        {372}let (unauth_n'_i_2: bitstring,unauth_proverDID_2: DID,unauth_recipientDID_2: DID) = getMsg(msg_32) in
        {373}let pk_p_2: PublicKey = getPubKey(unauth_proverDID_2) in
        {374}let (n'_i_2: bitstring,proverDID_2: DID,recipientDID_8: DID) = auth(msg_32,pk_p_2) in
        {375}if (proverDID_2 = expectedDID_2) then
        {376}if (n'_i_2 = n_i_4) then
        {377}if (recipientDID_8 = genDID(pk(sk_38),sk_38)) then
        {378}let cred_4: VC = issueVC(proverDID_2,attr_3,sk_38) in
        {379}new n_issuing_4: bitstring;
        {380}let msg_33: bitstring = (cred_4,proverDID_2,n_issuing_4) in
        {381}let sk_40: SecretKey = ssk_8 in
        {382}let msg_cred_2: bitstring = aenc(sign(msg_33,sk_40),spk_p_4) in
        {383}out(h, msg_cred_2)
    ) | (
        {384}!
        {385}let sk_41: SecretKey = sk_issuer in
        {386}let attr_4: bitstring = attr in
        {387}let expectedDID_3: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
        {388}let talksOnlyToHonest_7: bool = false in
        {389}in(h, x_22: bitstring);
        {390}let msg_handshakeReq_9: bitstring = x_22 in
        {391}let sgndMsg_5: bitstring = adec(x_22,sk_41) in
        {392}let msg_34: bitstring = sgndMsg_5 in
        {393}let (unauth_n_p_5: bitstring,unauth_spk_p_5: PublicKey) = getMsg(sgndMsg_5) in
        {394}let (n_p_9: bitstring,spk_p_5: PublicKey) = auth(sgndMsg_5,unauth_spk_p_5) in
        {395}new ssk_9: SecretKey;
        {396}new n_i_5: bitstring;
        {397}let msg_35: bitstring = (n_p_9,n_i_5,pk(ssk_9)) in
        {398}let msg_handshakeResp_9: bitstring = aenc(sign(msg_35,sk_41),spk_p_5) in
        {399}out(h, msg_handshakeResp_9);
        {400}in(h, x_23: bitstring);
        {401}let msg_did_5: bitstring = x_23 in
        {402}let sk_42: SecretKey = ssk_9 in
        {403}let msg_36: bitstring = auth(adec(x_23,sk_42),spk_p_5) in
        {404}let (unauth_n'_i_3: bitstring,unauth_proverDID_3: DID,unauth_recipientDID_3: DID) = getMsg(msg_36) in
        {405}let pk_p_3: PublicKey = getPubKey(unauth_proverDID_3) in
        {406}let (n'_i_3: bitstring,proverDID_3: DID,recipientDID_9: DID) = auth(msg_36,pk_p_3) in
        {407}if (proverDID_3 = expectedDID_3) then
        {408}if (n'_i_3 = n_i_5) then
        {409}if (recipientDID_9 = genDID(pk(sk_41),sk_41)) then
        {410}let cred_5: VC = issueVC(proverDID_3,attr_4,sk_41) in
        {411}new n_issuing_5: bitstring;
        {412}let msg_37: bitstring = (cred_5,proverDID_3,n_issuing_5) in
        {413}let sk_43: SecretKey = ssk_9 in
        {414}let msg_cred_3: bitstring = aenc(sign(msg_37,sk_43),spk_p_5) in
        {415}out(h, msg_cred_3)
    ) | (
        {416}!
        {417}let sk_44: SecretKey = sk_prover in
        {418}let issuerDID_4: DID = genDID(pk(sk_issuer),sk_issuer) in
        {419}let verifierDID_2: DID = genDID(pk(sk_verifier),sk_verifier) in
        {420}let talksOnlyToHonest_8: bool = false in
        {421}let pk_i_2: PublicKey = getPubKey(issuerDID_4) in
        {422}new ssk_10: SecretKey;
        {423}new n_p_10: bitstring;
        {424}let msg_38: bitstring = (n_p_10,pk(ssk_10)) in
        {425}let sk_45: SecretKey = ssk_10 in
        {426}let msg_handshakeReq_10: bitstring = aenc(sign(msg_38,sk_45),pk_i_2) in
        {427}out(h, msg_handshakeReq_10);
        {428}in(h, x_24: bitstring);
        {429}let msg_handshakeResp_10: bitstring = x_24 in
        {430}let sk_46: SecretKey = ssk_10 in
        {431}let msg_39: bitstring = auth(adec(x_24,sk_46),pk_i_2) in
        {432}let (n'_p_4: bitstring,n_i_6: bitstring,spk_i_2: PublicKey) = msg_39 in
        {433}if (n'_p_4 = n_p_10) then
        {434}let msg_40: bitstring = sign((n_i_6,genDID(pk(sk_44),sk_44),issuerDID_4),sk_44) in
        {435}let sk_47: SecretKey = ssk_10 in
        {436}let msg_did_6: bitstring = aenc(sign(msg_40,sk_47),spk_i_2) in
        {437}out(h, msg_did_6);
        {438}in(h, x_25: bitstring);
        {439}let msg_credential_2: bitstring = x_25 in
        {440}let sk_48: SecretKey = ssk_10 in
        {441}let (credential_2: VC,recipientDID_10: DID,n_issuing_6: bitstring) = auth(adec(x_25,sk_48),spk_i_2) in
        {442}if (recipientDID_10 = genDID(pk(sk_44),sk_44)) then
        (
            {443}!
            {444}let pk_v_2: PublicKey = getPubKey(verifierDID_2) in
            {445}new ssk_11: SecretKey;
            {446}new n_p_11: bitstring;
            {447}let msg_41: bitstring = (n_p_11,pk(ssk_11)) in
            {448}let sk_49: SecretKey = ssk_11 in
            {449}let msg_handshakeReq_11: bitstring = aenc(sign(msg_41,sk_49),pk_v_2) in
            {450}out(h, msg_handshakeReq_11);
            {451}in(h, x_26: bitstring);
            {452}let msg_handshakeResp_11: bitstring = x_26 in
            {453}let sk_50: SecretKey = ssk_11 in
            {454}let msg_42: bitstring = auth(adec(x_26,sk_50),pk_v_2) in
            {455}let (n'_p_5: bitstring,n_v_4: bitstring,spk_v_2: PublicKey) = msg_42 in
            {456}if (n'_p_5 = n_p_11) then
            {457}let msg_43: bitstring = (n_v_4,uri) in
            {458}let sk_51: SecretKey = ssk_11 in
            {459}let msg_uri_4: bitstring = aenc(sign(msg_43,sk_51),spk_v_2) in
            {460}out(h, msg_uri_4);
            {461}in(h, x_27: bitstring);
            {462}let msg_rule_4: bitstring = x_27 in
            {463}let sk_52: SecretKey = ssk_11 in
            {464}let msg_44: bitstring = auth(adec(x_27,sk_52),spk_v_2) in
            {465}let (n_c_4: bitstring,rule_2: ACR) = msg_44 in
            {466}if (getVcAsTuple(credential_2) = getRuleAsTuple(rule_2)) then
            {467}let vp_2: bitstring = sign((n_c_4,verifierDID_2,credential_2),sk_44) in
            {468}let sk_53: SecretKey = ssk_11 in
            {469}let msg_vp_4: bitstring = aenc(sign(vp_2,sk_53),spk_v_2) in
            {470}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_11,msg_handshakeResp_11,msg_uri_4,msg_rule_4,msg_vp_4);
            {471}out(h, msg_vp_4);
            {472}in(h, x_28: bitstring);
            {473}let msg_accessToken_4: bitstring = x_28 in
            {474}let sk_54: SecretKey = ssk_11 in
            {475}let (access_token_4: bitstring,recipientDID_11: DID) = auth(adec(x_28,sk_54),spk_v_2) in
            {476}if (recipientDID_11 = genDID(pk(sk_44),sk_44)) then
            0
        ) | (
            0
        )
    ) | (
        {477}!
        {478}let sk_55: SecretKey = sk_prover in
        {479}let issuerDID_5: DID = genDID(pk(sk_issuer),sk_issuer) in
        {480}let verifierDID_3: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
        {481}let talksOnlyToHonest_9: bool = false in
        {482}let pk_i_3: PublicKey = getPubKey(issuerDID_5) in
        {483}new ssk_12: SecretKey;
        {484}new n_p_12: bitstring;
        {485}let msg_45: bitstring = (n_p_12,pk(ssk_12)) in
        {486}let sk_56: SecretKey = ssk_12 in
        {487}let msg_handshakeReq_12: bitstring = aenc(sign(msg_45,sk_56),pk_i_3) in
        {488}out(h, msg_handshakeReq_12);
        {489}in(h, x_29: bitstring);
        {490}let msg_handshakeResp_12: bitstring = x_29 in
        {491}let sk_57: SecretKey = ssk_12 in
        {492}let msg_46: bitstring = auth(adec(x_29,sk_57),pk_i_3) in
        {493}let (n'_p_6: bitstring,n_i_7: bitstring,spk_i_3: PublicKey) = msg_46 in
        {494}if (n'_p_6 = n_p_12) then
        {495}let msg_47: bitstring = sign((n_i_7,genDID(pk(sk_55),sk_55),issuerDID_5),sk_55) in
        {496}let sk_58: SecretKey = ssk_12 in
        {497}let msg_did_7: bitstring = aenc(sign(msg_47,sk_58),spk_i_3) in
        {498}out(h, msg_did_7);
        {499}in(h, x_30: bitstring);
        {500}let msg_credential_3: bitstring = x_30 in
        {501}let sk_59: SecretKey = ssk_12 in
        {502}let (credential_3: VC,recipientDID_12: DID,n_issuing_7: bitstring) = auth(adec(x_30,sk_59),spk_i_3) in
        {503}if (recipientDID_12 = genDID(pk(sk_55),sk_55)) then
        (
            {504}!
            {505}let pk_v_3: PublicKey = getPubKey(verifierDID_3) in
            {506}new ssk_13: SecretKey;
            {507}new n_p_13: bitstring;
            {508}let msg_48: bitstring = (n_p_13,pk(ssk_13)) in
            {509}let sk_60: SecretKey = ssk_13 in
            {510}let msg_handshakeReq_13: bitstring = aenc(sign(msg_48,sk_60),pk_v_3) in
            {511}out(h, msg_handshakeReq_13);
            {512}in(h, x_31: bitstring);
            {513}let msg_handshakeResp_13: bitstring = x_31 in
            {514}let sk_61: SecretKey = ssk_13 in
            {515}let msg_49: bitstring = auth(adec(x_31,sk_61),pk_v_3) in
            {516}let (n'_p_7: bitstring,n_v_5: bitstring,spk_v_3: PublicKey) = msg_49 in
            {517}if (n'_p_7 = n_p_13) then
            {518}let msg_50: bitstring = (n_v_5,uri) in
            {519}let sk_62: SecretKey = ssk_13 in
            {520}let msg_uri_5: bitstring = aenc(sign(msg_50,sk_62),spk_v_3) in
            {521}out(h, msg_uri_5);
            {522}in(h, x_32: bitstring);
            {523}let msg_rule_5: bitstring = x_32 in
            {524}let sk_63: SecretKey = ssk_13 in
            {525}let msg_51: bitstring = auth(adec(x_32,sk_63),spk_v_3) in
            {526}let (n_c_5: bitstring,rule_3: ACR) = msg_51 in
            {527}if (getVcAsTuple(credential_3) = getRuleAsTuple(rule_3)) then
            {528}let vp_3: bitstring = sign((n_c_5,verifierDID_3,credential_3),sk_55) in
            {529}let sk_64: SecretKey = ssk_13 in
            {530}let msg_vp_5: bitstring = aenc(sign(vp_3,sk_64),spk_v_3) in
            {531}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_13,msg_handshakeResp_13,msg_uri_5,msg_rule_5,msg_vp_5);
            {532}out(h, msg_vp_5);
            {533}in(h, x_33: bitstring);
            {534}let msg_accessToken_5: bitstring = x_33 in
            {535}let sk_65: SecretKey = ssk_13 in
            {536}let (access_token_5: bitstring,recipientDID_13: DID) = auth(adec(x_33,sk_65),spk_v_3) in
            {537}if (recipientDID_13 = genDID(pk(sk_55),sk_55)) then
            0
        ) | (
            0
        )
    ) | (
        {538}!
        {539}let sk_66: SecretKey = sk_verifier in
        {540}let talksOnlyToHonest_10: bool = false in
        {541}in(h, x_34: bitstring);
        {542}let msg_handshakeReq_14: bitstring = x_34 in
        {543}let sgndMsg_6: bitstring = adec(x_34,sk_66) in
        {544}let msg_52: bitstring = sgndMsg_6 in
        {545}let (unauth_n_p_6: bitstring,unauth_spk_p_6: PublicKey) = getMsg(sgndMsg_6) in
        {546}let (n_p_14: bitstring,spk_p_6: PublicKey) = auth(sgndMsg_6,unauth_spk_p_6) in
        {547}new ssk_14: SecretKey;
        {548}new n_v_6: bitstring;
        {549}let msg_53: bitstring = (n_p_14,n_v_6,pk(ssk_14)) in
        {550}let msg_handshakeResp_14: bitstring = aenc(sign(msg_53,sk_66),spk_p_6) in
        {551}out(h, msg_handshakeResp_14);
        {552}in(h, x_35: bitstring);
        {553}let msg_uri_6: bitstring = x_35 in
        {554}let sk_67: SecretKey = ssk_14 in
        {555}let msg_54: bitstring = auth(adec(x_35,sk_67),spk_p_6) in
        {556}let (n'_v_2: bitstring,u_2: bitstring) = msg_54 in
        {557}if (n'_v_2 = n_v_6) then
        {558}if (u_2 = uri) then
        {559}new n_c_6: bitstring;
        {560}let msg_55: bitstring = (n_c_6,acr) in
        {561}let sk_68: SecretKey = ssk_14 in
        {562}let msg_rule_6: bitstring = aenc(sign(msg_55,sk_68),spk_p_6) in
        {563}out(h, msg_rule_6);
        {564}in(h, x_36: bitstring);
        {565}let msg_vp_6: bitstring = x_36 in
        {566}let sk_69: SecretKey = ssk_14 in
        {567}let unauth_vp_2: bitstring = auth(adec(x_36,sk_69),spk_p_6) in
        {568}let (unauth_n'_c_2: bitstring,unauth_recipient_2: DID,unauth_cred_2: VC) = getMsg(unauth_vp_2) in
        {569}let cred_subject_2: DID = getSubjectFromVC(unauth_cred_2) in
        {570}if (cred_subject_2 = getSubjectFromRule(acr)) then
        {571}let pk_subject_2: PublicKey = getPubKey(cred_subject_2) in
        {572}let (n'_c_2: bitstring,recipientDID_14: DID,cred_6: VC) = auth(unauth_vp_2,pk_subject_2) in
        {573}if (recipientDID_14 = genDID(pk(sk_66),sk_66)) then
        {574}if (n'_c_2 = n_c_6) then
        {575}if (getIssuerFromVC(cred_6) = getIssuerFromRule(acr)) then
        {576}let (subjectDID_2: DID,asserted_attr_2: bitstring,issuerDID_6: DID) = verify(cred_6,getPubKey(getIssuerFromVC(cred_6))) in
        {577}if (asserted_attr_2 = getAttrFromRule(acr)) then
        {578}new access_token_6: bitstring;
        {579}let msg_56: bitstring = (subjectDID_2,access_token_6) in
        {580}let sk_70: SecretKey = ssk_14 in
        {581}let msg_accessToken_6: bitstring = aenc(sign(msg_56,sk_70),spk_p_6) in
        {582}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_14,msg_handshakeResp_14,msg_uri_6,msg_rule_6,msg_vp_6,msg_accessToken_6);
        {583}out(h, msg_accessToken_6)
    ) | (
        {584}!
        {585}let sk_71: SecretKey = sk_verifier in
        {586}let talksOnlyToHonest_11: bool = false in
        {587}in(h, x_37: bitstring);
        {588}let msg_handshakeReq_15: bitstring = x_37 in
        {589}let sgndMsg_7: bitstring = adec(x_37,sk_71) in
        {590}let msg_57: bitstring = sgndMsg_7 in
        {591}let (unauth_n_p_7: bitstring,unauth_spk_p_7: PublicKey) = getMsg(sgndMsg_7) in
        {592}let (n_p_15: bitstring,spk_p_7: PublicKey) = auth(sgndMsg_7,unauth_spk_p_7) in
        {593}new ssk_15: SecretKey;
        {594}new n_v_7: bitstring;
        {595}let msg_58: bitstring = (n_p_15,n_v_7,pk(ssk_15)) in
        {596}let msg_handshakeResp_15: bitstring = aenc(sign(msg_58,sk_71),spk_p_7) in
        {597}out(h, msg_handshakeResp_15);
        {598}in(h, x_38: bitstring);
        {599}let msg_uri_7: bitstring = x_38 in
        {600}let sk_72: SecretKey = ssk_15 in
        {601}let msg_59: bitstring = auth(adec(x_38,sk_72),spk_p_7) in
        {602}let (n'_v_3: bitstring,u_3: bitstring) = msg_59 in
        {603}if (n'_v_3 = n_v_7) then
        {604}if (u_3 = uri) then
        {605}new n_c_7: bitstring;
        {606}let msg_60: bitstring = (n_c_7,acr_otherAgent) in
        {607}let sk_73: SecretKey = ssk_15 in
        {608}let msg_rule_7: bitstring = aenc(sign(msg_60,sk_73),spk_p_7) in
        {609}out(h, msg_rule_7);
        {610}in(h, x_39: bitstring);
        {611}let msg_vp_7: bitstring = x_39 in
        {612}let sk_74: SecretKey = ssk_15 in
        {613}let unauth_vp_3: bitstring = auth(adec(x_39,sk_74),spk_p_7) in
        {614}let (unauth_n'_c_3: bitstring,unauth_recipient_3: DID,unauth_cred_3: VC) = getMsg(unauth_vp_3) in
        {615}let cred_subject_3: DID = getSubjectFromVC(unauth_cred_3) in
        {616}if (cred_subject_3 = getSubjectFromRule(acr_otherAgent)) then
        {617}let pk_subject_3: PublicKey = getPubKey(cred_subject_3) in
        {618}let (n'_c_3: bitstring,recipientDID_15: DID,cred_7: VC) = auth(unauth_vp_3,pk_subject_3) in
        {619}if (recipientDID_15 = genDID(pk(sk_71),sk_71)) then
        {620}if (n'_c_3 = n_c_7) then
        {621}if (getIssuerFromVC(cred_7) = getIssuerFromRule(acr_otherAgent)) then
        {622}let (subjectDID_3: DID,asserted_attr_3: bitstring,issuerDID_7: DID) = verify(cred_7,getPubKey(getIssuerFromVC(cred_7))) in
        {623}if (asserted_attr_3 = getAttrFromRule(acr_otherAgent)) then
        {624}new access_token_7: bitstring;
        {625}let msg_61: bitstring = (subjectDID_3,access_token_7) in
        {626}let sk_75: SecretKey = ssk_15 in
        {627}let msg_accessToken_7: bitstring = aenc(sign(msg_61,sk_75),spk_p_7) in
        {628}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_15,msg_handshakeResp_15,msg_uri_7,msg_rule_7,msg_vp_7,msg_accessToken_7);
        {629}out(h, msg_accessToken_7)
    )
)

--  Process 1 (that is, process 0, with let moved downwards):
{1}new sk_prover: SecretKey;
{2}new sk_verifier: SecretKey;
{3}new sk_issuer: SecretKey;
{4}out(h, pk(sk_issuer));
{5}out(h, pk(sk_verifier));
{6}out(h, pk(sk_prover));
{7}out(h, genDID(pk(sk_prover),sk_prover));
{8}out(h, genDID(pk(sk_verifier),sk_verifier));
{9}out(h, genDID(pk(sk_issuer),sk_issuer));
{11}let acr_otherAgent: ACR = makeRule(genDID(pk(sk_otherAgent),sk_otherAgent),attr,genDID(pk(sk_issuer),sk_issuer)) in
{10}let acr: ACR = makeRule(genDID(pk(sk_prover),sk_prover),attr,genDID(pk(sk_issuer),sk_issuer)) in
(
    {12}!
    {17}in(h, x: bitstring);
    {13}let sk: SecretKey = sk_issuer in
    {19}let sgndMsg: bitstring = adec(x,sk) in
    {20}let (unauth_n_p: bitstring,unauth_spk_p: PublicKey) = getMsg(sgndMsg) in
    {21}let (n_p: bitstring,spk_p: PublicKey) = auth(sgndMsg,unauth_spk_p) in
    {22}new ssk: SecretKey;
    {23}new n_i: bitstring;
    {24}let msg: bitstring = (n_p,n_i,pk(ssk)) in
    {25}let msg_handshakeResp: bitstring = aenc(sign(msg,sk),spk_p) in
    {26}out(h, msg_handshakeResp);
    {27}in(h, x_1: bitstring);
    {29}let sk_1: SecretKey = ssk in
    {30}let msg_1: bitstring = auth(adec(x_1,sk_1),spk_p) in
    {31}let (unauth_n'_i: bitstring,unauth_proverDID: DID,unauth_recipientDID: DID) = getMsg(msg_1) in
    {32}let pk_p: PublicKey = getPubKey(unauth_proverDID) in
    {33}let (n'_i: bitstring,proverDID: DID,recipientDID: DID) = auth(msg_1,pk_p) in
    {15}let expectedDID: DID = genDID(pk(sk_prover),sk_prover) in
    {34}if (proverDID = expectedDID) then
    {35}if (n'_i = n_i) then
    {36}if (recipientDID = genDID(pk(sk),sk)) then
    {38}new n_issuing: bitstring;
    {40}let sk_2: SecretKey = ssk in
    {14}let attr_1: bitstring = attr in
    {37}let cred: VC = issueVC(proverDID,attr_1,sk) in
    {39}let msg_2: bitstring = (cred,proverDID,n_issuing) in
    {41}let msg_cred: bitstring = aenc(sign(msg_2,sk_2),spk_p) in
    {42}out(h, msg_cred);
    {43}phase 1;
    {16}let talksOnlyToHonest: bool = true in
    {44}if talksOnlyToHonest then
    (
        {45}out(ch(n_p), n_p_fromIssuer)
    ) | (
        {46}out(chC(cred), cred_fromIssuer)
    ) | (
        {47}out(ch((cred,proverDID,n_issuing)), credIssuing_fromIssuer)
    )
) | (
    {48}!
    {53}in(h, x_2: bitstring);
    {49}let sk_3: SecretKey = sk_issuer in
    {55}let sgndMsg_1: bitstring = adec(x_2,sk_3) in
    {56}let (unauth_n_p_1: bitstring,unauth_spk_p_1: PublicKey) = getMsg(sgndMsg_1) in
    {57}let (n_p_1: bitstring,spk_p_1: PublicKey) = auth(sgndMsg_1,unauth_spk_p_1) in
    {58}new ssk_1: SecretKey;
    {59}new n_i_1: bitstring;
    {60}let msg_3: bitstring = (n_p_1,n_i_1,pk(ssk_1)) in
    {61}let msg_handshakeResp_1: bitstring = aenc(sign(msg_3,sk_3),spk_p_1) in
    {62}out(h, msg_handshakeResp_1);
    {63}in(h, x_3: bitstring);
    {65}let sk_4: SecretKey = ssk_1 in
    {66}let msg_4: bitstring = auth(adec(x_3,sk_4),spk_p_1) in
    {67}let (unauth_n'_i_1: bitstring,unauth_proverDID_1: DID,unauth_recipientDID_1: DID) = getMsg(msg_4) in
    {68}let pk_p_1: PublicKey = getPubKey(unauth_proverDID_1) in
    {69}let (n'_i_1: bitstring,proverDID_1: DID,recipientDID_1: DID) = auth(msg_4,pk_p_1) in
    {51}let expectedDID_1: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
    {70}if (proverDID_1 = expectedDID_1) then
    {71}if (n'_i_1 = n_i_1) then
    {72}if (recipientDID_1 = genDID(pk(sk_3),sk_3)) then
    {74}new n_issuing_1: bitstring;
    {76}let sk_5: SecretKey = ssk_1 in
    {50}let attr_2: bitstring = attr in
    {73}let cred_1: VC = issueVC(proverDID_1,attr_2,sk_3) in
    {75}let msg_5: bitstring = (cred_1,proverDID_1,n_issuing_1) in
    {77}let msg_cred_1: bitstring = aenc(sign(msg_5,sk_5),spk_p_1) in
    {78}out(h, msg_cred_1);
    {79}phase 1;
    {52}let talksOnlyToHonest_1: bool = false in
    {80}if talksOnlyToHonest_1 then
    (
        {81}out(ch(n_p_1), n_p_fromIssuer)
    ) | (
        {82}out(chC(cred_1), cred_fromIssuer)
    ) | (
        {83}out(ch((cred_1,proverDID_1,n_issuing_1)), credIssuing_fromIssuer)
    )
) | (
    {84}!
    {86}let issuerDID: DID = genDID(pk(sk_issuer),sk_issuer) in
    {89}let pk_i: PublicKey = getPubKey(issuerDID) in
    {90}new ssk_2: SecretKey;
    {91}new n_p_2: bitstring;
    {93}let sk_7: SecretKey = ssk_2 in
    {92}let msg_6: bitstring = (n_p_2,pk(ssk_2)) in
    {94}let msg_handshakeReq_2: bitstring = aenc(sign(msg_6,sk_7),pk_i) in
    {95}out(h, msg_handshakeReq_2);
    {96}in(h, x_4: bitstring);
    {98}let sk_8: SecretKey = ssk_2 in
    {99}let msg_7: bitstring = auth(adec(x_4,sk_8),pk_i) in
    {100}let (n'_p: bitstring,n_i_2: bitstring,spk_i: PublicKey) = msg_7 in
    {101}if (n'_p = n_p_2) then
    {103}let sk_9: SecretKey = ssk_2 in
    {85}let sk_6: SecretKey = sk_prover in
    {102}let msg_8: bitstring = sign((n_i_2,genDID(pk(sk_6),sk_6),issuerDID),sk_6) in
    {104}let msg_did_2: bitstring = aenc(sign(msg_8,sk_9),spk_i) in
    {105}out(h, msg_did_2);
    {106}in(h, x_5: bitstring);
    {108}let sk_10: SecretKey = ssk_2 in
    {109}let (credential: VC,recipientDID_2: DID,n_issuing_2: bitstring) = auth(adec(x_5,sk_10),spk_i) in
    {110}if (recipientDID_2 = genDID(pk(sk_6),sk_6)) then
    {88}let talksOnlyToHonest_2: bool = true in
    (
        {111}!
        {87}let verifierDID: DID = genDID(pk(sk_verifier),sk_verifier) in
        {112}let pk_v: PublicKey = getPubKey(verifierDID) in
        {113}new ssk_3: SecretKey;
        {114}new n_p_3: bitstring;
        {116}let sk_11: SecretKey = ssk_3 in
        {115}let msg_9: bitstring = (n_p_3,pk(ssk_3)) in
        {117}let msg_handshakeReq_3: bitstring = aenc(sign(msg_9,sk_11),pk_v) in
        {118}out(h, msg_handshakeReq_3);
        {119}in(h, x_6: bitstring);
        {121}let sk_12: SecretKey = ssk_3 in
        {122}let msg_10: bitstring = auth(adec(x_6,sk_12),pk_v) in
        {123}let (n'_p_1: bitstring,n_v: bitstring,spk_v: PublicKey) = msg_10 in
        {124}if (n'_p_1 = n_p_3) then
        {126}let sk_13: SecretKey = ssk_3 in
        {125}let msg_11: bitstring = (n_v,uri) in
        {127}let msg_uri: bitstring = aenc(sign(msg_11,sk_13),spk_v) in
        {128}out(h, msg_uri);
        {129}in(h, x_7: bitstring);
        {131}let sk_14: SecretKey = ssk_3 in
        {132}let msg_12: bitstring = auth(adec(x_7,sk_14),spk_v) in
        {133}let (n_c: bitstring,rule: ACR) = msg_12 in
        {134}if (getVcAsTuple(credential) = getRuleAsTuple(rule)) then
        {136}let sk_15: SecretKey = ssk_3 in
        {135}let vp: bitstring = sign((n_c,verifierDID,credential),sk_6) in
        {137}let msg_vp: bitstring = aenc(sign(vp,sk_15),spk_v) in
        {130}let msg_rule: bitstring = x_7 in
        {120}let msg_handshakeResp_3: bitstring = x_6 in
        {138}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_3,msg_handshakeResp_3,msg_uri,msg_rule,msg_vp);
        {139}out(h, msg_vp);
        {140}in(h, x_8: bitstring);
        {142}let sk_16: SecretKey = ssk_3 in
        {143}let (access_token: bitstring,recipientDID_3: DID) = auth(adec(x_8,sk_16),spk_v) in
        {144}if (recipientDID_3 = genDID(pk(sk_6),sk_6)) then
        {145}phase 1;
        {146}if talksOnlyToHonest_2 then
        (
            {141}let msg_accessToken: bitstring = x_8 in
            {147}event auth_ProverCompletesProtocol(msg_handshakeReq_3,msg_handshakeResp_3,msg_uri,msg_rule,msg_vp,msg_accessToken)
        ) | (
            {148}out(ch(n_p_3), n_p_fromProver)
        ) | (
            {149}out(chR(rule), rule_fromProver)
        ) | (
            {150}out(ch((n_c,verifierDID,credential)), unsigned_vp_fromProver)
        ) | (
            {151}out(ch(vp), vp_fromProver)
        ) | (
            {152}out(chC(credential), cred_fromProver)
        ) | (
            {153}out(ch(access_token), access_token_fromProver)
        )
    ) | (
        {154}phase 1;
        {155}if talksOnlyToHonest_2 then
        (
            {156}out(ch(n_p_2), n_p_fromHolder)
        ) | (
            {157}out(ch(n_i_2), n_i_fromHolder)
        ) | (
            {158}out(ch((n_i_2,genDID(pk(sk_6),sk_6),issuerDID)), providingDID_fromHolder)
        ) | (
            {159}out(chC(credential), cred_fromHolder)
        )
    )
) | (
    {160}!
    {162}let issuerDID_1: DID = genDID(pk(sk_issuer),sk_issuer) in
    {165}let pk_i_1: PublicKey = getPubKey(issuerDID_1) in
    {166}new ssk_4: SecretKey;
    {167}new n_p_4: bitstring;
    {169}let sk_18: SecretKey = ssk_4 in
    {168}let msg_13: bitstring = (n_p_4,pk(ssk_4)) in
    {170}let msg_handshakeReq_4: bitstring = aenc(sign(msg_13,sk_18),pk_i_1) in
    {171}out(h, msg_handshakeReq_4);
    {172}in(h, x_9: bitstring);
    {174}let sk_19: SecretKey = ssk_4 in
    {175}let msg_14: bitstring = auth(adec(x_9,sk_19),pk_i_1) in
    {176}let (n'_p_2: bitstring,n_i_3: bitstring,spk_i_1: PublicKey) = msg_14 in
    {177}if (n'_p_2 = n_p_4) then
    {179}let sk_20: SecretKey = ssk_4 in
    {161}let sk_17: SecretKey = sk_prover in
    {178}let msg_15: bitstring = sign((n_i_3,genDID(pk(sk_17),sk_17),issuerDID_1),sk_17) in
    {180}let msg_did_3: bitstring = aenc(sign(msg_15,sk_20),spk_i_1) in
    {181}out(h, msg_did_3);
    {182}in(h, x_10: bitstring);
    {184}let sk_21: SecretKey = ssk_4 in
    {185}let (credential_1: VC,recipientDID_4: DID,n_issuing_3: bitstring) = auth(adec(x_10,sk_21),spk_i_1) in
    {186}if (recipientDID_4 = genDID(pk(sk_17),sk_17)) then
    {164}let talksOnlyToHonest_3: bool = false in
    (
        {187}!
        {163}let verifierDID_1: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
        {188}let pk_v_1: PublicKey = getPubKey(verifierDID_1) in
        {189}new ssk_5: SecretKey;
        {190}new n_p_5: bitstring;
        {192}let sk_22: SecretKey = ssk_5 in
        {191}let msg_16: bitstring = (n_p_5,pk(ssk_5)) in
        {193}let msg_handshakeReq_5: bitstring = aenc(sign(msg_16,sk_22),pk_v_1) in
        {194}out(h, msg_handshakeReq_5);
        {195}in(h, x_11: bitstring);
        {197}let sk_23: SecretKey = ssk_5 in
        {198}let msg_17: bitstring = auth(adec(x_11,sk_23),pk_v_1) in
        {199}let (n'_p_3: bitstring,n_v_1: bitstring,spk_v_1: PublicKey) = msg_17 in
        {200}if (n'_p_3 = n_p_5) then
        {202}let sk_24: SecretKey = ssk_5 in
        {201}let msg_18: bitstring = (n_v_1,uri) in
        {203}let msg_uri_1: bitstring = aenc(sign(msg_18,sk_24),spk_v_1) in
        {204}out(h, msg_uri_1);
        {205}in(h, x_12: bitstring);
        {207}let sk_25: SecretKey = ssk_5 in
        {208}let msg_19: bitstring = auth(adec(x_12,sk_25),spk_v_1) in
        {209}let (n_c_1: bitstring,rule_1: ACR) = msg_19 in
        {210}if (getVcAsTuple(credential_1) = getRuleAsTuple(rule_1)) then
        {212}let sk_26: SecretKey = ssk_5 in
        {211}let vp_1: bitstring = sign((n_c_1,verifierDID_1,credential_1),sk_17) in
        {213}let msg_vp_1: bitstring = aenc(sign(vp_1,sk_26),spk_v_1) in
        {206}let msg_rule_1: bitstring = x_12 in
        {196}let msg_handshakeResp_5: bitstring = x_11 in
        {214}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_5,msg_handshakeResp_5,msg_uri_1,msg_rule_1,msg_vp_1);
        {215}out(h, msg_vp_1);
        {216}in(h, x_13: bitstring);
        {218}let sk_27: SecretKey = ssk_5 in
        {219}let (access_token_1: bitstring,recipientDID_5: DID) = auth(adec(x_13,sk_27),spk_v_1) in
        {220}if (recipientDID_5 = genDID(pk(sk_17),sk_17)) then
        {221}phase 1;
        {222}if talksOnlyToHonest_3 then
        (
            {217}let msg_accessToken_1: bitstring = x_13 in
            {223}event auth_ProverCompletesProtocol(msg_handshakeReq_5,msg_handshakeResp_5,msg_uri_1,msg_rule_1,msg_vp_1,msg_accessToken_1)
        ) | (
            {224}out(ch(n_p_5), n_p_fromProver)
        ) | (
            {225}out(chR(rule_1), rule_fromProver)
        ) | (
            {226}out(ch((n_c_1,verifierDID_1,credential_1)), unsigned_vp_fromProver)
        ) | (
            {227}out(ch(vp_1), vp_fromProver)
        ) | (
            {228}out(chC(credential_1), cred_fromProver)
        ) | (
            {229}out(ch(access_token_1), access_token_fromProver)
        )
    ) | (
        {230}phase 1;
        {231}if talksOnlyToHonest_3 then
        (
            {232}out(ch(n_p_4), n_p_fromHolder)
        ) | (
            {233}out(ch(n_i_3), n_i_fromHolder)
        ) | (
            {234}out(ch((n_i_3,genDID(pk(sk_17),sk_17),issuerDID_1)), providingDID_fromHolder)
        ) | (
            {235}out(chC(credential_1), cred_fromHolder)
        )
    )
) | (
    {236}!
    {239}in(h, x_14: bitstring);
    {237}let sk_28: SecretKey = sk_verifier in
    {241}let sgndMsg_2: bitstring = adec(x_14,sk_28) in
    {243}let (unauth_n_p_2: bitstring,unauth_spk_p_2: PublicKey) = getMsg(sgndMsg_2) in
    {244}let (n_p_6: bitstring,spk_p_2: PublicKey) = auth(sgndMsg_2,unauth_spk_p_2) in
    {245}new ssk_6: SecretKey;
    {246}new n_v_2: bitstring;
    {247}let msg_21: bitstring = (n_p_6,n_v_2,pk(ssk_6)) in
    {248}let msg_handshakeResp_6: bitstring = aenc(sign(msg_21,sk_28),spk_p_2) in
    {249}out(h, msg_handshakeResp_6);
    {250}in(h, x_15: bitstring);
    {252}let sk_29: SecretKey = ssk_6 in
    {253}let msg_22: bitstring = auth(adec(x_15,sk_29),spk_p_2) in
    {254}let (n'_v: bitstring,u: bitstring) = msg_22 in
    {255}if (n'_v = n_v_2) then
    {256}if (u = uri) then
    {257}new n_c_2: bitstring;
    {259}let sk_30: SecretKey = ssk_6 in
    {258}let msg_23: bitstring = (n_c_2,acr) in
    {260}let msg_rule_2: bitstring = aenc(sign(msg_23,sk_30),spk_p_2) in
    {261}out(h, msg_rule_2);
    {262}in(h, x_16: bitstring);
    {264}let sk_31: SecretKey = ssk_6 in
    {265}let unauth_vp: bitstring = auth(adec(x_16,sk_31),spk_p_2) in
    {266}let (unauth_n'_c: bitstring,unauth_recipient: DID,unauth_cred: VC) = getMsg(unauth_vp) in
    {267}let cred_subject: DID = getSubjectFromVC(unauth_cred) in
    {268}if (cred_subject = getSubjectFromRule(acr)) then
    {269}let pk_subject: PublicKey = getPubKey(cred_subject) in
    {270}let (n'_c: bitstring,recipientDID_6: DID,cred_2: VC) = auth(unauth_vp,pk_subject) in
    {271}if (recipientDID_6 = genDID(pk(sk_28),sk_28)) then
    {272}if (n'_c = n_c_2) then
    {273}if (getIssuerFromVC(cred_2) = getIssuerFromRule(acr)) then
    {274}let (subjectDID: DID,asserted_attr: bitstring,issuerDID_2: DID) = verify(cred_2,getPubKey(getIssuerFromVC(cred_2))) in
    {275}if (asserted_attr = getAttrFromRule(acr)) then
    {276}new access_token_2: bitstring;
    {278}let sk_32: SecretKey = ssk_6 in
    {277}let msg_24: bitstring = (subjectDID,access_token_2) in
    {279}let msg_accessToken_2: bitstring = aenc(sign(msg_24,sk_32),spk_p_2) in
    {263}let msg_vp_2: bitstring = x_16 in
    {251}let msg_uri_2: bitstring = x_15 in
    {240}let msg_handshakeReq_6: bitstring = x_14 in
    {280}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_6,msg_handshakeResp_6,msg_uri_2,msg_rule_2,msg_vp_2,msg_accessToken_2);
    {281}out(h, msg_accessToken_2);
    {282}phase 1;
    {238}let talksOnlyToHonest_4: bool = true in
    {283}if talksOnlyToHonest_4 then
    (
        {284}event auth_VerifierCompletesProtocol(msg_handshakeReq_6,msg_handshakeResp_6,msg_uri_2,msg_rule_2,msg_vp_2)
    ) | (
        {285}out(ch(n_p_6), n_p_fromVerifier)
    ) | (
        {286}out(chR(acr), rule_fromVerifier)
    ) | (
        {287}out(ch((n_c_2,acr)), credRequest_fromVerifier)
    ) | (
        {288}out(ch(unauth_vp), unauth_vp_fromVerifier)
    ) | (
        {289}out(ch((n'_c,recipientDID_6,cred_2)), vp_fromVerifier)
    ) | (
        {290}out(chC(cred_2), cred_fromVerifier)
    ) | (
        {291}out(ch(access_token_2), access_token_fromVerifier)
    )
) | (
    {292}!
    {295}in(h, x_17: bitstring);
    {293}let sk_33: SecretKey = sk_verifier in
    {297}let sgndMsg_3: bitstring = adec(x_17,sk_33) in
    {299}let (unauth_n_p_3: bitstring,unauth_spk_p_3: PublicKey) = getMsg(sgndMsg_3) in
    {300}let (n_p_7: bitstring,spk_p_3: PublicKey) = auth(sgndMsg_3,unauth_spk_p_3) in
    {301}new ssk_7: SecretKey;
    {302}new n_v_3: bitstring;
    {303}let msg_26: bitstring = (n_p_7,n_v_3,pk(ssk_7)) in
    {304}let msg_handshakeResp_7: bitstring = aenc(sign(msg_26,sk_33),spk_p_3) in
    {305}out(h, msg_handshakeResp_7);
    {306}in(h, x_18: bitstring);
    {308}let sk_34: SecretKey = ssk_7 in
    {309}let msg_27: bitstring = auth(adec(x_18,sk_34),spk_p_3) in
    {310}let (n'_v_1: bitstring,u_1: bitstring) = msg_27 in
    {311}if (n'_v_1 = n_v_3) then
    {312}if (u_1 = uri) then
    {313}new n_c_3: bitstring;
    {315}let sk_35: SecretKey = ssk_7 in
    {314}let msg_28: bitstring = (n_c_3,acr_otherAgent) in
    {316}let msg_rule_3: bitstring = aenc(sign(msg_28,sk_35),spk_p_3) in
    {317}out(h, msg_rule_3);
    {318}in(h, x_19: bitstring);
    {320}let sk_36: SecretKey = ssk_7 in
    {321}let unauth_vp_1: bitstring = auth(adec(x_19,sk_36),spk_p_3) in
    {322}let (unauth_n'_c_1: bitstring,unauth_recipient_1: DID,unauth_cred_1: VC) = getMsg(unauth_vp_1) in
    {323}let cred_subject_1: DID = getSubjectFromVC(unauth_cred_1) in
    {324}if (cred_subject_1 = getSubjectFromRule(acr_otherAgent)) then
    {325}let pk_subject_1: PublicKey = getPubKey(cred_subject_1) in
    {326}let (n'_c_1: bitstring,recipientDID_7: DID,cred_3: VC) = auth(unauth_vp_1,pk_subject_1) in
    {327}if (recipientDID_7 = genDID(pk(sk_33),sk_33)) then
    {328}if (n'_c_1 = n_c_3) then
    {329}if (getIssuerFromVC(cred_3) = getIssuerFromRule(acr_otherAgent)) then
    {330}let (subjectDID_1: DID,asserted_attr_1: bitstring,issuerDID_3: DID) = verify(cred_3,getPubKey(getIssuerFromVC(cred_3))) in
    {331}if (asserted_attr_1 = getAttrFromRule(acr_otherAgent)) then
    {332}new access_token_3: bitstring;
    {334}let sk_37: SecretKey = ssk_7 in
    {333}let msg_29: bitstring = (subjectDID_1,access_token_3) in
    {335}let msg_accessToken_3: bitstring = aenc(sign(msg_29,sk_37),spk_p_3) in
    {319}let msg_vp_3: bitstring = x_19 in
    {307}let msg_uri_3: bitstring = x_18 in
    {296}let msg_handshakeReq_7: bitstring = x_17 in
    {336}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_7,msg_handshakeResp_7,msg_uri_3,msg_rule_3,msg_vp_3,msg_accessToken_3);
    {337}out(h, msg_accessToken_3);
    {338}phase 1;
    {294}let talksOnlyToHonest_5: bool = false in
    {339}if talksOnlyToHonest_5 then
    (
        {340}event auth_VerifierCompletesProtocol(msg_handshakeReq_7,msg_handshakeResp_7,msg_uri_3,msg_rule_3,msg_vp_3)
    ) | (
        {341}out(ch(n_p_7), n_p_fromVerifier)
    ) | (
        {342}out(chR(acr_otherAgent), rule_fromVerifier)
    ) | (
        {343}out(ch((n_c_3,acr_otherAgent)), credRequest_fromVerifier)
    ) | (
        {344}out(ch(unauth_vp_1), unauth_vp_fromVerifier)
    ) | (
        {345}out(ch((n'_c_1,recipientDID_7,cred_3)), vp_fromVerifier)
    ) | (
        {346}out(chC(cred_3), cred_fromVerifier)
    ) | (
        {347}out(ch(access_token_3), access_token_fromVerifier)
    )
) | (
    {348}phase 1;
    {349}out(h, sk_prover);
    {350}out(h, sk_verifier);
    {351}out(h, sk_issuer);
    (
        {352}!
        {357}in(h, x_20: bitstring);
        {353}let sk_38: SecretKey = sk_issuer in
        {359}let sgndMsg_4: bitstring = adec(x_20,sk_38) in
        {361}let (unauth_n_p_4: bitstring,unauth_spk_p_4: PublicKey) = getMsg(sgndMsg_4) in
        {362}let (n_p_8: bitstring,spk_p_4: PublicKey) = auth(sgndMsg_4,unauth_spk_p_4) in
        {363}new ssk_8: SecretKey;
        {364}new n_i_4: bitstring;
        {365}let msg_31: bitstring = (n_p_8,n_i_4,pk(ssk_8)) in
        {366}let msg_handshakeResp_8: bitstring = aenc(sign(msg_31,sk_38),spk_p_4) in
        {367}out(h, msg_handshakeResp_8);
        {368}in(h, x_21: bitstring);
        {370}let sk_39: SecretKey = ssk_8 in
        {371}let msg_32: bitstring = auth(adec(x_21,sk_39),spk_p_4) in
        {372}let (unauth_n'_i_2: bitstring,unauth_proverDID_2: DID,unauth_recipientDID_2: DID) = getMsg(msg_32) in
        {373}let pk_p_2: PublicKey = getPubKey(unauth_proverDID_2) in
        {374}let (n'_i_2: bitstring,proverDID_2: DID,recipientDID_8: DID) = auth(msg_32,pk_p_2) in
        {355}let expectedDID_2: DID = genDID(pk(sk_prover),sk_prover) in
        {375}if (proverDID_2 = expectedDID_2) then
        {376}if (n'_i_2 = n_i_4) then
        {377}if (recipientDID_8 = genDID(pk(sk_38),sk_38)) then
        {379}new n_issuing_4: bitstring;
        {381}let sk_40: SecretKey = ssk_8 in
        {354}let attr_3: bitstring = attr in
        {378}let cred_4: VC = issueVC(proverDID_2,attr_3,sk_38) in
        {380}let msg_33: bitstring = (cred_4,proverDID_2,n_issuing_4) in
        {382}let msg_cred_2: bitstring = aenc(sign(msg_33,sk_40),spk_p_4) in
        {383}out(h, msg_cred_2)
    ) | (
        {384}!
        {389}in(h, x_22: bitstring);
        {385}let sk_41: SecretKey = sk_issuer in
        {391}let sgndMsg_5: bitstring = adec(x_22,sk_41) in
        {393}let (unauth_n_p_5: bitstring,unauth_spk_p_5: PublicKey) = getMsg(sgndMsg_5) in
        {394}let (n_p_9: bitstring,spk_p_5: PublicKey) = auth(sgndMsg_5,unauth_spk_p_5) in
        {395}new ssk_9: SecretKey;
        {396}new n_i_5: bitstring;
        {397}let msg_35: bitstring = (n_p_9,n_i_5,pk(ssk_9)) in
        {398}let msg_handshakeResp_9: bitstring = aenc(sign(msg_35,sk_41),spk_p_5) in
        {399}out(h, msg_handshakeResp_9);
        {400}in(h, x_23: bitstring);
        {402}let sk_42: SecretKey = ssk_9 in
        {403}let msg_36: bitstring = auth(adec(x_23,sk_42),spk_p_5) in
        {404}let (unauth_n'_i_3: bitstring,unauth_proverDID_3: DID,unauth_recipientDID_3: DID) = getMsg(msg_36) in
        {405}let pk_p_3: PublicKey = getPubKey(unauth_proverDID_3) in
        {406}let (n'_i_3: bitstring,proverDID_3: DID,recipientDID_9: DID) = auth(msg_36,pk_p_3) in
        {387}let expectedDID_3: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
        {407}if (proverDID_3 = expectedDID_3) then
        {408}if (n'_i_3 = n_i_5) then
        {409}if (recipientDID_9 = genDID(pk(sk_41),sk_41)) then
        {411}new n_issuing_5: bitstring;
        {413}let sk_43: SecretKey = ssk_9 in
        {386}let attr_4: bitstring = attr in
        {410}let cred_5: VC = issueVC(proverDID_3,attr_4,sk_41) in
        {412}let msg_37: bitstring = (cred_5,proverDID_3,n_issuing_5) in
        {414}let msg_cred_3: bitstring = aenc(sign(msg_37,sk_43),spk_p_5) in
        {415}out(h, msg_cred_3)
    ) | (
        {416}!
        {418}let issuerDID_4: DID = genDID(pk(sk_issuer),sk_issuer) in
        {421}let pk_i_2: PublicKey = getPubKey(issuerDID_4) in
        {422}new ssk_10: SecretKey;
        {423}new n_p_10: bitstring;
        {425}let sk_45: SecretKey = ssk_10 in
        {424}let msg_38: bitstring = (n_p_10,pk(ssk_10)) in
        {426}let msg_handshakeReq_10: bitstring = aenc(sign(msg_38,sk_45),pk_i_2) in
        {427}out(h, msg_handshakeReq_10);
        {428}in(h, x_24: bitstring);
        {430}let sk_46: SecretKey = ssk_10 in
        {431}let msg_39: bitstring = auth(adec(x_24,sk_46),pk_i_2) in
        {432}let (n'_p_4: bitstring,n_i_6: bitstring,spk_i_2: PublicKey) = msg_39 in
        {433}if (n'_p_4 = n_p_10) then
        {435}let sk_47: SecretKey = ssk_10 in
        {417}let sk_44: SecretKey = sk_prover in
        {434}let msg_40: bitstring = sign((n_i_6,genDID(pk(sk_44),sk_44),issuerDID_4),sk_44) in
        {436}let msg_did_6: bitstring = aenc(sign(msg_40,sk_47),spk_i_2) in
        {437}out(h, msg_did_6);
        {438}in(h, x_25: bitstring);
        {440}let sk_48: SecretKey = ssk_10 in
        {441}let (credential_2: VC,recipientDID_10: DID,n_issuing_6: bitstring) = auth(adec(x_25,sk_48),spk_i_2) in
        {442}if (recipientDID_10 = genDID(pk(sk_44),sk_44)) then
        (
            {443}!
            {419}let verifierDID_2: DID = genDID(pk(sk_verifier),sk_verifier) in
            {444}let pk_v_2: PublicKey = getPubKey(verifierDID_2) in
            {445}new ssk_11: SecretKey;
            {446}new n_p_11: bitstring;
            {448}let sk_49: SecretKey = ssk_11 in
            {447}let msg_41: bitstring = (n_p_11,pk(ssk_11)) in
            {449}let msg_handshakeReq_11: bitstring = aenc(sign(msg_41,sk_49),pk_v_2) in
            {450}out(h, msg_handshakeReq_11);
            {451}in(h, x_26: bitstring);
            {453}let sk_50: SecretKey = ssk_11 in
            {454}let msg_42: bitstring = auth(adec(x_26,sk_50),pk_v_2) in
            {455}let (n'_p_5: bitstring,n_v_4: bitstring,spk_v_2: PublicKey) = msg_42 in
            {456}if (n'_p_5 = n_p_11) then
            {458}let sk_51: SecretKey = ssk_11 in
            {457}let msg_43: bitstring = (n_v_4,uri) in
            {459}let msg_uri_4: bitstring = aenc(sign(msg_43,sk_51),spk_v_2) in
            {460}out(h, msg_uri_4);
            {461}in(h, x_27: bitstring);
            {463}let sk_52: SecretKey = ssk_11 in
            {464}let msg_44: bitstring = auth(adec(x_27,sk_52),spk_v_2) in
            {465}let (n_c_4: bitstring,rule_2: ACR) = msg_44 in
            {466}if (getVcAsTuple(credential_2) = getRuleAsTuple(rule_2)) then
            {468}let sk_53: SecretKey = ssk_11 in
            {467}let vp_2: bitstring = sign((n_c_4,verifierDID_2,credential_2),sk_44) in
            {469}let msg_vp_4: bitstring = aenc(sign(vp_2,sk_53),spk_v_2) in
            {462}let msg_rule_4: bitstring = x_27 in
            {452}let msg_handshakeResp_11: bitstring = x_26 in
            {470}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_11,msg_handshakeResp_11,msg_uri_4,msg_rule_4,msg_vp_4);
            {471}out(h, msg_vp_4);
            {472}in(h, x_28: bitstring);
            {474}let sk_54: SecretKey = ssk_11 in
            {475}let (access_token_4: bitstring,recipientDID_11: DID) = auth(adec(x_28,sk_54),spk_v_2) in
            {476}if (recipientDID_11 = genDID(pk(sk_44),sk_44)) then
            0
        ) | (
            0
        )
    ) | (
        {477}!
        {479}let issuerDID_5: DID = genDID(pk(sk_issuer),sk_issuer) in
        {482}let pk_i_3: PublicKey = getPubKey(issuerDID_5) in
        {483}new ssk_12: SecretKey;
        {484}new n_p_12: bitstring;
        {486}let sk_56: SecretKey = ssk_12 in
        {485}let msg_45: bitstring = (n_p_12,pk(ssk_12)) in
        {487}let msg_handshakeReq_12: bitstring = aenc(sign(msg_45,sk_56),pk_i_3) in
        {488}out(h, msg_handshakeReq_12);
        {489}in(h, x_29: bitstring);
        {491}let sk_57: SecretKey = ssk_12 in
        {492}let msg_46: bitstring = auth(adec(x_29,sk_57),pk_i_3) in
        {493}let (n'_p_6: bitstring,n_i_7: bitstring,spk_i_3: PublicKey) = msg_46 in
        {494}if (n'_p_6 = n_p_12) then
        {496}let sk_58: SecretKey = ssk_12 in
        {478}let sk_55: SecretKey = sk_prover in
        {495}let msg_47: bitstring = sign((n_i_7,genDID(pk(sk_55),sk_55),issuerDID_5),sk_55) in
        {497}let msg_did_7: bitstring = aenc(sign(msg_47,sk_58),spk_i_3) in
        {498}out(h, msg_did_7);
        {499}in(h, x_30: bitstring);
        {501}let sk_59: SecretKey = ssk_12 in
        {502}let (credential_3: VC,recipientDID_12: DID,n_issuing_7: bitstring) = auth(adec(x_30,sk_59),spk_i_3) in
        {503}if (recipientDID_12 = genDID(pk(sk_55),sk_55)) then
        (
            {504}!
            {480}let verifierDID_3: DID = genDID(pk(sk_otherAgent),sk_otherAgent) in
            {505}let pk_v_3: PublicKey = getPubKey(verifierDID_3) in
            {506}new ssk_13: SecretKey;
            {507}new n_p_13: bitstring;
            {509}let sk_60: SecretKey = ssk_13 in
            {508}let msg_48: bitstring = (n_p_13,pk(ssk_13)) in
            {510}let msg_handshakeReq_13: bitstring = aenc(sign(msg_48,sk_60),pk_v_3) in
            {511}out(h, msg_handshakeReq_13);
            {512}in(h, x_31: bitstring);
            {514}let sk_61: SecretKey = ssk_13 in
            {515}let msg_49: bitstring = auth(adec(x_31,sk_61),pk_v_3) in
            {516}let (n'_p_7: bitstring,n_v_5: bitstring,spk_v_3: PublicKey) = msg_49 in
            {517}if (n'_p_7 = n_p_13) then
            {519}let sk_62: SecretKey = ssk_13 in
            {518}let msg_50: bitstring = (n_v_5,uri) in
            {520}let msg_uri_5: bitstring = aenc(sign(msg_50,sk_62),spk_v_3) in
            {521}out(h, msg_uri_5);
            {522}in(h, x_32: bitstring);
            {524}let sk_63: SecretKey = ssk_13 in
            {525}let msg_51: bitstring = auth(adec(x_32,sk_63),spk_v_3) in
            {526}let (n_c_5: bitstring,rule_3: ACR) = msg_51 in
            {527}if (getVcAsTuple(credential_3) = getRuleAsTuple(rule_3)) then
            {529}let sk_64: SecretKey = ssk_13 in
            {528}let vp_3: bitstring = sign((n_c_5,verifierDID_3,credential_3),sk_55) in
            {530}let msg_vp_5: bitstring = aenc(sign(vp_3,sk_64),spk_v_3) in
            {523}let msg_rule_5: bitstring = x_32 in
            {513}let msg_handshakeResp_13: bitstring = x_31 in
            {531}event auth_ProverSendsLastMessageToVerifier(msg_handshakeReq_13,msg_handshakeResp_13,msg_uri_5,msg_rule_5,msg_vp_5);
            {532}out(h, msg_vp_5);
            {533}in(h, x_33: bitstring);
            {535}let sk_65: SecretKey = ssk_13 in
            {536}let (access_token_5: bitstring,recipientDID_13: DID) = auth(adec(x_33,sk_65),spk_v_3) in
            {537}if (recipientDID_13 = genDID(pk(sk_55),sk_55)) then
            0
        ) | (
            0
        )
    ) | (
        {538}!
        {541}in(h, x_34: bitstring);
        {539}let sk_66: SecretKey = sk_verifier in
        {543}let sgndMsg_6: bitstring = adec(x_34,sk_66) in
        {545}let (unauth_n_p_6: bitstring,unauth_spk_p_6: PublicKey) = getMsg(sgndMsg_6) in
        {546}let (n_p_14: bitstring,spk_p_6: PublicKey) = auth(sgndMsg_6,unauth_spk_p_6) in
        {547}new ssk_14: SecretKey;
        {548}new n_v_6: bitstring;
        {549}let msg_53: bitstring = (n_p_14,n_v_6,pk(ssk_14)) in
        {550}let msg_handshakeResp_14: bitstring = aenc(sign(msg_53,sk_66),spk_p_6) in
        {551}out(h, msg_handshakeResp_14);
        {552}in(h, x_35: bitstring);
        {554}let sk_67: SecretKey = ssk_14 in
        {555}let msg_54: bitstring = auth(adec(x_35,sk_67),spk_p_6) in
        {556}let (n'_v_2: bitstring,u_2: bitstring) = msg_54 in
        {557}if (n'_v_2 = n_v_6) then
        {558}if (u_2 = uri) then
        {559}new n_c_6: bitstring;
        {561}let sk_68: SecretKey = ssk_14 in
        {560}let msg_55: bitstring = (n_c_6,acr) in
        {562}let msg_rule_6: bitstring = aenc(sign(msg_55,sk_68),spk_p_6) in
        {563}out(h, msg_rule_6);
        {564}in(h, x_36: bitstring);
        {566}let sk_69: SecretKey = ssk_14 in
        {567}let unauth_vp_2: bitstring = auth(adec(x_36,sk_69),spk_p_6) in
        {568}let (unauth_n'_c_2: bitstring,unauth_recipient_2: DID,unauth_cred_2: VC) = getMsg(unauth_vp_2) in
        {569}let cred_subject_2: DID = getSubjectFromVC(unauth_cred_2) in
        {570}if (cred_subject_2 = getSubjectFromRule(acr)) then
        {571}let pk_subject_2: PublicKey = getPubKey(cred_subject_2) in
        {572}let (n'_c_2: bitstring,recipientDID_14: DID,cred_6: VC) = auth(unauth_vp_2,pk_subject_2) in
        {573}if (recipientDID_14 = genDID(pk(sk_66),sk_66)) then
        {574}if (n'_c_2 = n_c_6) then
        {575}if (getIssuerFromVC(cred_6) = getIssuerFromRule(acr)) then
        {576}let (subjectDID_2: DID,asserted_attr_2: bitstring,issuerDID_6: DID) = verify(cred_6,getPubKey(getIssuerFromVC(cred_6))) in
        {577}if (asserted_attr_2 = getAttrFromRule(acr)) then
        {578}new access_token_6: bitstring;
        {580}let sk_70: SecretKey = ssk_14 in
        {579}let msg_56: bitstring = (subjectDID_2,access_token_6) in
        {581}let msg_accessToken_6: bitstring = aenc(sign(msg_56,sk_70),spk_p_6) in
        {565}let msg_vp_6: bitstring = x_36 in
        {553}let msg_uri_6: bitstring = x_35 in
        {542}let msg_handshakeReq_14: bitstring = x_34 in
        {582}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_14,msg_handshakeResp_14,msg_uri_6,msg_rule_6,msg_vp_6,msg_accessToken_6);
        {583}out(h, msg_accessToken_6)
    ) | (
        {584}!
        {587}in(h, x_37: bitstring);
        {585}let sk_71: SecretKey = sk_verifier in
        {589}let sgndMsg_7: bitstring = adec(x_37,sk_71) in
        {591}let (unauth_n_p_7: bitstring,unauth_spk_p_7: PublicKey) = getMsg(sgndMsg_7) in
        {592}let (n_p_15: bitstring,spk_p_7: PublicKey) = auth(sgndMsg_7,unauth_spk_p_7) in
        {593}new ssk_15: SecretKey;
        {594}new n_v_7: bitstring;
        {595}let msg_58: bitstring = (n_p_15,n_v_7,pk(ssk_15)) in
        {596}let msg_handshakeResp_15: bitstring = aenc(sign(msg_58,sk_71),spk_p_7) in
        {597}out(h, msg_handshakeResp_15);
        {598}in(h, x_38: bitstring);
        {600}let sk_72: SecretKey = ssk_15 in
        {601}let msg_59: bitstring = auth(adec(x_38,sk_72),spk_p_7) in
        {602}let (n'_v_3: bitstring,u_3: bitstring) = msg_59 in
        {603}if (n'_v_3 = n_v_7) then
        {604}if (u_3 = uri) then
        {605}new n_c_7: bitstring;
        {607}let sk_73: SecretKey = ssk_15 in
        {606}let msg_60: bitstring = (n_c_7,acr_otherAgent) in
        {608}let msg_rule_7: bitstring = aenc(sign(msg_60,sk_73),spk_p_7) in
        {609}out(h, msg_rule_7);
        {610}in(h, x_39: bitstring);
        {612}let sk_74: SecretKey = ssk_15 in
        {613}let unauth_vp_3: bitstring = auth(adec(x_39,sk_74),spk_p_7) in
        {614}let (unauth_n'_c_3: bitstring,unauth_recipient_3: DID,unauth_cred_3: VC) = getMsg(unauth_vp_3) in
        {615}let cred_subject_3: DID = getSubjectFromVC(unauth_cred_3) in
        {616}if (cred_subject_3 = getSubjectFromRule(acr_otherAgent)) then
        {617}let pk_subject_3: PublicKey = getPubKey(cred_subject_3) in
        {618}let (n'_c_3: bitstring,recipientDID_15: DID,cred_7: VC) = auth(unauth_vp_3,pk_subject_3) in
        {619}if (recipientDID_15 = genDID(pk(sk_71),sk_71)) then
        {620}if (n'_c_3 = n_c_7) then
        {621}if (getIssuerFromVC(cred_7) = getIssuerFromRule(acr_otherAgent)) then
        {622}let (subjectDID_3: DID,asserted_attr_3: bitstring,issuerDID_7: DID) = verify(cred_7,getPubKey(getIssuerFromVC(cred_7))) in
        {623}if (asserted_attr_3 = getAttrFromRule(acr_otherAgent)) then
        {624}new access_token_7: bitstring;
        {626}let sk_75: SecretKey = ssk_15 in
        {625}let msg_61: bitstring = (subjectDID_3,access_token_7) in
        {627}let msg_accessToken_7: bitstring = aenc(sign(msg_61,sk_75),spk_p_7) in
        {611}let msg_vp_7: bitstring = x_39 in
        {599}let msg_uri_7: bitstring = x_38 in
        {588}let msg_handshakeReq_15: bitstring = x_37 in
        {628}event auth_VerifierSendsLastMessageToProver(msg_handshakeReq_15,msg_handshakeResp_15,msg_uri_7,msg_rule_7,msg_vp_7,msg_accessToken_7);
        {629}out(h, msg_accessToken_7)
    )
)

-- Query not attacker_p1(n_p_fromHolder[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(n_p_fromHolder[])
goal reachable: attacker_p1(n_p_fromHolder[])

Derivation:
Abbreviations:
n_p_16 = n_p_2[!1 = @sid]
ssk_16 = ssk_2[!1 = @sid]
n_i_8 = n_i[x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
ssk_17 = ssk[x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
n_issuing_8 = n_issuing[x_1 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)),x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]

1. The message sk_issuer[] may be sent to the attacker in phase 1 at output {351}.
attacker_p1(sk_issuer[]).

2. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) may be sent to the attacker at output {95}.
attacker(aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[]))).

3. By 2, the attacker may know aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])).
So the attacker may know aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) in phase 1.
attacker_p1(aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[]))).

4. By 3, the attacker may know aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) in phase 1.
By 1, the attacker may know sk_issuer[] in phase 1.
Using the function adec the attacker may obtain sign((n_p_16,pk(ssk_16)),ssk_16) in phase 1.
attacker_p1(sign((n_p_16,pk(ssk_16)),ssk_16)).

5. By 4, the attacker may know sign((n_p_16,pk(ssk_16)),ssk_16) in phase 1.
Using the function getMsg the attacker may obtain (n_p_16,pk(ssk_16)) in phase 1.
attacker_p1((n_p_16,pk(ssk_16))).

6. By 5, the attacker may know (n_p_16,pk(ssk_16)) in phase 1.
Using the function 1-proj-2-tuple the attacker may obtain n_p_16 in phase 1.
attacker_p1(n_p_16).

7. By 6, the attacker may know n_p_16 in phase 1.
Using the function ch the attacker may obtain ch(n_p_16) in phase 1.
attacker_p1(ch(n_p_16)).

8. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) that the attacker may have by 2 may be received at input {17}.
So the message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) may be sent to the attacker at output {26}.
attacker(aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16))).

9. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 8 may be received at input {96}.
So the message aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)) may be sent to the attacker at output {105}.
attacker(aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17))).

10. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) that the attacker may have by 2 may be received at input {17}.
The message aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)) that the attacker may have by 9 may be received at input {27}.
So the message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) may be sent to the attacker at output {42}.
attacker(aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16))).

11. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 8 may be received at input {96}.
The message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) that the attacker may have by 10 may be received at input {106}.
So the message n_p_fromHolder[] may be sent on channel ch(n_p_16) in phase 1 at output {156}.
mess_p1(ch(n_p_16),n_p_fromHolder[]).

12. By 7, the attacker may have the channel ch(n_p_16) in phase 1.
By 11, the message n_p_fromHolder[] in phase 1 may be sent on this channel.
So the attacker may obtain the message n_p_fromHolder[] in phase 1 by listening on this channel.
attacker_p1(n_p_fromHolder[]).

13. By 12, attacker_p1(n_p_fromHolder[]).
The goal is reached, represented in the following fact:
attacker_p1(n_p_fromHolder[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_prover: SecretKey creating sk_prover_1 at {1}

new sk_verifier: SecretKey creating sk_verifier_1 at {2}

new sk_issuer: SecretKey creating sk_issuer_1 at {3}

out(h, ~M) with ~M = pk(sk_issuer_1) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_verifier_1) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_prover_1) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_prover_1),sk_prover_1) at {7}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_verifier_1),sk_verifier_1) at {8}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_issuer_1),sk_issuer_1) at {9}

new ssk_2: SecretKey creating ssk_16 at {90} in copy a

new n_p_2: bitstring creating n_p_16 at {91} in copy a

out(h, ~M_6) with ~M_6 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer_1)) at {95} in copy a

in(h, ~M_6) with ~M_6 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer_1)) at {17} in copy a_1

new ssk: SecretKey creating ssk_17 at {22} in copy a_1

new n_i: bitstring creating n_i_8 at {23} in copy a_1

out(h, ~M_7) with ~M_7 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer_1),pk(ssk_16)) at {26} in copy a_1

in(h, ~M_7) with ~M_7 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer_1),pk(ssk_16)) at {96} in copy a

out(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_16),pk(ssk_17)) at {105} in copy a

in(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_16),pk(ssk_17)) at {27} in copy a_1

new n_issuing: bitstring creating n_issuing_8 at {38} in copy a_1

out(h, ~M_9) with ~M_9 = aenc(sign((issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1),n_issuing_8),ssk_17),pk(ssk_16)) at {42} in copy a_1

in(h, ~M_9) with ~M_9 = aenc(sign((issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1),n_issuing_8),ssk_17),pk(ssk_16)) at {106} in copy a

out(h, ~M_10) with ~M_10 = sk_prover_1 at {349}

out(h, ~M_11) with ~M_11 = sk_verifier_1 at {350}

out(h, ~M_12) with ~M_12 = sk_issuer_1 at {351}

out(ch(n_p_16), ~M_13) with ~M_13 = n_p_fromHolder at {156} in copy a

out(ch(n_p_16), ~M_14) with ~M_14 = n_p_fromIssuer at {45} in copy a_1

The attacker has the message ~M_13 = n_p_fromHolder in phase 1.
A trace has been found.
RESULT not attacker_p1(n_p_fromHolder[]) is false.
-- Query not attacker_p1(n_i_fromHolder[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(n_i_fromHolder[])
RESULT not attacker_p1(n_i_fromHolder[]) is true.
-- Query not attacker_p1(providingDID_fromHolder[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(providingDID_fromHolder[])
RESULT not attacker_p1(providingDID_fromHolder[]) is true.
-- Query not attacker_p1(n_p_fromIssuer[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(n_p_fromIssuer[])
goal reachable: attacker_p1(n_p_fromIssuer[])

Derivation:
Abbreviations:
n_p_16 = n_p_2[!1 = @sid]
ssk_16 = ssk_2[!1 = @sid]
n_i_8 = n_i[x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
ssk_17 = ssk[x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]

1. The message sk_issuer[] may be sent to the attacker in phase 1 at output {351}.
attacker_p1(sk_issuer[]).

2. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) may be sent to the attacker at output {95}.
attacker(aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[]))).

3. By 2, the attacker may know aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])).
So the attacker may know aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) in phase 1.
attacker_p1(aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[]))).

4. By 3, the attacker may know aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) in phase 1.
By 1, the attacker may know sk_issuer[] in phase 1.
Using the function adec the attacker may obtain sign((n_p_16,pk(ssk_16)),ssk_16) in phase 1.
attacker_p1(sign((n_p_16,pk(ssk_16)),ssk_16)).

5. By 4, the attacker may know sign((n_p_16,pk(ssk_16)),ssk_16) in phase 1.
Using the function getMsg the attacker may obtain (n_p_16,pk(ssk_16)) in phase 1.
attacker_p1((n_p_16,pk(ssk_16))).

6. By 5, the attacker may know (n_p_16,pk(ssk_16)) in phase 1.
Using the function 1-proj-2-tuple the attacker may obtain n_p_16 in phase 1.
attacker_p1(n_p_16).

7. By 6, the attacker may know n_p_16 in phase 1.
Using the function ch the attacker may obtain ch(n_p_16) in phase 1.
attacker_p1(ch(n_p_16)).

8. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) that the attacker may have by 2 may be received at input {17}.
So the message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) may be sent to the attacker at output {26}.
attacker(aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16))).

9. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 8 may be received at input {96}.
So the message aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)) may be sent to the attacker at output {105}.
attacker(aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17))).

10. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) that the attacker may have by 2 may be received at input {17}.
The message aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)) that the attacker may have by 9 may be received at input {27}.
So the message n_p_fromIssuer[] may be sent on channel ch(n_p_16) in phase 1 at output {45}.
mess_p1(ch(n_p_16),n_p_fromIssuer[]).

11. By 7, the attacker may have the channel ch(n_p_16) in phase 1.
By 10, the message n_p_fromIssuer[] in phase 1 may be sent on this channel.
So the attacker may obtain the message n_p_fromIssuer[] in phase 1 by listening on this channel.
attacker_p1(n_p_fromIssuer[]).

12. By 11, attacker_p1(n_p_fromIssuer[]).
The goal is reached, represented in the following fact:
attacker_p1(n_p_fromIssuer[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_prover: SecretKey creating sk_prover_1 at {1}

new sk_verifier: SecretKey creating sk_verifier_1 at {2}

new sk_issuer: SecretKey creating sk_issuer_1 at {3}

out(h, ~M) with ~M = pk(sk_issuer_1) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_verifier_1) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_prover_1) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_prover_1),sk_prover_1) at {7}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_verifier_1),sk_verifier_1) at {8}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_issuer_1),sk_issuer_1) at {9}

new ssk_2: SecretKey creating ssk_16 at {90} in copy a

new n_p_2: bitstring creating n_p_16 at {91} in copy a

out(h, ~M_6) with ~M_6 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer_1)) at {95} in copy a

in(h, ~M_6) with ~M_6 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer_1)) at {17} in copy a_1

new ssk: SecretKey creating ssk_17 at {22} in copy a_1

new n_i: bitstring creating n_i_8 at {23} in copy a_1

out(h, ~M_7) with ~M_7 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer_1),pk(ssk_16)) at {26} in copy a_1

in(h, ~M_7) with ~M_7 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer_1),pk(ssk_16)) at {96} in copy a

out(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_16),pk(ssk_17)) at {105} in copy a

in(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_16),pk(ssk_17)) at {27} in copy a_1

new n_issuing: bitstring creating n_issuing_8 at {38} in copy a_1

out(h, ~M_9) with ~M_9 = aenc(sign((issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1),n_issuing_8),ssk_17),pk(ssk_16)) at {42} in copy a_1

out(h, ~M_10) with ~M_10 = sk_prover_1 at {349}

out(h, ~M_11) with ~M_11 = sk_verifier_1 at {350}

out(h, ~M_12) with ~M_12 = sk_issuer_1 at {351}

out(ch(n_p_16), ~M_13) with ~M_13 = n_p_fromIssuer at {45} in copy a_1

The attacker has the message ~M_13 = n_p_fromIssuer in phase 1.
A trace has been found.
RESULT not attacker_p1(n_p_fromIssuer[]) is false.
-- Query not attacker_p1(credIssuing_fromIssuer[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(credIssuing_fromIssuer[])
RESULT not attacker_p1(credIssuing_fromIssuer[]) is true.
-- Query not attacker_p1(n_p_fromProver[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(n_p_fromProver[])
RESULT not attacker_p1(n_p_fromProver[]) is true.
-- Query not attacker_p1(unsigned_vp_fromProver[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(unsigned_vp_fromProver[])
RESULT not attacker_p1(unsigned_vp_fromProver[]) is true.
-- Query not attacker_p1(vp_fromProver[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(vp_fromProver[])
RESULT not attacker_p1(vp_fromProver[]) is true.
-- Query not attacker_p1(cred_fromProver[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(cred_fromProver[])
RESULT not attacker_p1(cred_fromProver[]) is true.
-- Query not attacker_p1(access_token_fromProver[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(access_token_fromProver[])
RESULT not attacker_p1(access_token_fromProver[]) is true.
-- Query not attacker_p1(n_p_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(n_p_fromVerifier[])
goal reachable: attacker_p1(n_p_fromVerifier[])

Derivation:
Abbreviations:
n_p_16 = n_p_2[!1 = @sid]
ssk_16 = ssk_2[!1 = @sid]
n_i_8 = n_i[x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
ssk_17 = ssk[x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
n_issuing_8 = n_issuing[x_1 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)),x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
n_p_17 = n_p_3[!2 = @sid_2,x_5 = aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
ssk_18 = ssk_3[!2 = @sid_2,x_5 = aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
n_v_8 = n_v_2[x_14 = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])),!1 = @sid_3]
ssk_19 = ssk_6[x_14 = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])),!1 = @sid_3]
n_c_8 = n_c_2[x_15 = aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)),x_14 = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])),!1 = @sid_3]

1. The message sk_verifier[] may be sent to the attacker in phase 1 at output {350}.
attacker_p1(sk_verifier[]).

2. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) may be sent to the attacker at output {95}.
attacker(aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[]))).

3. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) that the attacker may have by 2 may be received at input {17}.
So the message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) may be sent to the attacker at output {26}.
attacker(aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16))).

4. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 3 may be received at input {96}.
So the message aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)) may be sent to the attacker at output {105}.
attacker(aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17))).

5. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) that the attacker may have by 2 may be received at input {17}.
The message aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)) that the attacker may have by 4 may be received at input {27}.
So the message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) may be sent to the attacker at output {42}.
attacker(aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16))).

6. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 3 may be received at input {96}.
The message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) that the attacker may have by 5 may be received at input {106}.
So the message aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) may be sent to the attacker at output {118}.
attacker(aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[]))).

7. By 6, the attacker may know aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])).
So the attacker may know aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) in phase 1.
attacker_p1(aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[]))).

8. By 7, the attacker may know aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) in phase 1.
By 1, the attacker may know sk_verifier[] in phase 1.
Using the function adec the attacker may obtain sign((n_p_17,pk(ssk_18)),ssk_18) in phase 1.
attacker_p1(sign((n_p_17,pk(ssk_18)),ssk_18)).

9. By 8, the attacker may know sign((n_p_17,pk(ssk_18)),ssk_18) in phase 1.
Using the function getMsg the attacker may obtain (n_p_17,pk(ssk_18)) in phase 1.
attacker_p1((n_p_17,pk(ssk_18))).

10. By 9, the attacker may know (n_p_17,pk(ssk_18)) in phase 1.
Using the function 1-proj-2-tuple the attacker may obtain n_p_17 in phase 1.
attacker_p1(n_p_17).

11. By 10, the attacker may know n_p_17 in phase 1.
Using the function ch the attacker may obtain ch(n_p_17) in phase 1.
attacker_p1(ch(n_p_17)).

12. The message aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) that the attacker may have by 6 may be received at input {239}.
So the message aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier[]),pk(ssk_18)) may be sent to the attacker at output {249}.
attacker(aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier[]),pk(ssk_18))).

13. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 3 may be received at input {96}.
The message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) that the attacker may have by 5 may be received at input {106}.
The message aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier[]),pk(ssk_18)) that the attacker may have by 12 may be received at input {119}.
So the message aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)) may be sent to the attacker at output {128}.
attacker(aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19))).

14. The message aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) that the attacker may have by 6 may be received at input {239}.
The message aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)) that the attacker may have by 13 may be received at input {250}.
So the message aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_19),pk(ssk_18)) may be sent to the attacker at output {261}.
attacker(aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_19),pk(ssk_18))).

15. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 3 may be received at input {96}.
The message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) that the attacker may have by 5 may be received at input {106}.
The message aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier[]),pk(ssk_18)) that the attacker may have by 12 may be received at input {119}.
The message aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_19),pk(ssk_18)) that the attacker may have by 14 may be received at input {129}.
So the message aenc(sign(sign((n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_18),pk(ssk_19)) may be sent to the attacker at output {139}.
attacker(aenc(sign(sign((n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_18),pk(ssk_19))).

16. The message aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) that the attacker may have by 6 may be received at input {239}.
The message aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)) that the attacker may have by 13 may be received at input {250}.
The message aenc(sign(sign((n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_18),pk(ssk_19)) that the attacker may have by 15 may be received at input {262}.
So the message n_p_fromVerifier[] may be sent on channel ch(n_p_17) in phase 1 at output {285}.
mess_p1(ch(n_p_17),n_p_fromVerifier[]).

17. By 11, the attacker may have the channel ch(n_p_17) in phase 1.
By 16, the message n_p_fromVerifier[] in phase 1 may be sent on this channel.
So the attacker may obtain the message n_p_fromVerifier[] in phase 1 by listening on this channel.
attacker_p1(n_p_fromVerifier[]).

18. By 17, attacker_p1(n_p_fromVerifier[]).
The goal is reached, represented in the following fact:
attacker_p1(n_p_fromVerifier[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_prover: SecretKey creating sk_prover_1 at {1}

new sk_verifier: SecretKey creating sk_verifier_1 at {2}

new sk_issuer: SecretKey creating sk_issuer_1 at {3}

out(h, ~M) with ~M = pk(sk_issuer_1) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_verifier_1) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_prover_1) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_prover_1),sk_prover_1) at {7}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_verifier_1),sk_verifier_1) at {8}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_issuer_1),sk_issuer_1) at {9}

new ssk_2: SecretKey creating ssk_16 at {90} in copy a

new n_p_2: bitstring creating n_p_16 at {91} in copy a

out(h, ~M_6) with ~M_6 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer_1)) at {95} in copy a

in(h, ~M_6) with ~M_6 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer_1)) at {17} in copy a_1

new ssk: SecretKey creating ssk_17 at {22} in copy a_1

new n_i: bitstring creating n_i_8 at {23} in copy a_1

out(h, ~M_7) with ~M_7 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer_1),pk(ssk_16)) at {26} in copy a_1

in(h, ~M_7) with ~M_7 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer_1),pk(ssk_16)) at {96} in copy a

out(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_16),pk(ssk_17)) at {105} in copy a

in(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_16),pk(ssk_17)) at {27} in copy a_1

new n_issuing: bitstring creating n_issuing_8 at {38} in copy a_1

out(h, ~M_9) with ~M_9 = aenc(sign((issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1),n_issuing_8),ssk_17),pk(ssk_16)) at {42} in copy a_1

in(h, ~M_9) with ~M_9 = aenc(sign((issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1),n_issuing_8),ssk_17),pk(ssk_16)) at {106} in copy a

new ssk_3: SecretKey creating ssk_18 at {113} in copy a, a_2

new n_p_3: bitstring creating n_p_17 at {114} in copy a, a_2

out(h, ~M_10) with ~M_10 = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier_1)) at {118} in copy a, a_2

in(h, ~M_10) with ~M_10 = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier_1)) at {239} in copy a_3

new ssk_6: SecretKey creating ssk_19 at {245} in copy a_3

new n_v_2: bitstring creating n_v_8 at {246} in copy a_3

out(h, ~M_11) with ~M_11 = aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier_1),pk(ssk_18)) at {249} in copy a_3

in(h, ~M_11) with ~M_11 = aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier_1),pk(ssk_18)) at {119} in copy a, a_2

out(h, ~M_12) with ~M_12 = aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)) at {128} in copy a, a_2

in(h, ~M_12) with ~M_12 = aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)) at {250} in copy a_3

new n_c_2: bitstring creating n_c_8 at {257} in copy a_3

out(h, ~M_13) with ~M_13 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_19),pk(ssk_18)) at {261} in copy a_3

in(h, ~M_13) with ~M_13 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_19),pk(ssk_18)) at {129} in copy a, a_2

event auth_ProverSendsLastMessageToVerifier(aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier_1)),aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier_1),pk(ssk_18)),aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_19),pk(ssk_18)),aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_18),pk(ssk_19))) at {138} in copy a, a_2

out(h, ~M_14) with ~M_14 = aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_18),pk(ssk_19)) at {139} in copy a, a_2

in(h, ~M_14) with ~M_14 = aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_18),pk(ssk_19)) at {262} in copy a_3

new access_token_2: bitstring creating access_token_8 at {276} in copy a_3

event auth_VerifierSendsLastMessageToProver(aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier_1)),aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier_1),pk(ssk_18)),aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_19),pk(ssk_18)),aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_18),pk(ssk_19)),aenc(sign((genDID(pk(sk_prover_1),sk_prover_1),access_token_8),ssk_19),pk(ssk_18))) at {280} in copy a_3

out(h, ~M_15) with ~M_15 = aenc(sign((genDID(pk(sk_prover_1),sk_prover_1),access_token_8),ssk_19),pk(ssk_18)) at {281} in copy a_3

out(h, ~M_16) with ~M_16 = sk_prover_1 at {349}

out(h, ~M_17) with ~M_17 = sk_verifier_1 at {350}

out(h, ~M_18) with ~M_18 = sk_issuer_1 at {351}

out(ch(n_p_17), ~M_19) with ~M_19 = n_p_fromVerifier at {285} in copy a_3

event auth_VerifierCompletesProtocol(aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier_1)),aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier_1),pk(ssk_18)),aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_19),pk(ssk_18)),aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_18),pk(ssk_19))) at {284} in copy a_3

The attacker has the message ~M_19 = n_p_fromVerifier in phase 1.
A trace has been found.
RESULT not attacker_p1(n_p_fromVerifier[]) is false.
-- Query not attacker_p1(rule_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(rule_fromVerifier[])
goal reachable: attacker_p1(rule_fromVerifier[])

Derivation:
Abbreviations:
n_p_16 = n_p_2[!1 = @sid]
ssk_16 = ssk_2[!1 = @sid]
n_i_8 = n_i[x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
ssk_17 = ssk[x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
n_issuing_8 = n_issuing[x_1 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)),x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
n_p_17 = n_p_3[!2 = @sid_2,x_5 = aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
ssk_18 = ssk_3[!2 = @sid_2,x_5 = aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
n_v_8 = n_v_2[x_14 = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])),!1 = @sid_3]
ssk_19 = ssk_6[x_14 = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])),!1 = @sid_3]
n_c_8 = n_c_2[x_15 = aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)),x_14 = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])),!1 = @sid_3]

1. The message genDID(pk(sk_issuer[]),sk_issuer[]) may be sent to the attacker at output {9}.
attacker(genDID(pk(sk_issuer[]),sk_issuer[])).

2. Using the function attr the attacker may obtain attr.
attacker(attr).

3. The message genDID(pk(sk_prover[]),sk_prover[]) may be sent to the attacker at output {7}.
attacker(genDID(pk(sk_prover[]),sk_prover[])).

4. By 3, the attacker may know genDID(pk(sk_prover[]),sk_prover[]).
By 2, the attacker may know attr.
By 1, the attacker may know genDID(pk(sk_issuer[]),sk_issuer[]).
Using the function makeRule the attacker may obtain makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[])).
attacker(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))).

5. By 4, the attacker may know makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[])).
So the attacker may know makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[])) in phase 1.
attacker_p1(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))).

6. By 5, the attacker may know makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[])) in phase 1.
Using the function chR the attacker may obtain chR(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))) in phase 1.
attacker_p1(chR(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[])))).

7. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) may be sent to the attacker at output {95}.
attacker(aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[]))).

8. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) that the attacker may have by 7 may be received at input {17}.
So the message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) may be sent to the attacker at output {26}.
attacker(aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16))).

9. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 8 may be received at input {96}.
So the message aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)) may be sent to the attacker at output {105}.
attacker(aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17))).

10. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) that the attacker may have by 7 may be received at input {17}.
The message aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)) that the attacker may have by 9 may be received at input {27}.
So the message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) may be sent to the attacker at output {42}.
attacker(aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16))).

11. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 8 may be received at input {96}.
The message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) that the attacker may have by 10 may be received at input {106}.
So the message aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) may be sent to the attacker at output {118}.
attacker(aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[]))).

12. The message aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) that the attacker may have by 11 may be received at input {239}.
So the message aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier[]),pk(ssk_18)) may be sent to the attacker at output {249}.
attacker(aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier[]),pk(ssk_18))).

13. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 8 may be received at input {96}.
The message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) that the attacker may have by 10 may be received at input {106}.
The message aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier[]),pk(ssk_18)) that the attacker may have by 12 may be received at input {119}.
So the message aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)) may be sent to the attacker at output {128}.
attacker(aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19))).

14. The message aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) that the attacker may have by 11 may be received at input {239}.
The message aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)) that the attacker may have by 13 may be received at input {250}.
So the message aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_19),pk(ssk_18)) may be sent to the attacker at output {261}.
attacker(aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_19),pk(ssk_18))).

15. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 8 may be received at input {96}.
The message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) that the attacker may have by 10 may be received at input {106}.
The message aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier[]),pk(ssk_18)) that the attacker may have by 12 may be received at input {119}.
The message aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_19),pk(ssk_18)) that the attacker may have by 14 may be received at input {129}.
So the message aenc(sign(sign((n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_18),pk(ssk_19)) may be sent to the attacker at output {139}.
attacker(aenc(sign(sign((n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_18),pk(ssk_19))).

16. The message aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) that the attacker may have by 11 may be received at input {239}.
The message aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)) that the attacker may have by 13 may be received at input {250}.
The message aenc(sign(sign((n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_18),pk(ssk_19)) that the attacker may have by 15 may be received at input {262}.
So the message rule_fromVerifier[] may be sent on channel chR(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))) in phase 1 at output {286}.
mess_p1(chR(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),rule_fromVerifier[]).

17. By 6, the attacker may have the channel chR(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))) in phase 1.
By 16, the message rule_fromVerifier[] in phase 1 may be sent on this channel.
So the attacker may obtain the message rule_fromVerifier[] in phase 1 by listening on this channel.
attacker_p1(rule_fromVerifier[]).

18. By 17, attacker_p1(rule_fromVerifier[]).
The goal is reached, represented in the following fact:
attacker_p1(rule_fromVerifier[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_prover: SecretKey creating sk_prover_1 at {1}

new sk_verifier: SecretKey creating sk_verifier_1 at {2}

new sk_issuer: SecretKey creating sk_issuer_1 at {3}

out(h, ~M) with ~M = pk(sk_issuer_1) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_verifier_1) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_prover_1) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_prover_1),sk_prover_1) at {7}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_verifier_1),sk_verifier_1) at {8}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_issuer_1),sk_issuer_1) at {9}

new ssk_2: SecretKey creating ssk_16 at {90} in copy a

new n_p_2: bitstring creating n_p_16 at {91} in copy a

out(h, ~M_6) with ~M_6 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer_1)) at {95} in copy a

in(h, ~M_6) with ~M_6 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer_1)) at {17} in copy a_1

new ssk: SecretKey creating ssk_17 at {22} in copy a_1

new n_i: bitstring creating n_i_8 at {23} in copy a_1

out(h, ~M_7) with ~M_7 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer_1),pk(ssk_16)) at {26} in copy a_1

in(h, ~M_7) with ~M_7 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer_1),pk(ssk_16)) at {96} in copy a

out(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_16),pk(ssk_17)) at {105} in copy a

in(h, ~M_8) with ~M_8 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_16),pk(ssk_17)) at {27} in copy a_1

new n_issuing: bitstring creating n_issuing_8 at {38} in copy a_1

out(h, ~M_9) with ~M_9 = aenc(sign((issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1),n_issuing_8),ssk_17),pk(ssk_16)) at {42} in copy a_1

in(h, ~M_9) with ~M_9 = aenc(sign((issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1),n_issuing_8),ssk_17),pk(ssk_16)) at {106} in copy a

new ssk_3: SecretKey creating ssk_18 at {113} in copy a, a_2

new n_p_3: bitstring creating n_p_17 at {114} in copy a, a_2

out(h, ~M_10) with ~M_10 = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier_1)) at {118} in copy a, a_2

in(h, ~M_10) with ~M_10 = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier_1)) at {239} in copy a_3

new ssk_6: SecretKey creating ssk_19 at {245} in copy a_3

new n_v_2: bitstring creating n_v_8 at {246} in copy a_3

out(h, ~M_11) with ~M_11 = aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier_1),pk(ssk_18)) at {249} in copy a_3

in(h, ~M_11) with ~M_11 = aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier_1),pk(ssk_18)) at {119} in copy a, a_2

out(h, ~M_12) with ~M_12 = aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)) at {128} in copy a, a_2

in(h, ~M_12) with ~M_12 = aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)) at {250} in copy a_3

new n_c_2: bitstring creating n_c_8 at {257} in copy a_3

out(h, ~M_13) with ~M_13 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_19),pk(ssk_18)) at {261} in copy a_3

in(h, ~M_13) with ~M_13 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_19),pk(ssk_18)) at {129} in copy a, a_2

event auth_ProverSendsLastMessageToVerifier(aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier_1)),aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier_1),pk(ssk_18)),aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_19),pk(ssk_18)),aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_18),pk(ssk_19))) at {138} in copy a, a_2

out(h, ~M_14) with ~M_14 = aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_18),pk(ssk_19)) at {139} in copy a, a_2

in(h, ~M_14) with ~M_14 = aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_18),pk(ssk_19)) at {262} in copy a_3

new access_token_2: bitstring creating access_token_8 at {276} in copy a_3

event auth_VerifierSendsLastMessageToProver(aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier_1)),aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier_1),pk(ssk_18)),aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_19),pk(ssk_18)),aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_18),pk(ssk_19)),aenc(sign((genDID(pk(sk_prover_1),sk_prover_1),access_token_8),ssk_19),pk(ssk_18))) at {280} in copy a_3

out(h, ~M_15) with ~M_15 = aenc(sign((genDID(pk(sk_prover_1),sk_prover_1),access_token_8),ssk_19),pk(ssk_18)) at {281} in copy a_3

out(h, ~M_16) with ~M_16 = sk_prover_1 at {349}

out(h, ~M_17) with ~M_17 = sk_verifier_1 at {350}

out(h, ~M_18) with ~M_18 = sk_issuer_1 at {351}

out(chR(makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))), ~M_19) with ~M_19 = rule_fromVerifier at {286} in copy a_3

event auth_VerifierCompletesProtocol(aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier_1)),aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier_1),pk(ssk_18)),aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_19),pk(ssk_18)),aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_18),pk(ssk_19))) at {284} in copy a_3

The attacker has the message ~M_19 = rule_fromVerifier in phase 1.
A trace has been found.
RESULT not attacker_p1(rule_fromVerifier[]) is false.
-- Query not attacker_p1(credRequest_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(credRequest_fromVerifier[])
RESULT not attacker_p1(credRequest_fromVerifier[]) is true.
-- Query not attacker_p1(unauth_vp_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(unauth_vp_fromVerifier[])
RESULT not attacker_p1(unauth_vp_fromVerifier[]) is true.
-- Query not attacker_p1(vp_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(vp_fromVerifier[])
RESULT not attacker_p1(vp_fromVerifier[]) is true.
-- Query not attacker_p1(cred_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(cred_fromVerifier[])
goal reachable: attacker_p1(cred_fromVerifier[])

Derivation:
Abbreviations:
n_p_16 = n_p_2[!1 = @sid]
ssk_16 = ssk_2[!1 = @sid]
n_i_8 = n_i[x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
ssk_17 = ssk[x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
n_issuing_8 = n_issuing[x_1 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)),x = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])),!1 = @sid_1]
n_p_17 = n_p_3[!2 = @sid_2,x_5 = aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
ssk_18 = ssk_3[!2 = @sid_2,x_5 = aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)),x_4 = aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)),!1 = @sid]
n_v_8 = n_v_2[x_14 = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])),!1 = @sid_3]
ssk_19 = ssk_6[x_14 = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])),!1 = @sid_3]
n_c_8 = n_c_2[x_15 = aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)),x_14 = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])),!1 = @sid_3]
n_p_18 = n_p_4[!1 = @sid_4]
ssk_20 = ssk_4[!1 = @sid_4]
n_i_9 = n_i[x = aenc(sign((n_p_18,pk(ssk_20)),ssk_20),pk(sk_issuer[])),!1 = @sid_5]
ssk_21 = ssk[x = aenc(sign((n_p_18,pk(ssk_20)),ssk_20),pk(sk_issuer[])),!1 = @sid_5]
n_issuing_9 = n_issuing[x_1 = aenc(sign(sign((n_i_9,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_20),pk(ssk_21)),x = aenc(sign((n_p_18,pk(ssk_20)),ssk_20),pk(sk_issuer[])),!1 = @sid_5]
ssk_22 = ssk_5[!2 = @sid_6,x_10 = aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_9),ssk_21),pk(ssk_20)),x_9 = aenc(sign((n_p_18,n_i_9,pk(ssk_21)),sk_issuer[]),pk(ssk_20)),!1 = @sid_4]
n_p_19 = n_p_5[!2 = @sid_6,x_10 = aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_9),ssk_21),pk(ssk_20)),x_9 = aenc(sign((n_p_18,n_i_9,pk(ssk_21)),sk_issuer[]),pk(ssk_20)),!1 = @sid_4]

1. The attacker has some term sk_76.
attacker(sk_76).

2. The message aenc(sign((n_p_18,pk(ssk_20)),ssk_20),pk(sk_issuer[])) may be sent to the attacker at output {171}.
attacker(aenc(sign((n_p_18,pk(ssk_20)),ssk_20),pk(sk_issuer[]))).

3. The message aenc(sign((n_p_18,pk(ssk_20)),ssk_20),pk(sk_issuer[])) that the attacker may have by 2 may be received at input {17}.
So the message aenc(sign((n_p_18,n_i_9,pk(ssk_21)),sk_issuer[]),pk(ssk_20)) may be sent to the attacker at output {26}.
attacker(aenc(sign((n_p_18,n_i_9,pk(ssk_21)),sk_issuer[]),pk(ssk_20))).

4. The message aenc(sign((n_p_18,n_i_9,pk(ssk_21)),sk_issuer[]),pk(ssk_20)) that the attacker may have by 3 may be received at input {172}.
So the message aenc(sign(sign((n_i_9,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_20),pk(ssk_21)) may be sent to the attacker at output {181}.
attacker(aenc(sign(sign((n_i_9,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_20),pk(ssk_21))).

5. The message aenc(sign((n_p_18,pk(ssk_20)),ssk_20),pk(sk_issuer[])) that the attacker may have by 2 may be received at input {17}.
The message aenc(sign(sign((n_i_9,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_20),pk(ssk_21)) that the attacker may have by 4 may be received at input {27}.
So the message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_9),ssk_21),pk(ssk_20)) may be sent to the attacker at output {42}.
attacker(aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_9),ssk_21),pk(ssk_20))).

6. The attacker initially knows sk_otherAgent[].
attacker(sk_otherAgent[]).

7. The message aenc(sign((n_p_18,n_i_9,pk(ssk_21)),sk_issuer[]),pk(ssk_20)) that the attacker may have by 3 may be received at input {172}.
The message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_9),ssk_21),pk(ssk_20)) that the attacker may have by 5 may be received at input {182}.
So the message aenc(sign((n_p_19,pk(ssk_22)),ssk_22),pk(sk_otherAgent[])) may be sent to the attacker at output {194}.
attacker(aenc(sign((n_p_19,pk(ssk_22)),ssk_22),pk(sk_otherAgent[]))).

8. By 7, the attacker may know aenc(sign((n_p_19,pk(ssk_22)),ssk_22),pk(sk_otherAgent[])).
By 6, the attacker may know sk_otherAgent[].
Using the function adec the attacker may obtain sign((n_p_19,pk(ssk_22)),ssk_22).
attacker(sign((n_p_19,pk(ssk_22)),ssk_22)).

9. By 8, the attacker may know sign((n_p_19,pk(ssk_22)),ssk_22).
Using the function getMsg the attacker may obtain (n_p_19,pk(ssk_22)).
attacker((n_p_19,pk(ssk_22))).

10. By 9, the attacker may know (n_p_19,pk(ssk_22)).
Using the function 2-proj-2-tuple the attacker may obtain pk(ssk_22).
attacker(pk(ssk_22)).

11. By 1, the attacker may know sk_76.
Using the function pk the attacker may obtain pk(sk_76).
attacker(pk(sk_76)).

12. The attacker has some term n_v_9.
attacker(n_v_9).

13. By 9, the attacker may know (n_p_19,pk(ssk_22)).
Using the function 1-proj-2-tuple the attacker may obtain n_p_19.
attacker(n_p_19).

14. By 13, the attacker may know n_p_19.
By 12, the attacker may know n_v_9.
By 11, the attacker may know pk(sk_76).
Using the function 3-tuple the attacker may obtain (n_p_19,n_v_9,pk(sk_76)).
attacker((n_p_19,n_v_9,pk(sk_76))).

15. By 14, the attacker may know (n_p_19,n_v_9,pk(sk_76)).
By 6, the attacker may know sk_otherAgent[].
Using the function sign the attacker may obtain sign((n_p_19,n_v_9,pk(sk_76)),sk_otherAgent[]).
attacker(sign((n_p_19,n_v_9,pk(sk_76)),sk_otherAgent[])).

16. By 15, the attacker may know sign((n_p_19,n_v_9,pk(sk_76)),sk_otherAgent[]).
By 10, the attacker may know pk(ssk_22).
Using the function aenc the attacker may obtain aenc(sign((n_p_19,n_v_9,pk(sk_76)),sk_otherAgent[]),pk(ssk_22)).
attacker(aenc(sign((n_p_19,n_v_9,pk(sk_76)),sk_otherAgent[]),pk(ssk_22))).

17. The message genDID(pk(sk_issuer[]),sk_issuer[]) may be sent to the attacker at output {9}.
attacker(genDID(pk(sk_issuer[]),sk_issuer[])).

18. Using the function attr the attacker may obtain attr.
attacker(attr).

19. The message genDID(pk(sk_prover[]),sk_prover[]) may be sent to the attacker at output {7}.
attacker(genDID(pk(sk_prover[]),sk_prover[])).

20. By 19, the attacker may know genDID(pk(sk_prover[]),sk_prover[]).
By 18, the attacker may know attr.
By 17, the attacker may know genDID(pk(sk_issuer[]),sk_issuer[]).
Using the function makeRule the attacker may obtain makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[])).
attacker(makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))).

21. The attacker has some term n_c_9.
attacker(n_c_9).

22. By 21, the attacker may know n_c_9.
By 20, the attacker may know makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[])).
Using the function 2-tuple the attacker may obtain (n_c_9,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))).
attacker((n_c_9,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[])))).

23. By 22, the attacker may know (n_c_9,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))).
By 1, the attacker may know sk_76.
Using the function sign the attacker may obtain sign((n_c_9,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),sk_76).
attacker(sign((n_c_9,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),sk_76)).

24. By 23, the attacker may know sign((n_c_9,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),sk_76).
By 10, the attacker may know pk(ssk_22).
Using the function aenc the attacker may obtain aenc(sign((n_c_9,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),sk_76),pk(ssk_22)).
attacker(aenc(sign((n_c_9,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),sk_76),pk(ssk_22))).

25. The message aenc(sign((n_p_18,n_i_9,pk(ssk_21)),sk_issuer[]),pk(ssk_20)) that the attacker may have by 3 may be received at input {172}.
The message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_9),ssk_21),pk(ssk_20)) that the attacker may have by 5 may be received at input {182}.
The message aenc(sign((n_p_19,n_v_9,pk(sk_76)),sk_otherAgent[]),pk(ssk_22)) that the attacker may have by 16 may be received at input {195}.
The message aenc(sign((n_c_9,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),sk_76),pk(ssk_22)) that the attacker may have by 24 may be received at input {205}.
So the message aenc(sign(sign((n_c_9,genDID(pk(sk_otherAgent[]),sk_otherAgent[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_22),pk(sk_76)) may be sent to the attacker at output {215}.
attacker(aenc(sign(sign((n_c_9,genDID(pk(sk_otherAgent[]),sk_otherAgent[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_22),pk(sk_76))).

26. By 25, the attacker may know aenc(sign(sign((n_c_9,genDID(pk(sk_otherAgent[]),sk_otherAgent[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_22),pk(sk_76)).
By 1, the attacker may know sk_76.
Using the function adec the attacker may obtain sign(sign((n_c_9,genDID(pk(sk_otherAgent[]),sk_otherAgent[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_22).
attacker(sign(sign((n_c_9,genDID(pk(sk_otherAgent[]),sk_otherAgent[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_22)).

27. By 26, the attacker may know sign(sign((n_c_9,genDID(pk(sk_otherAgent[]),sk_otherAgent[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_22).
Using the function getMsg the attacker may obtain sign((n_c_9,genDID(pk(sk_otherAgent[]),sk_otherAgent[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]).
attacker(sign((n_c_9,genDID(pk(sk_otherAgent[]),sk_otherAgent[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[])).

28. By 27, the attacker may know sign((n_c_9,genDID(pk(sk_otherAgent[]),sk_otherAgent[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]).
Using the function getMsg the attacker may obtain (n_c_9,genDID(pk(sk_otherAgent[]),sk_otherAgent[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])).
attacker((n_c_9,genDID(pk(sk_otherAgent[]),sk_otherAgent[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]))).

29. By 28, the attacker may know (n_c_9,genDID(pk(sk_otherAgent[]),sk_otherAgent[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])).
Using the function 3-proj-3-tuple the attacker may obtain issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]).
attacker(issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])).

30. By 29, the attacker may know issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]).
So the attacker may know issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]) in phase 1.
attacker_p1(issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])).

31. By 30, the attacker may know issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]) in phase 1.
Using the function chC the attacker may obtain chC(issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])) in phase 1.
attacker_p1(chC(issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]))).

32. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) may be sent to the attacker at output {95}.
attacker(aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[]))).

33. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) that the attacker may have by 32 may be received at input {17}.
So the message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) may be sent to the attacker at output {26}.
attacker(aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16))).

34. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 33 may be received at input {96}.
So the message aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)) may be sent to the attacker at output {105}.
attacker(aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17))).

35. The message aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer[])) that the attacker may have by 32 may be received at input {17}.
The message aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)) that the attacker may have by 34 may be received at input {27}.
So the message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) may be sent to the attacker at output {42}.
attacker(aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16))).

36. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 33 may be received at input {96}.
The message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) that the attacker may have by 35 may be received at input {106}.
So the message aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) may be sent to the attacker at output {118}.
attacker(aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[]))).

37. The message aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) that the attacker may have by 36 may be received at input {239}.
So the message aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier[]),pk(ssk_18)) may be sent to the attacker at output {249}.
attacker(aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier[]),pk(ssk_18))).

38. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 33 may be received at input {96}.
The message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) that the attacker may have by 35 may be received at input {106}.
The message aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier[]),pk(ssk_18)) that the attacker may have by 37 may be received at input {119}.
So the message aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)) may be sent to the attacker at output {128}.
attacker(aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19))).

39. The message aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) that the attacker may have by 36 may be received at input {239}.
The message aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)) that the attacker may have by 38 may be received at input {250}.
So the message aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_19),pk(ssk_18)) may be sent to the attacker at output {261}.
attacker(aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_19),pk(ssk_18))).

40. The message aenc(sign((n_p_16,n_i_8,pk(ssk_17)),sk_issuer[]),pk(ssk_16)) that the attacker may have by 33 may be received at input {96}.
The message aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_17),pk(ssk_16)) that the attacker may have by 35 may be received at input {106}.
The message aenc(sign((n_p_17,n_v_8,pk(ssk_19)),sk_verifier[]),pk(ssk_18)) that the attacker may have by 37 may be received at input {119}.
The message aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_19),pk(ssk_18)) that the attacker may have by 39 may be received at input {129}.
So the message aenc(sign(sign((n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_18),pk(ssk_19)) may be sent to the attacker at output {139}.
attacker(aenc(sign(sign((n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_18),pk(ssk_19))).

41. The message aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_verifier[])) that the attacker may have by 36 may be received at input {239}.
The message aenc(sign((n_v_8,uri),ssk_18),pk(ssk_19)) that the attacker may have by 38 may be received at input {250}.
The message aenc(sign(sign((n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_18),pk(ssk_19)) that the attacker may have by 40 may be received at input {262}.
So the message cred_fromVerifier[] may be sent on channel chC(issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])) in phase 1 at output {290}.
mess_p1(chC(issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),cred_fromVerifier[]).

42. By 31, the attacker may have the channel chC(issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])) in phase 1.
By 41, the message cred_fromVerifier[] in phase 1 may be sent on this channel.
So the attacker may obtain the message cred_fromVerifier[] in phase 1 by listening on this channel.
attacker_p1(cred_fromVerifier[]).

43. By 42, attacker_p1(cred_fromVerifier[]).
The goal is reached, represented in the following fact:
attacker_p1(cred_fromVerifier[]).


A more detailed output of the traces is available with
  set traceDisplay = long.

new sk_prover: SecretKey creating sk_prover_1 at {1}

new sk_verifier: SecretKey creating sk_verifier_1 at {2}

new sk_issuer: SecretKey creating sk_issuer_1 at {3}

out(h, ~M) with ~M = pk(sk_issuer_1) at {4}

out(h, ~M_1) with ~M_1 = pk(sk_verifier_1) at {5}

out(h, ~M_2) with ~M_2 = pk(sk_prover_1) at {6}

out(h, ~M_3) with ~M_3 = genDID(pk(sk_prover_1),sk_prover_1) at {7}

out(h, ~M_4) with ~M_4 = genDID(pk(sk_verifier_1),sk_verifier_1) at {8}

out(h, ~M_5) with ~M_5 = genDID(pk(sk_issuer_1),sk_issuer_1) at {9}

new ssk_4: SecretKey creating ssk_16 at {166} in copy a

new n_p_4: bitstring creating n_p_16 at {167} in copy a

out(h, ~M_6) with ~M_6 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer_1)) at {171} in copy a

new ssk_2: SecretKey creating ssk_17 at {90} in copy a_1

new n_p_2: bitstring creating n_p_17 at {91} in copy a_1

out(h, ~M_7) with ~M_7 = aenc(sign((n_p_17,pk(ssk_17)),ssk_17),pk(sk_issuer_1)) at {95} in copy a_1

in(h, ~M_7) with ~M_7 = aenc(sign((n_p_17,pk(ssk_17)),ssk_17),pk(sk_issuer_1)) at {17} in copy a_2

new ssk: SecretKey creating ssk_18 at {22} in copy a_2

new n_i: bitstring creating n_i_8 at {23} in copy a_2

out(h, ~M_8) with ~M_8 = aenc(sign((n_p_17,n_i_8,pk(ssk_18)),sk_issuer_1),pk(ssk_17)) at {26} in copy a_2

in(h, ~M_6) with ~M_6 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_issuer_1)) at {17} in copy a_3

new ssk: SecretKey creating ssk_19 at {22} in copy a_3

new n_i: bitstring creating n_i_9 at {23} in copy a_3

out(h, ~M_9) with ~M_9 = aenc(sign((n_p_16,n_i_9,pk(ssk_19)),sk_issuer_1),pk(ssk_16)) at {26} in copy a_3

in(h, ~M_8) with ~M_8 = aenc(sign((n_p_17,n_i_8,pk(ssk_18)),sk_issuer_1),pk(ssk_17)) at {96} in copy a_1

out(h, ~M_10) with ~M_10 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_17),pk(ssk_18)) at {105} in copy a_1

in(h, ~M_10) with ~M_10 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_17),pk(ssk_18)) at {27} in copy a_2

new n_issuing: bitstring creating n_issuing_8 at {38} in copy a_2

out(h, ~M_11) with ~M_11 = aenc(sign((issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1),n_issuing_8),ssk_18),pk(ssk_17)) at {42} in copy a_2

in(h, ~M_11) with ~M_11 = aenc(sign((issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1),n_issuing_8),ssk_18),pk(ssk_17)) at {106} in copy a_1

new ssk_3: SecretKey creating ssk_20 at {113} in copy a_1, a_4

new n_p_3: bitstring creating n_p_18 at {114} in copy a_1, a_4

out(h, ~M_12) with ~M_12 = aenc(sign((n_p_18,pk(ssk_20)),ssk_20),pk(sk_verifier_1)) at {118} in copy a_1, a_4

in(h, ~M_9) with ~M_9 = aenc(sign((n_p_16,n_i_9,pk(ssk_19)),sk_issuer_1),pk(ssk_16)) at {172} in copy a

out(h, ~M_13) with ~M_13 = aenc(sign(sign((n_i_9,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_16),pk(ssk_19)) at {181} in copy a

in(h, ~M_13) with ~M_13 = aenc(sign(sign((n_i_9,genDID(pk(sk_prover_1),sk_prover_1),genDID(pk(sk_issuer_1),sk_issuer_1)),sk_prover_1),ssk_16),pk(ssk_19)) at {27} in copy a_3

new n_issuing: bitstring creating n_issuing_9 at {38} in copy a_3

out(h, ~M_14) with ~M_14 = aenc(sign((issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1),n_issuing_9),ssk_19),pk(ssk_16)) at {42} in copy a_3

in(h, ~M_14) with ~M_14 = aenc(sign((issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1),genDID(pk(sk_prover_1),sk_prover_1),n_issuing_9),ssk_19),pk(ssk_16)) at {182} in copy a

new ssk_5: SecretKey creating ssk_21 at {189} in copy a, a_5

new n_p_5: bitstring creating n_p_19 at {190} in copy a, a_5

out(h, ~M_15) with ~M_15 = aenc(sign((n_p_19,pk(ssk_21)),ssk_21),pk(sk_otherAgent)) at {194} in copy a, a_5

in(h, aenc(sign((1-proj-2-tuple(getMsg(adec(~M_15,sk_otherAgent))),a_6,pk(a_7)),sk_otherAgent),2-proj-2-tuple(getMsg(adec(~M_15,sk_otherAgent))))) with aenc(sign((1-proj-2-tuple(getMsg(adec(~M_15,sk_otherAgent))),a_6,pk(a_7)),sk_otherAgent),2-proj-2-tuple(getMsg(adec(~M_15,sk_otherAgent)))) = aenc(sign((n_p_19,a_6,pk(a_7)),sk_otherAgent),pk(ssk_21)) at {195} in copy a, a_5

out(h, ~M_16) with ~M_16 = aenc(sign((a_6,uri),ssk_21),pk(a_7)) at {204} in copy a, a_5

in(h, aenc(sign((a_8,makeRule(~M_3,attr,~M_5)),a_7),2-proj-2-tuple(getMsg(adec(~M_15,sk_otherAgent))))) with aenc(sign((a_8,makeRule(~M_3,attr,~M_5)),a_7),2-proj-2-tuple(getMsg(adec(~M_15,sk_otherAgent)))) = aenc(sign((a_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),a_7),pk(ssk_21)) at {205} in copy a, a_5

event auth_ProverSendsLastMessageToVerifier(aenc(sign((n_p_19,pk(ssk_21)),ssk_21),pk(sk_otherAgent)),aenc(sign((n_p_19,a_6,pk(a_7)),sk_otherAgent),pk(ssk_21)),aenc(sign((a_6,uri),ssk_21),pk(a_7)),aenc(sign((a_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),a_7),pk(ssk_21)),aenc(sign(sign((a_8,genDID(pk(sk_otherAgent),sk_otherAgent),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_21),pk(a_7))) at {214} in copy a, a_5

out(h, ~M_17) with ~M_17 = aenc(sign(sign((a_8,genDID(pk(sk_otherAgent),sk_otherAgent),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_21),pk(a_7)) at {215} in copy a, a_5

in(h, ~M_12) with ~M_12 = aenc(sign((n_p_18,pk(ssk_20)),ssk_20),pk(sk_verifier_1)) at {239} in copy a_9

new ssk_6: SecretKey creating ssk_22 at {245} in copy a_9

new n_v_2: bitstring creating n_v_8 at {246} in copy a_9

out(h, ~M_18) with ~M_18 = aenc(sign((n_p_18,n_v_8,pk(ssk_22)),sk_verifier_1),pk(ssk_20)) at {249} in copy a_9

in(h, ~M_18) with ~M_18 = aenc(sign((n_p_18,n_v_8,pk(ssk_22)),sk_verifier_1),pk(ssk_20)) at {119} in copy a_1, a_4

out(h, ~M_19) with ~M_19 = aenc(sign((n_v_8,uri),ssk_20),pk(ssk_22)) at {128} in copy a_1, a_4

in(h, ~M_19) with ~M_19 = aenc(sign((n_v_8,uri),ssk_20),pk(ssk_22)) at {250} in copy a_9

new n_c_2: bitstring creating n_c_8 at {257} in copy a_9

out(h, ~M_20) with ~M_20 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_22),pk(ssk_20)) at {261} in copy a_9

in(h, ~M_20) with ~M_20 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_22),pk(ssk_20)) at {129} in copy a_1, a_4

event auth_ProverSendsLastMessageToVerifier(aenc(sign((n_p_18,pk(ssk_20)),ssk_20),pk(sk_verifier_1)),aenc(sign((n_p_18,n_v_8,pk(ssk_22)),sk_verifier_1),pk(ssk_20)),aenc(sign((n_v_8,uri),ssk_20),pk(ssk_22)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_22),pk(ssk_20)),aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_20),pk(ssk_22))) at {138} in copy a_1, a_4

out(h, ~M_21) with ~M_21 = aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_20),pk(ssk_22)) at {139} in copy a_1, a_4

in(h, ~M_21) with ~M_21 = aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_20),pk(ssk_22)) at {262} in copy a_9

new access_token_2: bitstring creating access_token_8 at {276} in copy a_9

event auth_VerifierSendsLastMessageToProver(aenc(sign((n_p_18,pk(ssk_20)),ssk_20),pk(sk_verifier_1)),aenc(sign((n_p_18,n_v_8,pk(ssk_22)),sk_verifier_1),pk(ssk_20)),aenc(sign((n_v_8,uri),ssk_20),pk(ssk_22)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_22),pk(ssk_20)),aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_20),pk(ssk_22)),aenc(sign((genDID(pk(sk_prover_1),sk_prover_1),access_token_8),ssk_22),pk(ssk_20))) at {280} in copy a_9

out(h, ~M_22) with ~M_22 = aenc(sign((genDID(pk(sk_prover_1),sk_prover_1),access_token_8),ssk_22),pk(ssk_20)) at {281} in copy a_9

out(h, ~M_23) with ~M_23 = sk_prover_1 at {349}

out(h, ~M_24) with ~M_24 = sk_verifier_1 at {350}

out(h, ~M_25) with ~M_25 = sk_issuer_1 at {351}

out(chC(issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)), ~M_26) with ~M_26 = cred_fromVerifier at {290} in copy a_9

event auth_VerifierCompletesProtocol(aenc(sign((n_p_18,pk(ssk_20)),ssk_20),pk(sk_verifier_1)),aenc(sign((n_p_18,n_v_8,pk(ssk_22)),sk_verifier_1),pk(ssk_20)),aenc(sign((n_v_8,uri),ssk_20),pk(ssk_22)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover_1),sk_prover_1),attr,genDID(pk(sk_issuer_1),sk_issuer_1))),ssk_22),pk(ssk_20)),aenc(sign(sign((n_c_8,genDID(pk(sk_verifier_1),sk_verifier_1),issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)),sk_prover_1),ssk_20),pk(ssk_22))) at {284} in copy a_9

out(chC(issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)), ~M_27) with ~M_27 = cred_fromHolder at {159} in copy a_1

out(chC(issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)), ~M_28) with ~M_28 = cred_fromIssuer at {46} in copy a_3

out(chC(issueVC(genDID(pk(sk_prover_1),sk_prover_1),attr,sk_issuer_1)), ~M_29) with ~M_29 = cred_fromIssuer at {46} in copy a_2

The attacker has the message ~M_26 = cred_fromVerifier in phase 1.
A trace has been found.
RESULT not attacker_p1(cred_fromVerifier[]) is false.
-- Query not attacker_p1(access_token_fromVerifier[]) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 110 rules.
400 rules inserted. Base: 376 rules (82 with conclusion selected). Queue: 180 rules.
600 rules inserted. Base: 537 rules (101 with conclusion selected). Queue: 170 rules.
800 rules inserted. Base: 689 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 161 rules.
1200 rules inserted. Base: 1006 rules (188 with conclusion selected). Queue: 199 rules.
1400 rules inserted. Base: 1133 rules (207 with conclusion selected). Queue: 177 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 137 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 196 rules.
2000 rules inserted. Base: 1373 rules (246 with conclusion selected). Queue: 280 rules.
2200 rules inserted. Base: 1469 rules (255 with conclusion selected). Queue: 352 rules.
2400 rules inserted. Base: 1515 rules (265 with conclusion selected). Queue: 318 rules.
2600 rules inserted. Base: 1609 rules (281 with conclusion selected). Queue: 342 rules.
2800 rules inserted. Base: 1701 rules (286 with conclusion selected). Queue: 316 rules.
3000 rules inserted. Base: 1808 rules (297 with conclusion selected). Queue: 284 rules.
3200 rules inserted. Base: 1908 rules (304 with conclusion selected). Queue: 340 rules.
3400 rules inserted. Base: 1999 rules (307 with conclusion selected). Queue: 356 rules.
3600 rules inserted. Base: 2118 rules (322 with conclusion selected). Queue: 452 rules.
3800 rules inserted. Base: 2207 rules (323 with conclusion selected). Queue: 432 rules.
4000 rules inserted. Base: 2301 rules (329 with conclusion selected). Queue: 501 rules.
4200 rules inserted. Base: 2391 rules (332 with conclusion selected). Queue: 545 rules.
4400 rules inserted. Base: 2485 rules (333 with conclusion selected). Queue: 541 rules.
4600 rules inserted. Base: 2546 rules (336 with conclusion selected). Queue: 570 rules.
4800 rules inserted. Base: 2606 rules (336 with conclusion selected). Queue: 613 rules.
5000 rules inserted. Base: 2639 rules (341 with conclusion selected). Queue: 613 rules.
5200 rules inserted. Base: 2702 rules (341 with conclusion selected). Queue: 633 rules.
5400 rules inserted. Base: 2747 rules (341 with conclusion selected). Queue: 753 rules.
5600 rules inserted. Base: 2846 rules (345 with conclusion selected). Queue: 836 rules.
5800 rules inserted. Base: 2875 rules (347 with conclusion selected). Queue: 822 rules.
6000 rules inserted. Base: 2899 rules (347 with conclusion selected). Queue: 856 rules.
6200 rules inserted. Base: 2946 rules (349 with conclusion selected). Queue: 946 rules.
6400 rules inserted. Base: 2995 rules (349 with conclusion selected). Queue: 976 rules.
6600 rules inserted. Base: 2958 rules (347 with conclusion selected). Queue: 1022 rules.
6800 rules inserted. Base: 2946 rules (347 with conclusion selected). Queue: 985 rules.
7000 rules inserted. Base: 3013 rules (348 with conclusion selected). Queue: 1077 rules.
7200 rules inserted. Base: 3053 rules (353 with conclusion selected). Queue: 1089 rules.
7400 rules inserted. Base: 3073 rules (357 with conclusion selected). Queue: 1055 rules.
7600 rules inserted. Base: 3136 rules (357 with conclusion selected). Queue: 1091 rules.
7800 rules inserted. Base: 3177 rules (359 with conclusion selected). Queue: 1034 rules.
8000 rules inserted. Base: 3200 rules (365 with conclusion selected). Queue: 1078 rules.
8200 rules inserted. Base: 3279 rules (367 with conclusion selected). Queue: 1077 rules.
8400 rules inserted. Base: 3304 rules (365 with conclusion selected). Queue: 997 rules.
8600 rules inserted. Base: 3335 rules (367 with conclusion selected). Queue: 957 rules.
8800 rules inserted. Base: 3392 rules (367 with conclusion selected). Queue: 896 rules.
9000 rules inserted. Base: 3399 rules (373 with conclusion selected). Queue: 941 rules.
9200 rules inserted. Base: 3492 rules (375 with conclusion selected). Queue: 938 rules.
9400 rules inserted. Base: 3562 rules (379 with conclusion selected). Queue: 860 rules.
9600 rules inserted. Base: 3530 rules (379 with conclusion selected). Queue: 1204 rules.
9800 rules inserted. Base: 3568 rules (388 with conclusion selected). Queue: 1199 rules.
10000 rules inserted. Base: 3654 rules (392 with conclusion selected). Queue: 1175 rules.
10200 rules inserted. Base: 3714 rules (394 with conclusion selected). Queue: 1390 rules.
10400 rules inserted. Base: 3701 rules (403 with conclusion selected). Queue: 1489 rules.
10600 rules inserted. Base: 3712 rules (401 with conclusion selected). Queue: 1460 rules.
10800 rules inserted. Base: 3711 rules (400 with conclusion selected). Queue: 1536 rules.
11000 rules inserted. Base: 3775 rules (404 with conclusion selected). Queue: 1540 rules.
11200 rules inserted. Base: 3819 rules (407 with conclusion selected). Queue: 1524 rules.
11400 rules inserted. Base: 3837 rules (409 with conclusion selected). Queue: 1664 rules.
11600 rules inserted. Base: 3852 rules (412 with conclusion selected). Queue: 2015 rules.
11800 rules inserted. Base: 3871 rules (412 with conclusion selected). Queue: 1919 rules.
12000 rules inserted. Base: 3843 rules (410 with conclusion selected). Queue: 1761 rules.
12200 rules inserted. Base: 3844 rules (410 with conclusion selected). Queue: 1601 rules.
12400 rules inserted. Base: 3829 rules (415 with conclusion selected). Queue: 1599 rules.
12600 rules inserted. Base: 3909 rules (417 with conclusion selected). Queue: 1585 rules.
12800 rules inserted. Base: 3906 rules (421 with conclusion selected). Queue: 1474 rules.
13000 rules inserted. Base: 3934 rules (425 with conclusion selected). Queue: 1438 rules.
13200 rules inserted. Base: 3949 rules (425 with conclusion selected). Queue: 1251 rules.
13400 rules inserted. Base: 3941 rules (425 with conclusion selected). Queue: 1168 rules.
13600 rules inserted. Base: 3939 rules (424 with conclusion selected). Queue: 1130 rules.
13800 rules inserted. Base: 3950 rules (426 with conclusion selected). Queue: 1062 rules.
14000 rules inserted. Base: 3935 rules (429 with conclusion selected). Queue: 936 rules.
14200 rules inserted. Base: 4034 rules (435 with conclusion selected). Queue: 874 rules.
14400 rules inserted. Base: 4031 rules (437 with conclusion selected). Queue: 801 rules.
14600 rules inserted. Base: 4003 rules (433 with conclusion selected). Queue: 640 rules.
14800 rules inserted. Base: 4021 rules (438 with conclusion selected). Queue: 580 rules.
15000 rules inserted. Base: 4053 rules (447 with conclusion selected). Queue: 572 rules.
15200 rules inserted. Base: 4092 rules (449 with conclusion selected). Queue: 589 rules.
15400 rules inserted. Base: 4115 rules (456 with conclusion selected). Queue: 462 rules.
15600 rules inserted. Base: 4108 rules (461 with conclusion selected). Queue: 484 rules.
15800 rules inserted. Base: 4126 rules (468 with conclusion selected). Queue: 502 rules.
16000 rules inserted. Base: 4089 rules (478 with conclusion selected). Queue: 458 rules.
16200 rules inserted. Base: 4116 rules (487 with conclusion selected). Queue: 353 rules.
16400 rules inserted. Base: 4091 rules (495 with conclusion selected). Queue: 315 rules.
16600 rules inserted. Base: 4116 rules (502 with conclusion selected). Queue: 265 rules.
16800 rules inserted. Base: 4096 rules (515 with conclusion selected). Queue: 230 rules.
17000 rules inserted. Base: 4063 rules (519 with conclusion selected). Queue: 200 rules.
17200 rules inserted. Base: 4069 rules (538 with conclusion selected). Queue: 273 rules.
17400 rules inserted. Base: 4055 rules (538 with conclusion selected). Queue: 142 rules.
17600 rules inserted. Base: 3979 rules (547 with conclusion selected). Queue: 162 rules.
17800 rules inserted. Base: 3962 rules (561 with conclusion selected). Queue: 179 rules.
18000 rules inserted. Base: 3960 rules (569 with conclusion selected). Queue: 160 rules.
18200 rules inserted. Base: 3942 rules (577 with conclusion selected). Queue: 67 rules.
Starting query not attacker_p1(access_token_fromVerifier[])
RESULT not attacker_p1(access_token_fromVerifier[]) is true.
-- Query inj-event(auth_ProverCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) ==> inj-event(auth_VerifierSendsLastMessageToProver(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 111 rules.
400 rules inserted. Base: 383 rules (82 with conclusion selected). Queue: 183 rules.
600 rules inserted. Base: 539 rules (100 with conclusion selected). Queue: 164 rules.
800 rules inserted. Base: 694 rules (117 with conclusion selected). Queue: 179 rules.
1000 rules inserted. Base: 854 rules (160 with conclusion selected). Queue: 166 rules.
1200 rules inserted. Base: 1008 rules (187 with conclusion selected). Queue: 202 rules.
1400 rules inserted. Base: 1134 rules (198 with conclusion selected). Queue: 176 rules.
1600 rules inserted. Base: 1242 rules (213 with conclusion selected). Queue: 133 rules.
1800 rules inserted. Base: 1347 rules (230 with conclusion selected). Queue: 187 rules.
2000 rules inserted. Base: 1393 rules (245 with conclusion selected). Queue: 302 rules.
2200 rules inserted. Base: 1492 rules (255 with conclusion selected). Queue: 381 rules.
2400 rules inserted. Base: 1535 rules (264 with conclusion selected). Queue: 320 rules.
2600 rules inserted. Base: 1624 rules (280 with conclusion selected). Queue: 330 rules.
2800 rules inserted. Base: 1734 rules (287 with conclusion selected). Queue: 330 rules.
3000 rules inserted. Base: 1829 rules (294 with conclusion selected). Queue: 288 rules.
3200 rules inserted. Base: 1934 rules (300 with conclusion selected). Queue: 343 rules.
3400 rules inserted. Base: 2020 rules (307 with conclusion selected). Queue: 332 rules.
3600 rules inserted. Base: 2146 rules (320 with conclusion selected). Queue: 426 rules.
3800 rules inserted. Base: 2247 rules (323 with conclusion selected). Queue: 448 rules.
4000 rules inserted. Base: 2345 rules (329 with conclusion selected). Queue: 537 rules.
4200 rules inserted. Base: 2436 rules (329 with conclusion selected). Queue: 535 rules.
4400 rules inserted. Base: 2522 rules (332 with conclusion selected). Queue: 556 rules.
4600 rules inserted. Base: 2586 rules (336 with conclusion selected). Queue: 577 rules.
4800 rules inserted. Base: 2650 rules (336 with conclusion selected). Queue: 639 rules.
5000 rules inserted. Base: 2719 rules (337 with conclusion selected). Queue: 619 rules.
5200 rules inserted. Base: 2733 rules (341 with conclusion selected). Queue: 675 rules.
5400 rules inserted. Base: 2792 rules (341 with conclusion selected). Queue: 736 rules.
5600 rules inserted. Base: 2877 rules (342 with conclusion selected). Queue: 798 rules.
5800 rules inserted. Base: 2920 rules (347 with conclusion selected). Queue: 839 rules.
6000 rules inserted. Base: 2939 rules (347 with conclusion selected). Queue: 844 rules.
6200 rules inserted. Base: 2978 rules (347 with conclusion selected). Queue: 951 rules.
6400 rules inserted. Base: 3044 rules (349 with conclusion selected). Queue: 957 rules.
6600 rules inserted. Base: 3006 rules (347 with conclusion selected). Queue: 1000 rules.
6800 rules inserted. Base: 3033 rules (347 with conclusion selected). Queue: 1015 rules.
7000 rules inserted. Base: 3046 rules (347 with conclusion selected). Queue: 1048 rules.
7200 rules inserted. Base: 3131 rules (351 with conclusion selected). Queue: 1105 rules.
7400 rules inserted. Base: 3128 rules (353 with conclusion selected). Queue: 1085 rules.
7600 rules inserted. Base: 3164 rules (357 with conclusion selected). Queue: 1138 rules.
7800 rules inserted. Base: 3221 rules (359 with conclusion selected). Queue: 1055 rules.
8000 rules inserted. Base: 3239 rules (359 with conclusion selected). Queue: 1029 rules.
8200 rules inserted. Base: 3290 rules (365 with conclusion selected). Queue: 1086 rules.
8400 rules inserted. Base: 3359 rules (367 with conclusion selected). Queue: 1041 rules.
8600 rules inserted. Base: 3370 rules (367 with conclusion selected). Queue: 940 rules.
8800 rules inserted. Base: 3433 rules (367 with conclusion selected). Queue: 914 rules.
9000 rules inserted. Base: 3418 rules (366 with conclusion selected). Queue: 894 rules.
9200 rules inserted. Base: 3514 rules (375 with conclusion selected). Queue: 937 rules.
9400 rules inserted. Base: 3590 rules (379 with conclusion selected). Queue: 908 rules.
9600 rules inserted. Base: 3546 rules (377 with conclusion selected). Queue: 856 rules.
9800 rules inserted. Base: 3608 rules (380 with conclusion selected). Queue: 1183 rules.
10000 rules inserted. Base: 3668 rules (389 with conclusion selected). Queue: 1176 rules.
10200 rules inserted. Base: 3755 rules (392 with conclusion selected). Queue: 1269 rules.
10400 rules inserted. Base: 3766 rules (397 with conclusion selected). Queue: 1327 rules.
10600 rules inserted. Base: 3771 rules (401 with conclusion selected). Queue: 1426 rules.
10800 rules inserted. Base: 3774 rules (401 with conclusion selected). Queue: 1348 rules.
11000 rules inserted. Base: 3810 rules (400 with conclusion selected). Queue: 1525 rules.
11200 rules inserted. Base: 3870 rules (407 with conclusion selected). Queue: 1555 rules.
11400 rules inserted. Base: 3891 rules (409 with conclusion selected). Queue: 1690 rules.
11600 rules inserted. Base: 3910 rules (409 with conclusion selected). Queue: 1873 rules.
11800 rules inserted. Base: 3931 rules (412 with conclusion selected). Queue: 1908 rules.
12000 rules inserted. Base: 3937 rules (414 with conclusion selected). Queue: 1829 rules.
12200 rules inserted. Base: 3909 rules (410 with conclusion selected). Queue: 1688 rules.
12400 rules inserted. Base: 3901 rules (411 with conclusion selected). Queue: 1639 rules.
12600 rules inserted. Base: 3941 rules (415 with conclusion selected). Queue: 1553 rules.
12800 rules inserted. Base: 3977 rules (421 with conclusion selected). Queue: 1552 rules.
13000 rules inserted. Base: 3975 rules (421 with conclusion selected). Queue: 1485 rules.
13200 rules inserted. Base: 4014 rules (425 with conclusion selected). Queue: 1336 rules.
13400 rules inserted. Base: 3981 rules (425 with conclusion selected). Queue: 1155 rules.
13600 rules inserted. Base: 3993 rules (424 with conclusion selected). Queue: 1204 rules.
13800 rules inserted. Base: 3995 rules (426 with conclusion selected). Queue: 1114 rules.
14000 rules inserted. Base: 3961 rules (427 with conclusion selected). Queue: 966 rules.
14200 rules inserted. Base: 4048 rules (433 with conclusion selected). Queue: 900 rules.
14400 rules inserted. Base: 4088 rules (435 with conclusion selected). Queue: 789 rules.
14600 rules inserted. Base: 4087 rules (433 with conclusion selected). Queue: 710 rules.
14800 rules inserted. Base: 4069 rules (436 with conclusion selected). Queue: 564 rules.
15000 rules inserted. Base: 4075 rules (445 with conclusion selected). Queue: 574 rules.
15200 rules inserted. Base: 4140 rules (447 with conclusion selected). Queue: 534 rules.
15400 rules inserted. Base: 4188 rules (456 with conclusion selected). Queue: 512 rules.
15600 rules inserted. Base: 4158 rules (460 with conclusion selected). Queue: 498 rules.
15800 rules inserted. Base: 4183 rules (462 with conclusion selected). Queue: 425 rules.
16000 rules inserted. Base: 4186 rules (475 with conclusion selected). Queue: 431 rules.
16200 rules inserted. Base: 4167 rules (483 with conclusion selected). Queue: 422 rules.
16400 rules inserted. Base: 4182 rules (492 with conclusion selected). Queue: 316 rules.
16600 rules inserted. Base: 4153 rules (502 with conclusion selected). Queue: 328 rules.
16800 rules inserted. Base: 4176 rules (515 with conclusion selected). Queue: 236 rules.
17000 rules inserted. Base: 4131 rules (519 with conclusion selected). Queue: 214 rules.
17200 rules inserted. Base: 4156 rules (532 with conclusion selected). Queue: 297 rules.
17400 rules inserted. Base: 4133 rules (538 with conclusion selected). Queue: 222 rules.
17600 rules inserted. Base: 4074 rules (545 with conclusion selected). Queue: 179 rules.
17800 rules inserted. Base: 4025 rules (556 with conclusion selected). Queue: 122 rules.
18000 rules inserted. Base: 4045 rules (564 with conclusion selected). Queue: 109 rules.
18200 rules inserted. Base: 4018 rules (573 with conclusion selected). Queue: 86 rules.
18400 rules inserted. Base: 3952 rules (595 with conclusion selected). Queue: 10 rules.
Starting query inj-event(auth_ProverCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) ==> inj-event(auth_VerifierSendsLastMessageToProver(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken))
RESULT inj-event(auth_ProverCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) ==> inj-event(auth_VerifierSendsLastMessageToProver(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) is true.
-- Query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 198 rules (62 with conclusion selected). Queue: 111 rules.
400 rules inserted. Base: 383 rules (82 with conclusion selected). Queue: 183 rules.
600 rules inserted. Base: 539 rules (101 with conclusion selected). Queue: 173 rules.
800 rules inserted. Base: 692 rules (119 with conclusion selected). Queue: 175 rules.
1000 rules inserted. Base: 854 rules (161 with conclusion selected). Queue: 165 rules.
1200 rules inserted. Base: 1007 rules (187 with conclusion selected). Queue: 197 rules.
1400 rules inserted. Base: 1133 rules (203 with conclusion selected). Queue: 174 rules.
1600 rules inserted. Base: 1238 rules (215 with conclusion selected). Queue: 141 rules.
1800 rules inserted. Base: 1343 rules (230 with conclusion selected). Queue: 192 rules.
2000 rules inserted. Base: 1389 rules (246 with conclusion selected). Queue: 291 rules.
2200 rules inserted. Base: 1486 rules (255 with conclusion selected). Queue: 371 rules.
2400 rules inserted. Base: 1538 rules (264 with conclusion selected). Queue: 324 rules.
2600 rules inserted. Base: 1634 rules (280 with conclusion selected). Queue: 335 rules.
2800 rules inserted. Base: 1736 rules (285 with conclusion selected). Queue: 343 rules.
3000 rules inserted. Base: 1849 rules (294 with conclusion selected). Queue: 308 rules.
3200 rules inserted. Base: 1944 rules (299 with conclusion selected). Queue: 355 rules.
3400 rules inserted. Base: 2031 rules (307 with conclusion selected). Queue: 350 rules.
3600 rules inserted. Base: 2136 rules (314 with conclusion selected). Queue: 430 rules.
3800 rules inserted. Base: 2272 rules (323 with conclusion selected). Queue: 445 rules.
4000 rules inserted. Base: 2358 rules (326 with conclusion selected). Queue: 481 rules.
4200 rules inserted. Base: 2449 rules (330 with conclusion selected). Queue: 498 rules.
4400 rules inserted. Base: 2534 rules (333 with conclusion selected). Queue: 579 rules.
4600 rules inserted. Base: 2628 rules (337 with conclusion selected). Queue: 589 rules.
4800 rules inserted. Base: 2695 rules (337 with conclusion selected). Queue: 616 rules.
5000 rules inserted. Base: 2790 rules (339 with conclusion selected). Queue: 656 rules.
5200 rules inserted. Base: 2832 rules (344 with conclusion selected). Queue: 669 rules.
5400 rules inserted. Base: 2896 rules (344 with conclusion selected). Queue: 701 rules.
5600 rules inserted. Base: 2966 rules (345 with conclusion selected). Queue: 833 rules.
5800 rules inserted. Base: 3063 rules (348 with conclusion selected). Queue: 955 rules.
6000 rules inserted. Base: 3092 rules (350 with conclusion selected). Queue: 951 rules.
6200 rules inserted. Base: 3129 rules (350 with conclusion selected). Queue: 996 rules.
6400 rules inserted. Base: 3180 rules (349 with conclusion selected). Queue: 1124 rules.
6600 rules inserted. Base: 3272 rules (351 with conclusion selected). Queue: 1156 rules.
6800 rules inserted. Base: 3234 rules (349 with conclusion selected). Queue: 1203 rules.
7000 rules inserted. Base: 3289 rules (349 with conclusion selected). Queue: 1249 rules.
7200 rules inserted. Base: 3272 rules (349 with conclusion selected). Queue: 1227 rules.
7400 rules inserted. Base: 3349 rules (349 with conclusion selected). Queue: 1341 rules.
7600 rules inserted. Base: 3408 rules (356 with conclusion selected). Queue: 1385 rules.
7800 rules inserted. Base: 3449 rules (356 with conclusion selected). Queue: 1370 rules.
8000 rules inserted. Base: 3491 rules (360 with conclusion selected). Queue: 1390 rules.
8200 rules inserted. Base: 3561 rules (360 with conclusion selected). Queue: 1361 rules.
8400 rules inserted. Base: 3607 rules (362 with conclusion selected). Queue: 1271 rules.
8600 rules inserted. Base: 3645 rules (362 with conclusion selected). Queue: 1277 rules.
8800 rules inserted. Base: 3764 rules (368 with conclusion selected). Queue: 1326 rules.
9000 rules inserted. Base: 3856 rules (370 with conclusion selected). Queue: 1269 rules.
9200 rules inserted. Base: 3867 rules (368 with conclusion selected). Queue: 1187 rules.
9400 rules inserted. Base: 3901 rules (370 with conclusion selected). Queue: 1140 rules.
9600 rules inserted. Base: 3980 rules (370 with conclusion selected). Queue: 1033 rules.
9800 rules inserted. Base: 3983 rules (369 with conclusion selected). Queue: 1111 rules.
10000 rules inserted. Base: 4124 rules (378 with conclusion selected). Queue: 1125 rules.
10200 rules inserted. Base: 4210 rules (378 with conclusion selected). Queue: 1090 rules.
10400 rules inserted. Base: 4204 rules (380 with conclusion selected). Queue: 1027 rules.
10600 rules inserted. Base: 4228 rules (382 with conclusion selected). Queue: 1348 rules.
10800 rules inserted. Base: 4286 rules (383 with conclusion selected). Queue: 1374 rules.
11000 rules inserted. Base: 4415 rules (395 with conclusion selected). Queue: 1381 rules.
11200 rules inserted. Base: 4524 rules (395 with conclusion selected). Queue: 1469 rules.
11400 rules inserted. Base: 4517 rules (400 with conclusion selected). Queue: 1536 rules.
11600 rules inserted. Base: 4550 rules (404 with conclusion selected). Queue: 1633 rules.
11800 rules inserted. Base: 4552 rules (404 with conclusion selected). Queue: 1556 rules.
12000 rules inserted. Base: 4546 rules (403 with conclusion selected). Queue: 1731 rules.
12200 rules inserted. Base: 4614 rules (407 with conclusion selected). Queue: 1756 rules.
12400 rules inserted. Base: 4709 rules (410 with conclusion selected). Queue: 1771 rules.
12600 rules inserted. Base: 4736 rules (412 with conclusion selected). Queue: 1890 rules.
12800 rules inserted. Base: 4746 rules (413 with conclusion selected). Queue: 2225 rules.
13000 rules inserted. Base: 4770 rules (415 with conclusion selected). Queue: 2083 rules.
13200 rules inserted. Base: 4776 rules (417 with conclusion selected). Queue: 2007 rules.
13400 rules inserted. Base: 4752 rules (413 with conclusion selected). Queue: 1862 rules.
13600 rules inserted. Base: 4737 rules (414 with conclusion selected). Queue: 1832 rules.
13800 rules inserted. Base: 4780 rules (418 with conclusion selected). Queue: 1759 rules.
14000 rules inserted. Base: 4866 rules (420 with conclusion selected). Queue: 1718 rules.
14200 rules inserted. Base: 4889 rules (424 with conclusion selected). Queue: 1621 rules.
14400 rules inserted. Base: 4923 rules (428 with conclusion selected). Queue: 1582 rules.
14600 rules inserted. Base: 4928 rules (428 with conclusion selected). Queue: 1405 rules.
14800 rules inserted. Base: 4921 rules (428 with conclusion selected). Queue: 1321 rules.
15000 rules inserted. Base: 4922 rules (427 with conclusion selected). Queue: 1281 rules.
15200 rules inserted. Base: 4934 rules (429 with conclusion selected). Queue: 1215 rules.
15400 rules inserted. Base: 4926 rules (430 with conclusion selected). Queue: 1073 rules.
15600 rules inserted. Base: 4986 rules (438 with conclusion selected). Queue: 1006 rules.
15800 rules inserted. Base: 5071 rules (440 with conclusion selected). Queue: 931 rules.
16000 rules inserted. Base: 5074 rules (438 with conclusion selected). Queue: 867 rules.
16200 rules inserted. Base: 5061 rules (438 with conclusion selected). Queue: 693 rules.
16400 rules inserted. Base: 5062 rules (444 with conclusion selected). Queue: 706 rules.
16600 rules inserted. Base: 5110 rules (452 with conclusion selected). Queue: 634 rules.
16800 rules inserted. Base: 5188 rules (452 with conclusion selected). Queue: 582 rules.
17000 rules inserted. Base: 5194 rules (461 with conclusion selected). Queue: 572 rules.
17200 rules inserted. Base: 5136 rules (464 with conclusion selected). Queue: 556 rules.
17400 rules inserted. Base: 5203 rules (466 with conclusion selected). Queue: 491 rules.
17600 rules inserted. Base: 5192 rules (477 with conclusion selected). Queue: 493 rules.
17800 rules inserted. Base: 5144 rules (485 with conclusion selected). Queue: 481 rules.
18000 rules inserted. Base: 5198 rules (491 with conclusion selected). Queue: 363 rules.
18200 rules inserted. Base: 5115 rules (500 with conclusion selected). Queue: 380 rules.
18400 rules inserted. Base: 5140 rules (509 with conclusion selected). Queue: 288 rules.
18600 rules inserted. Base: 5104 rules (521 with conclusion selected). Queue: 274 rules.
18800 rules inserted. Base: 5043 rules (529 with conclusion selected). Queue: 239 rules.
19000 rules inserted. Base: 5029 rules (545 with conclusion selected). Queue: 318 rules.
19200 rules inserted. Base: 4934 rules (547 with conclusion selected). Queue: 248 rules.
19400 rules inserted. Base: 4872 rules (556 with conclusion selected). Queue: 208 rules.
19600 rules inserted. Base: 4813 rules (561 with conclusion selected). Queue: 149 rules.
19800 rules inserted. Base: 4840 rules (575 with conclusion selected). Queue: 167 rules.
20000 rules inserted. Base: 4836 rules (585 with conclusion selected). Queue: 149 rules.
20200 rules inserted. Base: 4790 rules (590 with conclusion selected). Queue: 43 rules.
Starting query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp))
goal reachable: begin(auth_ProverSendsLastMessageToVerifier(aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_verifier[])),aenc(sign((n_p_16,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)),aenc(sign(sign((n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17))),@occ138_1) -> end(@occ284_1,auth_VerifierCompletesProtocol(aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_verifier[])),aenc(sign((n_p_16,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)),aenc(sign(sign((n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17))))
The hypothesis occurs strictly before the conclusion.
Abbreviations:
n_p_17 = n_p_2[!1 = @sid]
ssk_18 = ssk_2[!1 = @sid]
n_i_8 = n_i[x = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_issuer[])),!1 = @sid_1]
ssk_19 = ssk[x = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_issuer[])),!1 = @sid_1]
n_issuing_8 = n_issuing[x_1 = aenc(sign(sign((n_i_8,genDID(pk(sk_prover[]),sk_prover[]),genDID(pk(sk_issuer[]),sk_issuer[])),sk_prover[]),ssk_18),pk(ssk_19)),x = aenc(sign((n_p_17,pk(ssk_18)),ssk_18),pk(sk_issuer[])),!1 = @sid_1]
n_p_16 = n_p_3[!2 = @sid_2,x_5 = aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_19),pk(ssk_18)),x_4 = aenc(sign((n_p_17,n_i_8,pk(ssk_19)),sk_issuer[]),pk(ssk_18)),!1 = @sid]
ssk_16 = ssk_3[!2 = @sid_2,x_5 = aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_19),pk(ssk_18)),x_4 = aenc(sign((n_p_17,n_i_8,pk(ssk_19)),sk_issuer[]),pk(ssk_18)),!1 = @sid]
n_v_8 = n_v_2[x_14 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
ssk_17 = ssk_6[x_14 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
n_c_8 = n_c_2[x_15 = aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),x_14 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
@occ284_1 = @occ284[x_16 = aenc(sign(sign((n_c_8,genDID(pk(sk_verifier[]),sk_verifier[]),issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[])),sk_prover[]),ssk_16),pk(ssk_17)),x_15 = aenc(sign((n_v_8,uri),ssk_16),pk(ssk_17)),x_14 = aenc(sign((n_p_16,pk(ssk_16)),ssk_16),pk(sk_verifier[])),!1 = @sid_3]
@occ138_1 = @occ138[x_7 = aenc(sign((n_c_8,makeRule(genDID(pk(sk_prover[]),sk_prover[]),attr,genDID(pk(sk_issuer[]),sk_issuer[]))),ssk_17),pk(ssk_16)),x_6 = aenc(sign((n_p_16,n_v_8,pk(ssk_17)),sk_verifier[]),pk(ssk_16)),!2 = @sid_2,x_5 = aenc(sign((issueVC(genDID(pk(sk_prover[]),sk_prover[]),attr,sk_issuer[]),genDID(pk(sk_prover[]),sk_prover[]),n_issuing_8),ssk_19),pk(ssk_18)),x_4 = aenc(sign((n_p_17,n_i_8,pk(ssk_19)),sk_issuer[]),pk(ssk_18)),!1 = @sid]
RESULT inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) is true.

--------------------------------------------------------------
Verification summary:

Query not attacker_p1(n_p_fromHolder[]) is false.

Query not attacker_p1(n_i_fromHolder[]) is true.

Query not attacker_p1(providingDID_fromHolder[]) is true.

Query not attacker_p1(n_p_fromIssuer[]) is false.

Query not attacker_p1(credIssuing_fromIssuer[]) is true.

Query not attacker_p1(n_p_fromProver[]) is true.

Query not attacker_p1(unsigned_vp_fromProver[]) is true.

Query not attacker_p1(vp_fromProver[]) is true.

Query not attacker_p1(cred_fromProver[]) is true.

Query not attacker_p1(access_token_fromProver[]) is true.

Query not attacker_p1(n_p_fromVerifier[]) is false.

Query not attacker_p1(rule_fromVerifier[]) is false.

Query not attacker_p1(credRequest_fromVerifier[]) is true.

Query not attacker_p1(unauth_vp_fromVerifier[]) is true.

Query not attacker_p1(vp_fromVerifier[]) is true.

Query not attacker_p1(cred_fromVerifier[]) is false.

Query not attacker_p1(access_token_fromVerifier[]) is true.

Query inj-event(auth_ProverCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) ==> inj-event(auth_VerifierSendsLastMessageToProver(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp,m_accessToken)) is true.

Query inj-event(auth_VerifierCompletesProtocol(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) ==> inj-event(auth_ProverSendsLastMessageToVerifier(m_handshakeReq,m_handshakeResp,m_uri,m_rule,m_vp)) is true.

--------------------------------------------------------------

